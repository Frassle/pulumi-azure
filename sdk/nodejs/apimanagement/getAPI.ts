// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export function getAPI(args: GetAPIArgs, opts?: pulumi.InvokeOptions): Promise<GetAPIResult> {
    return pulumi.runtime.invoke("azure:apimanagement/getAPI:getAPI", {
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

/**
 * A collection of arguments for invoking getAPI.
 */
export interface GetAPIArgs {
    readonly name: string;
    readonly resourceGroupName: string;
}

/**
 * A collection of values returned by getAPI.
 */
export interface GetAPIResult {
    readonly additionalLocations: { gatewayRegionalUrl: string, location: string, publicIpAddresses: string[] }[];
    readonly gatewayRegionalUrl: string;
    readonly gatewayUrl: string;
    readonly hostnameConfigurations: { managements: { hostName: string, keyVaultId: string, negotiateClientCertificate: boolean }[], portals: { hostName: string, keyVaultId: string, negotiateClientCertificate: boolean }[], proxies: { defaultSslBinding: boolean, hostName: string, keyVaultId: string, negotiateClientCertificate: boolean }[], scms: { hostName: string, keyVaultId: string, negotiateClientCertificate: boolean }[] }[];
    readonly location: string;
    readonly managementApiUrl: string;
    readonly notificationSenderEmail: string;
    readonly portalUrl: string;
    readonly publicIpAddresses: string[];
    readonly publisherEmail: string;
    readonly publisherName: string;
    readonly scmUrl: string;
    readonly sku: { capacity: number, name: string };
    readonly tags: {[key: string]: any};
    /**
     * id is the provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}
