// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class AnalyticsFirewallRule extends pulumi.CustomResource {
    /**
     * Get an existing AnalyticsFirewallRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AnalyticsFirewallRuleState, opts?: pulumi.CustomResourceOptions): AnalyticsFirewallRule {
        return new AnalyticsFirewallRule(name, <any>state, { ...opts, id: id });
    }

    public readonly accountName: pulumi.Output<string>;
    public readonly endIpAddress: pulumi.Output<string>;
    public readonly name: pulumi.Output<string>;
    public readonly resourceGroupName: pulumi.Output<string>;
    public readonly startIpAddress: pulumi.Output<string>;

    /**
     * Create a AnalyticsFirewallRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AnalyticsFirewallRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AnalyticsFirewallRuleArgs | AnalyticsFirewallRuleState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: AnalyticsFirewallRuleState = argsOrState as AnalyticsFirewallRuleState | undefined;
            inputs["accountName"] = state ? state.accountName : undefined;
            inputs["endIpAddress"] = state ? state.endIpAddress : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            inputs["startIpAddress"] = state ? state.startIpAddress : undefined;
        } else {
            const args = argsOrState as AnalyticsFirewallRuleArgs | undefined;
            if (!args || args.accountName === undefined) {
                throw new Error("Missing required property 'accountName'");
            }
            if (!args || args.endIpAddress === undefined) {
                throw new Error("Missing required property 'endIpAddress'");
            }
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (!args || args.startIpAddress === undefined) {
                throw new Error("Missing required property 'startIpAddress'");
            }
            inputs["accountName"] = args ? args.accountName : undefined;
            inputs["endIpAddress"] = args ? args.endIpAddress : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["startIpAddress"] = args ? args.startIpAddress : undefined;
        }
        super("azure:datalake/analyticsFirewallRule:AnalyticsFirewallRule", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AnalyticsFirewallRule resources.
 */
export interface AnalyticsFirewallRuleState {
    readonly accountName?: pulumi.Input<string>;
    readonly endIpAddress?: pulumi.Input<string>;
    readonly name?: pulumi.Input<string>;
    readonly resourceGroupName?: pulumi.Input<string>;
    readonly startIpAddress?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AnalyticsFirewallRule resource.
 */
export interface AnalyticsFirewallRuleArgs {
    readonly accountName: pulumi.Input<string>;
    readonly endIpAddress: pulumi.Input<string>;
    readonly name?: pulumi.Input<string>;
    readonly resourceGroupName: pulumi.Input<string>;
    readonly startIpAddress: pulumi.Input<string>;
}
