// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class SharedImageVersion extends pulumi.CustomResource {
    /**
     * Get an existing SharedImageVersion resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SharedImageVersionState, opts?: pulumi.CustomResourceOptions): SharedImageVersion {
        return new SharedImageVersion(name, <any>state, { ...opts, id: id });
    }

    public readonly excludeFromLatest: pulumi.Output<boolean | undefined>;
    public readonly galleryName: pulumi.Output<string>;
    public readonly imageName: pulumi.Output<string>;
    public readonly location: pulumi.Output<string>;
    public readonly managedImageId: pulumi.Output<string>;
    public readonly name: pulumi.Output<string>;
    public readonly resourceGroupName: pulumi.Output<string>;
    public readonly tags: pulumi.Output<{[key: string]: any}>;
    public readonly targetRegions: pulumi.Output<{ name: string, regionalReplicaCount: number }[]>;

    /**
     * Create a SharedImageVersion resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SharedImageVersionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SharedImageVersionArgs | SharedImageVersionState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: SharedImageVersionState = argsOrState as SharedImageVersionState | undefined;
            inputs["excludeFromLatest"] = state ? state.excludeFromLatest : undefined;
            inputs["galleryName"] = state ? state.galleryName : undefined;
            inputs["imageName"] = state ? state.imageName : undefined;
            inputs["location"] = state ? state.location : undefined;
            inputs["managedImageId"] = state ? state.managedImageId : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["targetRegions"] = state ? state.targetRegions : undefined;
        } else {
            const args = argsOrState as SharedImageVersionArgs | undefined;
            if (!args || args.galleryName === undefined) {
                throw new Error("Missing required property 'galleryName'");
            }
            if (!args || args.imageName === undefined) {
                throw new Error("Missing required property 'imageName'");
            }
            if (!args || args.location === undefined) {
                throw new Error("Missing required property 'location'");
            }
            if (!args || args.managedImageId === undefined) {
                throw new Error("Missing required property 'managedImageId'");
            }
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (!args || args.targetRegions === undefined) {
                throw new Error("Missing required property 'targetRegions'");
            }
            inputs["excludeFromLatest"] = args ? args.excludeFromLatest : undefined;
            inputs["galleryName"] = args ? args.galleryName : undefined;
            inputs["imageName"] = args ? args.imageName : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["managedImageId"] = args ? args.managedImageId : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["targetRegions"] = args ? args.targetRegions : undefined;
        }
        super("azure:compute/sharedImageVersion:SharedImageVersion", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SharedImageVersion resources.
 */
export interface SharedImageVersionState {
    readonly excludeFromLatest?: pulumi.Input<boolean>;
    readonly galleryName?: pulumi.Input<string>;
    readonly imageName?: pulumi.Input<string>;
    readonly location?: pulumi.Input<string>;
    readonly managedImageId?: pulumi.Input<string>;
    readonly name?: pulumi.Input<string>;
    readonly resourceGroupName?: pulumi.Input<string>;
    readonly tags?: pulumi.Input<{[key: string]: any}>;
    readonly targetRegions?: pulumi.Input<pulumi.Input<{ name: pulumi.Input<string>, regionalReplicaCount: pulumi.Input<number> }>[]>;
}

/**
 * The set of arguments for constructing a SharedImageVersion resource.
 */
export interface SharedImageVersionArgs {
    readonly excludeFromLatest?: pulumi.Input<boolean>;
    readonly galleryName: pulumi.Input<string>;
    readonly imageName: pulumi.Input<string>;
    readonly location: pulumi.Input<string>;
    readonly managedImageId: pulumi.Input<string>;
    readonly name?: pulumi.Input<string>;
    readonly resourceGroupName: pulumi.Input<string>;
    readonly tags?: pulumi.Input<{[key: string]: any}>;
    readonly targetRegions: pulumi.Input<pulumi.Input<{ name: pulumi.Input<string>, regionalReplicaCount: pulumi.Input<number> }>[]>;
}
