// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class DataDiskAttachment extends pulumi.CustomResource {
    /**
     * Get an existing DataDiskAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DataDiskAttachmentState, opts?: pulumi.CustomResourceOptions): DataDiskAttachment {
        return new DataDiskAttachment(name, <any>state, { ...opts, id: id });
    }

    public readonly caching: pulumi.Output<string>;
    public readonly createOption: pulumi.Output<string | undefined>;
    public readonly lun: pulumi.Output<number>;
    public readonly managedDiskId: pulumi.Output<string>;
    public readonly virtualMachineId: pulumi.Output<string>;
    public readonly writeAcceleratorEnabled: pulumi.Output<boolean | undefined>;

    /**
     * Create a DataDiskAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DataDiskAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DataDiskAttachmentArgs | DataDiskAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: DataDiskAttachmentState = argsOrState as DataDiskAttachmentState | undefined;
            inputs["caching"] = state ? state.caching : undefined;
            inputs["createOption"] = state ? state.createOption : undefined;
            inputs["lun"] = state ? state.lun : undefined;
            inputs["managedDiskId"] = state ? state.managedDiskId : undefined;
            inputs["virtualMachineId"] = state ? state.virtualMachineId : undefined;
            inputs["writeAcceleratorEnabled"] = state ? state.writeAcceleratorEnabled : undefined;
        } else {
            const args = argsOrState as DataDiskAttachmentArgs | undefined;
            if (!args || args.caching === undefined) {
                throw new Error("Missing required property 'caching'");
            }
            if (!args || args.lun === undefined) {
                throw new Error("Missing required property 'lun'");
            }
            if (!args || args.managedDiskId === undefined) {
                throw new Error("Missing required property 'managedDiskId'");
            }
            if (!args || args.virtualMachineId === undefined) {
                throw new Error("Missing required property 'virtualMachineId'");
            }
            inputs["caching"] = args ? args.caching : undefined;
            inputs["createOption"] = args ? args.createOption : undefined;
            inputs["lun"] = args ? args.lun : undefined;
            inputs["managedDiskId"] = args ? args.managedDiskId : undefined;
            inputs["virtualMachineId"] = args ? args.virtualMachineId : undefined;
            inputs["writeAcceleratorEnabled"] = args ? args.writeAcceleratorEnabled : undefined;
        }
        super("azure:compute/dataDiskAttachment:DataDiskAttachment", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DataDiskAttachment resources.
 */
export interface DataDiskAttachmentState {
    readonly caching?: pulumi.Input<string>;
    readonly createOption?: pulumi.Input<string>;
    readonly lun?: pulumi.Input<number>;
    readonly managedDiskId?: pulumi.Input<string>;
    readonly virtualMachineId?: pulumi.Input<string>;
    readonly writeAcceleratorEnabled?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a DataDiskAttachment resource.
 */
export interface DataDiskAttachmentArgs {
    readonly caching: pulumi.Input<string>;
    readonly createOption?: pulumi.Input<string>;
    readonly lun: pulumi.Input<number>;
    readonly managedDiskId: pulumi.Input<string>;
    readonly virtualMachineId: pulumi.Input<string>;
    readonly writeAcceleratorEnabled?: pulumi.Input<boolean>;
}
