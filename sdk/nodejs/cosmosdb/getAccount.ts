// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export function getAccount(args: GetAccountArgs, opts?: pulumi.InvokeOptions): Promise<GetAccountResult> {
    return pulumi.runtime.invoke("azure:cosmosdb/getAccount:getAccount", {
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

/**
 * A collection of arguments for invoking getAccount.
 */
export interface GetAccountArgs {
    readonly name: string;
    readonly resourceGroupName: string;
}

/**
 * A collection of values returned by getAccount.
 */
export interface GetAccountResult {
    readonly capabilities: { name: string }[];
    readonly consistencyPolicies: { consistencyLevel: string, maxIntervalInSeconds: number, maxStalenessPrefix: number }[];
    readonly enableAutomaticFailover: boolean;
    readonly enableMultipleWriteLocations: boolean;
    readonly endpoint: string;
    readonly geoLocations: { failoverPriority: number, id: string, location: string }[];
    readonly ipRangeFilter: string;
    readonly isVirtualNetworkFilterEnabled: boolean;
    readonly kind: string;
    readonly location: string;
    readonly offerType: string;
    readonly primaryMasterKey: string;
    readonly primaryReadonlyMasterKey: string;
    readonly readEndpoints: string[];
    readonly secondaryMasterKey: string;
    readonly secondaryReadonlyMasterKey: string;
    readonly tags: {[key: string]: any};
    readonly virtualNetworkRules: { id: string }[];
    readonly writeEndpoints: string[];
    /**
     * id is the provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}
