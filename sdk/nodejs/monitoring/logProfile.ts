// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class LogProfile extends pulumi.CustomResource {
    /**
     * Get an existing LogProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LogProfileState, opts?: pulumi.CustomResourceOptions): LogProfile {
        return new LogProfile(name, <any>state, { ...opts, id: id });
    }

    public readonly categories: pulumi.Output<string[]>;
    public readonly locations: pulumi.Output<string[]>;
    public readonly name: pulumi.Output<string>;
    public readonly retentionPolicy: pulumi.Output<{ days?: number, enabled: boolean }>;
    public readonly servicebusRuleId: pulumi.Output<string | undefined>;
    public readonly storageAccountId: pulumi.Output<string | undefined>;

    /**
     * Create a LogProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LogProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LogProfileArgs | LogProfileState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: LogProfileState = argsOrState as LogProfileState | undefined;
            inputs["categories"] = state ? state.categories : undefined;
            inputs["locations"] = state ? state.locations : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["retentionPolicy"] = state ? state.retentionPolicy : undefined;
            inputs["servicebusRuleId"] = state ? state.servicebusRuleId : undefined;
            inputs["storageAccountId"] = state ? state.storageAccountId : undefined;
        } else {
            const args = argsOrState as LogProfileArgs | undefined;
            if (!args || args.categories === undefined) {
                throw new Error("Missing required property 'categories'");
            }
            if (!args || args.locations === undefined) {
                throw new Error("Missing required property 'locations'");
            }
            if (!args || args.retentionPolicy === undefined) {
                throw new Error("Missing required property 'retentionPolicy'");
            }
            inputs["categories"] = args ? args.categories : undefined;
            inputs["locations"] = args ? args.locations : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["retentionPolicy"] = args ? args.retentionPolicy : undefined;
            inputs["servicebusRuleId"] = args ? args.servicebusRuleId : undefined;
            inputs["storageAccountId"] = args ? args.storageAccountId : undefined;
        }
        super("azure:monitoring/logProfile:LogProfile", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering LogProfile resources.
 */
export interface LogProfileState {
    readonly categories?: pulumi.Input<pulumi.Input<string>[]>;
    readonly locations?: pulumi.Input<pulumi.Input<string>[]>;
    readonly name?: pulumi.Input<string>;
    readonly retentionPolicy?: pulumi.Input<{ days?: pulumi.Input<number>, enabled: pulumi.Input<boolean> }>;
    readonly servicebusRuleId?: pulumi.Input<string>;
    readonly storageAccountId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a LogProfile resource.
 */
export interface LogProfileArgs {
    readonly categories: pulumi.Input<pulumi.Input<string>[]>;
    readonly locations: pulumi.Input<pulumi.Input<string>[]>;
    readonly name?: pulumi.Input<string>;
    readonly retentionPolicy: pulumi.Input<{ days?: pulumi.Input<number>, enabled: pulumi.Input<boolean> }>;
    readonly servicebusRuleId?: pulumi.Input<string>;
    readonly storageAccountId?: pulumi.Input<string>;
}
