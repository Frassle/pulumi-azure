// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class Schedule extends pulumi.CustomResource {
    /**
     * Get an existing Schedule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ScheduleState, opts?: pulumi.CustomResourceOptions): Schedule {
        return new Schedule(name, <any>state, { ...opts, id: id });
    }

    public readonly accountName: pulumi.Output<string>;
    public readonly automationAccountName: pulumi.Output<string>;
    public readonly description: pulumi.Output<string | undefined>;
    public readonly expiryTime: pulumi.Output<string>;
    public readonly frequency: pulumi.Output<string>;
    public readonly interval: pulumi.Output<number>;
    public readonly monthDays: pulumi.Output<number[] | undefined>;
    public readonly monthlyOccurrences: pulumi.Output<{ day: string, occurrence: number }[] | undefined>;
    public readonly name: pulumi.Output<string>;
    public readonly resourceGroupName: pulumi.Output<string>;
    public readonly startTime: pulumi.Output<string>;
    public readonly timezone: pulumi.Output<string | undefined>;
    public readonly weekDays: pulumi.Output<string[] | undefined>;

    /**
     * Create a Schedule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ScheduleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ScheduleArgs | ScheduleState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: ScheduleState = argsOrState as ScheduleState | undefined;
            inputs["accountName"] = state ? state.accountName : undefined;
            inputs["automationAccountName"] = state ? state.automationAccountName : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["expiryTime"] = state ? state.expiryTime : undefined;
            inputs["frequency"] = state ? state.frequency : undefined;
            inputs["interval"] = state ? state.interval : undefined;
            inputs["monthDays"] = state ? state.monthDays : undefined;
            inputs["monthlyOccurrences"] = state ? state.monthlyOccurrences : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            inputs["startTime"] = state ? state.startTime : undefined;
            inputs["timezone"] = state ? state.timezone : undefined;
            inputs["weekDays"] = state ? state.weekDays : undefined;
        } else {
            const args = argsOrState as ScheduleArgs | undefined;
            if (!args || args.frequency === undefined) {
                throw new Error("Missing required property 'frequency'");
            }
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            inputs["accountName"] = args ? args.accountName : undefined;
            inputs["automationAccountName"] = args ? args.automationAccountName : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["expiryTime"] = args ? args.expiryTime : undefined;
            inputs["frequency"] = args ? args.frequency : undefined;
            inputs["interval"] = args ? args.interval : undefined;
            inputs["monthDays"] = args ? args.monthDays : undefined;
            inputs["monthlyOccurrences"] = args ? args.monthlyOccurrences : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["startTime"] = args ? args.startTime : undefined;
            inputs["timezone"] = args ? args.timezone : undefined;
            inputs["weekDays"] = args ? args.weekDays : undefined;
        }
        super("azure:automation/schedule:Schedule", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Schedule resources.
 */
export interface ScheduleState {
    readonly accountName?: pulumi.Input<string>;
    readonly automationAccountName?: pulumi.Input<string>;
    readonly description?: pulumi.Input<string>;
    readonly expiryTime?: pulumi.Input<string>;
    readonly frequency?: pulumi.Input<string>;
    readonly interval?: pulumi.Input<number>;
    readonly monthDays?: pulumi.Input<pulumi.Input<number>[]>;
    readonly monthlyOccurrences?: pulumi.Input<pulumi.Input<{ day: pulumi.Input<string>, occurrence: pulumi.Input<number> }>[]>;
    readonly name?: pulumi.Input<string>;
    readonly resourceGroupName?: pulumi.Input<string>;
    readonly startTime?: pulumi.Input<string>;
    readonly timezone?: pulumi.Input<string>;
    readonly weekDays?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a Schedule resource.
 */
export interface ScheduleArgs {
    readonly accountName?: pulumi.Input<string>;
    readonly automationAccountName?: pulumi.Input<string>;
    readonly description?: pulumi.Input<string>;
    readonly expiryTime?: pulumi.Input<string>;
    readonly frequency: pulumi.Input<string>;
    readonly interval?: pulumi.Input<number>;
    readonly monthDays?: pulumi.Input<pulumi.Input<number>[]>;
    readonly monthlyOccurrences?: pulumi.Input<pulumi.Input<{ day: pulumi.Input<string>, occurrence: pulumi.Input<number> }>[]>;
    readonly name?: pulumi.Input<string>;
    readonly resourceGroupName: pulumi.Input<string>;
    readonly startTime?: pulumi.Input<string>;
    readonly timezone?: pulumi.Input<string>;
    readonly weekDays?: pulumi.Input<pulumi.Input<string>[]>;
}
