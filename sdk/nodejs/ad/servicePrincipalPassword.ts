// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class ServicePrincipalPassword extends pulumi.CustomResource {
    /**
     * Get an existing ServicePrincipalPassword resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServicePrincipalPasswordState, opts?: pulumi.CustomResourceOptions): ServicePrincipalPassword {
        return new ServicePrincipalPassword(name, <any>state, { ...opts, id: id });
    }

    public readonly endDate: pulumi.Output<string>;
    public readonly keyId: pulumi.Output<string>;
    public readonly servicePrincipalId: pulumi.Output<string>;
    public readonly startDate: pulumi.Output<string>;
    public readonly value: pulumi.Output<string>;

    /**
     * Create a ServicePrincipalPassword resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServicePrincipalPasswordArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServicePrincipalPasswordArgs | ServicePrincipalPasswordState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: ServicePrincipalPasswordState = argsOrState as ServicePrincipalPasswordState | undefined;
            inputs["endDate"] = state ? state.endDate : undefined;
            inputs["keyId"] = state ? state.keyId : undefined;
            inputs["servicePrincipalId"] = state ? state.servicePrincipalId : undefined;
            inputs["startDate"] = state ? state.startDate : undefined;
            inputs["value"] = state ? state.value : undefined;
        } else {
            const args = argsOrState as ServicePrincipalPasswordArgs | undefined;
            if (!args || args.endDate === undefined) {
                throw new Error("Missing required property 'endDate'");
            }
            if (!args || args.servicePrincipalId === undefined) {
                throw new Error("Missing required property 'servicePrincipalId'");
            }
            if (!args || args.value === undefined) {
                throw new Error("Missing required property 'value'");
            }
            inputs["endDate"] = args ? args.endDate : undefined;
            inputs["keyId"] = args ? args.keyId : undefined;
            inputs["servicePrincipalId"] = args ? args.servicePrincipalId : undefined;
            inputs["startDate"] = args ? args.startDate : undefined;
            inputs["value"] = args ? args.value : undefined;
        }
        super("azure:ad/servicePrincipalPassword:ServicePrincipalPassword", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ServicePrincipalPassword resources.
 */
export interface ServicePrincipalPasswordState {
    readonly endDate?: pulumi.Input<string>;
    readonly keyId?: pulumi.Input<string>;
    readonly servicePrincipalId?: pulumi.Input<string>;
    readonly startDate?: pulumi.Input<string>;
    readonly value?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ServicePrincipalPassword resource.
 */
export interface ServicePrincipalPasswordArgs {
    readonly endDate: pulumi.Input<string>;
    readonly keyId?: pulumi.Input<string>;
    readonly servicePrincipalId: pulumi.Input<string>;
    readonly startDate?: pulumi.Input<string>;
    readonly value: pulumi.Input<string>;
}
