// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class NetworkSecurityRule extends pulumi.CustomResource {
    /**
     * Get an existing NetworkSecurityRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetworkSecurityRuleState, opts?: pulumi.CustomResourceOptions): NetworkSecurityRule {
        return new NetworkSecurityRule(name, <any>state, { ...opts, id: id });
    }

    public readonly access: pulumi.Output<string>;
    public readonly description: pulumi.Output<string | undefined>;
    public readonly destinationAddressPrefix: pulumi.Output<string | undefined>;
    public readonly destinationAddressPrefixes: pulumi.Output<string[] | undefined>;
    public readonly destinationApplicationSecurityGroupIds: pulumi.Output<string | undefined>;
    public readonly destinationPortRange: pulumi.Output<string | undefined>;
    public readonly destinationPortRanges: pulumi.Output<string[] | undefined>;
    public readonly direction: pulumi.Output<string>;
    public readonly name: pulumi.Output<string>;
    public readonly networkSecurityGroupName: pulumi.Output<string>;
    public readonly priority: pulumi.Output<number>;
    public readonly protocol: pulumi.Output<string>;
    public readonly resourceGroupName: pulumi.Output<string>;
    public readonly sourceAddressPrefix: pulumi.Output<string | undefined>;
    public readonly sourceAddressPrefixes: pulumi.Output<string[] | undefined>;
    public readonly sourceApplicationSecurityGroupIds: pulumi.Output<string | undefined>;
    public readonly sourcePortRange: pulumi.Output<string | undefined>;
    public readonly sourcePortRanges: pulumi.Output<string[] | undefined>;

    /**
     * Create a NetworkSecurityRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkSecurityRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NetworkSecurityRuleArgs | NetworkSecurityRuleState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: NetworkSecurityRuleState = argsOrState as NetworkSecurityRuleState | undefined;
            inputs["access"] = state ? state.access : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["destinationAddressPrefix"] = state ? state.destinationAddressPrefix : undefined;
            inputs["destinationAddressPrefixes"] = state ? state.destinationAddressPrefixes : undefined;
            inputs["destinationApplicationSecurityGroupIds"] = state ? state.destinationApplicationSecurityGroupIds : undefined;
            inputs["destinationPortRange"] = state ? state.destinationPortRange : undefined;
            inputs["destinationPortRanges"] = state ? state.destinationPortRanges : undefined;
            inputs["direction"] = state ? state.direction : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["networkSecurityGroupName"] = state ? state.networkSecurityGroupName : undefined;
            inputs["priority"] = state ? state.priority : undefined;
            inputs["protocol"] = state ? state.protocol : undefined;
            inputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            inputs["sourceAddressPrefix"] = state ? state.sourceAddressPrefix : undefined;
            inputs["sourceAddressPrefixes"] = state ? state.sourceAddressPrefixes : undefined;
            inputs["sourceApplicationSecurityGroupIds"] = state ? state.sourceApplicationSecurityGroupIds : undefined;
            inputs["sourcePortRange"] = state ? state.sourcePortRange : undefined;
            inputs["sourcePortRanges"] = state ? state.sourcePortRanges : undefined;
        } else {
            const args = argsOrState as NetworkSecurityRuleArgs | undefined;
            if (!args || args.access === undefined) {
                throw new Error("Missing required property 'access'");
            }
            if (!args || args.direction === undefined) {
                throw new Error("Missing required property 'direction'");
            }
            if (!args || args.networkSecurityGroupName === undefined) {
                throw new Error("Missing required property 'networkSecurityGroupName'");
            }
            if (!args || args.priority === undefined) {
                throw new Error("Missing required property 'priority'");
            }
            if (!args || args.protocol === undefined) {
                throw new Error("Missing required property 'protocol'");
            }
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            inputs["access"] = args ? args.access : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["destinationAddressPrefix"] = args ? args.destinationAddressPrefix : undefined;
            inputs["destinationAddressPrefixes"] = args ? args.destinationAddressPrefixes : undefined;
            inputs["destinationApplicationSecurityGroupIds"] = args ? args.destinationApplicationSecurityGroupIds : undefined;
            inputs["destinationPortRange"] = args ? args.destinationPortRange : undefined;
            inputs["destinationPortRanges"] = args ? args.destinationPortRanges : undefined;
            inputs["direction"] = args ? args.direction : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["networkSecurityGroupName"] = args ? args.networkSecurityGroupName : undefined;
            inputs["priority"] = args ? args.priority : undefined;
            inputs["protocol"] = args ? args.protocol : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["sourceAddressPrefix"] = args ? args.sourceAddressPrefix : undefined;
            inputs["sourceAddressPrefixes"] = args ? args.sourceAddressPrefixes : undefined;
            inputs["sourceApplicationSecurityGroupIds"] = args ? args.sourceApplicationSecurityGroupIds : undefined;
            inputs["sourcePortRange"] = args ? args.sourcePortRange : undefined;
            inputs["sourcePortRanges"] = args ? args.sourcePortRanges : undefined;
        }
        super("azure:network/networkSecurityRule:NetworkSecurityRule", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NetworkSecurityRule resources.
 */
export interface NetworkSecurityRuleState {
    readonly access?: pulumi.Input<string>;
    readonly description?: pulumi.Input<string>;
    readonly destinationAddressPrefix?: pulumi.Input<string>;
    readonly destinationAddressPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
    readonly destinationApplicationSecurityGroupIds?: pulumi.Input<string>;
    readonly destinationPortRange?: pulumi.Input<string>;
    readonly destinationPortRanges?: pulumi.Input<pulumi.Input<string>[]>;
    readonly direction?: pulumi.Input<string>;
    readonly name?: pulumi.Input<string>;
    readonly networkSecurityGroupName?: pulumi.Input<string>;
    readonly priority?: pulumi.Input<number>;
    readonly protocol?: pulumi.Input<string>;
    readonly resourceGroupName?: pulumi.Input<string>;
    readonly sourceAddressPrefix?: pulumi.Input<string>;
    readonly sourceAddressPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
    readonly sourceApplicationSecurityGroupIds?: pulumi.Input<string>;
    readonly sourcePortRange?: pulumi.Input<string>;
    readonly sourcePortRanges?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a NetworkSecurityRule resource.
 */
export interface NetworkSecurityRuleArgs {
    readonly access: pulumi.Input<string>;
    readonly description?: pulumi.Input<string>;
    readonly destinationAddressPrefix?: pulumi.Input<string>;
    readonly destinationAddressPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
    readonly destinationApplicationSecurityGroupIds?: pulumi.Input<string>;
    readonly destinationPortRange?: pulumi.Input<string>;
    readonly destinationPortRanges?: pulumi.Input<pulumi.Input<string>[]>;
    readonly direction: pulumi.Input<string>;
    readonly name?: pulumi.Input<string>;
    readonly networkSecurityGroupName: pulumi.Input<string>;
    readonly priority: pulumi.Input<number>;
    readonly protocol: pulumi.Input<string>;
    readonly resourceGroupName: pulumi.Input<string>;
    readonly sourceAddressPrefix?: pulumi.Input<string>;
    readonly sourceAddressPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
    readonly sourceApplicationSecurityGroupIds?: pulumi.Input<string>;
    readonly sourcePortRange?: pulumi.Input<string>;
    readonly sourcePortRanges?: pulumi.Input<pulumi.Input<string>[]>;
}
