// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class FirewallApplicationRuleCollection extends pulumi.CustomResource {
    /**
     * Get an existing FirewallApplicationRuleCollection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FirewallApplicationRuleCollectionState, opts?: pulumi.CustomResourceOptions): FirewallApplicationRuleCollection {
        return new FirewallApplicationRuleCollection(name, <any>state, { ...opts, id: id });
    }

    public readonly action: pulumi.Output<string>;
    public readonly azureFirewallName: pulumi.Output<string>;
    public readonly name: pulumi.Output<string>;
    public readonly priority: pulumi.Output<number>;
    public readonly resourceGroupName: pulumi.Output<string>;
    public readonly rules: pulumi.Output<{ description?: string, fqdnTags?: string[], name: string, protocols?: { port?: number, type: string }[], sourceAddresses: string[], targetFqdns?: string[] }[]>;

    /**
     * Create a FirewallApplicationRuleCollection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FirewallApplicationRuleCollectionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FirewallApplicationRuleCollectionArgs | FirewallApplicationRuleCollectionState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: FirewallApplicationRuleCollectionState = argsOrState as FirewallApplicationRuleCollectionState | undefined;
            inputs["action"] = state ? state.action : undefined;
            inputs["azureFirewallName"] = state ? state.azureFirewallName : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["priority"] = state ? state.priority : undefined;
            inputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            inputs["rules"] = state ? state.rules : undefined;
        } else {
            const args = argsOrState as FirewallApplicationRuleCollectionArgs | undefined;
            if (!args || args.action === undefined) {
                throw new Error("Missing required property 'action'");
            }
            if (!args || args.azureFirewallName === undefined) {
                throw new Error("Missing required property 'azureFirewallName'");
            }
            if (!args || args.priority === undefined) {
                throw new Error("Missing required property 'priority'");
            }
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (!args || args.rules === undefined) {
                throw new Error("Missing required property 'rules'");
            }
            inputs["action"] = args ? args.action : undefined;
            inputs["azureFirewallName"] = args ? args.azureFirewallName : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["priority"] = args ? args.priority : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["rules"] = args ? args.rules : undefined;
        }
        super("azure:network/firewallApplicationRuleCollection:FirewallApplicationRuleCollection", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FirewallApplicationRuleCollection resources.
 */
export interface FirewallApplicationRuleCollectionState {
    readonly action?: pulumi.Input<string>;
    readonly azureFirewallName?: pulumi.Input<string>;
    readonly name?: pulumi.Input<string>;
    readonly priority?: pulumi.Input<number>;
    readonly resourceGroupName?: pulumi.Input<string>;
    readonly rules?: pulumi.Input<pulumi.Input<{ description?: pulumi.Input<string>, fqdnTags?: pulumi.Input<pulumi.Input<string>[]>, name: pulumi.Input<string>, protocols?: pulumi.Input<pulumi.Input<{ port?: pulumi.Input<number>, type: pulumi.Input<string> }>[]>, sourceAddresses: pulumi.Input<pulumi.Input<string>[]>, targetFqdns?: pulumi.Input<pulumi.Input<string>[]> }>[]>;
}

/**
 * The set of arguments for constructing a FirewallApplicationRuleCollection resource.
 */
export interface FirewallApplicationRuleCollectionArgs {
    readonly action: pulumi.Input<string>;
    readonly azureFirewallName: pulumi.Input<string>;
    readonly name?: pulumi.Input<string>;
    readonly priority: pulumi.Input<number>;
    readonly resourceGroupName: pulumi.Input<string>;
    readonly rules: pulumi.Input<pulumi.Input<{ description?: pulumi.Input<string>, fqdnTags?: pulumi.Input<pulumi.Input<string>[]>, name: pulumi.Input<string>, protocols?: pulumi.Input<pulumi.Input<{ port?: pulumi.Input<number>, type: pulumi.Input<string> }>[]>, sourceAddresses: pulumi.Input<pulumi.Input<string>[]>, targetFqdns?: pulumi.Input<pulumi.Input<string>[]> }>[]>;
}
