// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export function getVirtualNetworkGateway(args: GetVirtualNetworkGatewayArgs, opts?: pulumi.InvokeOptions): Promise<GetVirtualNetworkGatewayResult> {
    return pulumi.runtime.invoke("azure:network/getVirtualNetworkGateway:getVirtualNetworkGateway", {
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

/**
 * A collection of arguments for invoking getVirtualNetworkGateway.
 */
export interface GetVirtualNetworkGatewayArgs {
    readonly name: string;
    readonly resourceGroupName: string;
}

/**
 * A collection of values returned by getVirtualNetworkGateway.
 */
export interface GetVirtualNetworkGatewayResult {
    readonly activeActive: boolean;
    readonly bgpSettings: { asn: number, peerWeight: number, peeringAddress: string }[];
    readonly defaultLocalNetworkGatewayId: string;
    readonly enableBgp: boolean;
    readonly ipConfigurations: { name: string, privateIpAddressAllocation: string, publicIpAddressId: string, subnetId: string }[];
    readonly location: string;
    readonly sku: string;
    readonly tags: {[key: string]: any};
    readonly type: string;
    readonly vpnClientConfigurations: { addressSpaces: string[], radiusServerAddress: string, radiusServerSecret: string, revokedCertificates: { name: string, thumbprint: string }[], rootCertificates: { name: string, publicCertData: string }[], vpnClientProtocols: string[] }[];
    readonly vpnType: string;
    /**
     * id is the provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}
