// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class Endpoint extends pulumi.CustomResource {
    /**
     * Get an existing Endpoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EndpointState, opts?: pulumi.CustomResourceOptions): Endpoint {
        return new Endpoint(name, <any>state, { ...opts, id: id });
    }

    public readonly endpointLocation: pulumi.Output<string>;
    public /*out*/ readonly endpointMonitorStatus: pulumi.Output<string>;
    public readonly endpointStatus: pulumi.Output<string>;
    public readonly geoMappings: pulumi.Output<string[] | undefined>;
    public readonly minChildEndpoints: pulumi.Output<number | undefined>;
    public readonly name: pulumi.Output<string>;
    public readonly priority: pulumi.Output<number>;
    public readonly profileName: pulumi.Output<string>;
    public readonly resourceGroupName: pulumi.Output<string>;
    public readonly target: pulumi.Output<string>;
    public readonly targetResourceId: pulumi.Output<string | undefined>;
    public readonly type: pulumi.Output<string>;
    public readonly weight: pulumi.Output<number>;

    /**
     * Create a Endpoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EndpointArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EndpointArgs | EndpointState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: EndpointState = argsOrState as EndpointState | undefined;
            inputs["endpointLocation"] = state ? state.endpointLocation : undefined;
            inputs["endpointMonitorStatus"] = state ? state.endpointMonitorStatus : undefined;
            inputs["endpointStatus"] = state ? state.endpointStatus : undefined;
            inputs["geoMappings"] = state ? state.geoMappings : undefined;
            inputs["minChildEndpoints"] = state ? state.minChildEndpoints : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["priority"] = state ? state.priority : undefined;
            inputs["profileName"] = state ? state.profileName : undefined;
            inputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            inputs["target"] = state ? state.target : undefined;
            inputs["targetResourceId"] = state ? state.targetResourceId : undefined;
            inputs["type"] = state ? state.type : undefined;
            inputs["weight"] = state ? state.weight : undefined;
        } else {
            const args = argsOrState as EndpointArgs | undefined;
            if (!args || args.profileName === undefined) {
                throw new Error("Missing required property 'profileName'");
            }
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (!args || args.type === undefined) {
                throw new Error("Missing required property 'type'");
            }
            inputs["endpointLocation"] = args ? args.endpointLocation : undefined;
            inputs["endpointStatus"] = args ? args.endpointStatus : undefined;
            inputs["geoMappings"] = args ? args.geoMappings : undefined;
            inputs["minChildEndpoints"] = args ? args.minChildEndpoints : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["priority"] = args ? args.priority : undefined;
            inputs["profileName"] = args ? args.profileName : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["target"] = args ? args.target : undefined;
            inputs["targetResourceId"] = args ? args.targetResourceId : undefined;
            inputs["type"] = args ? args.type : undefined;
            inputs["weight"] = args ? args.weight : undefined;
            inputs["endpointMonitorStatus"] = undefined /*out*/;
        }
        super("azure:trafficmanager/endpoint:Endpoint", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Endpoint resources.
 */
export interface EndpointState {
    readonly endpointLocation?: pulumi.Input<string>;
    readonly endpointMonitorStatus?: pulumi.Input<string>;
    readonly endpointStatus?: pulumi.Input<string>;
    readonly geoMappings?: pulumi.Input<pulumi.Input<string>[]>;
    readonly minChildEndpoints?: pulumi.Input<number>;
    readonly name?: pulumi.Input<string>;
    readonly priority?: pulumi.Input<number>;
    readonly profileName?: pulumi.Input<string>;
    readonly resourceGroupName?: pulumi.Input<string>;
    readonly target?: pulumi.Input<string>;
    readonly targetResourceId?: pulumi.Input<string>;
    readonly type?: pulumi.Input<string>;
    readonly weight?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Endpoint resource.
 */
export interface EndpointArgs {
    readonly endpointLocation?: pulumi.Input<string>;
    readonly endpointStatus?: pulumi.Input<string>;
    readonly geoMappings?: pulumi.Input<pulumi.Input<string>[]>;
    readonly minChildEndpoints?: pulumi.Input<number>;
    readonly name?: pulumi.Input<string>;
    readonly priority?: pulumi.Input<number>;
    readonly profileName: pulumi.Input<string>;
    readonly resourceGroupName: pulumi.Input<string>;
    readonly target?: pulumi.Input<string>;
    readonly targetResourceId?: pulumi.Input<string>;
    readonly type: pulumi.Input<string>;
    readonly weight?: pulumi.Input<number>;
}
