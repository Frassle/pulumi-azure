// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export function getAppService(args: GetAppServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetAppServiceResult> {
    return pulumi.runtime.invoke("azure:appservice/getAppService:getAppService", {
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
        "siteConfig": args.siteConfig,
    }, opts);
}

/**
 * A collection of arguments for invoking getAppService.
 */
export interface GetAppServiceArgs {
    readonly name: string;
    readonly resourceGroupName: string;
    readonly siteConfig?: { alwaysOn?: boolean, appCommandLine?: string, defaultDocuments?: string[], dotnetFrameworkVersion?: string, ftpsState?: string, http2Enabled?: boolean, ipRestrictions?: { ipAddress: string, subnetMask?: string }[], javaContainer?: string, javaContainerVersion?: string, javaVersion?: string, linuxFxVersion?: string, localMysqlEnabled?: boolean, managedPipelineMode?: string, minTlsVersion?: string, phpVersion?: string, pythonVersion?: string, remoteDebuggingEnabled?: boolean, remoteDebuggingVersion?: string, scmType?: string, use32BitWorkerProcess?: boolean, virtualNetworkName?: string, websocketsEnabled?: boolean };
}

/**
 * A collection of values returned by getAppService.
 */
export interface GetAppServiceResult {
    readonly appServicePlanId: string;
    readonly appSettings: {[key: string]: any};
    readonly clientAffinityEnabled: boolean;
    readonly connectionStrings: { name: string, type: string, value: string }[];
    readonly defaultSiteHostname: string;
    readonly enabled: boolean;
    readonly httpsOnly: boolean;
    readonly location: string;
    readonly outboundIpAddresses: string;
    readonly possibleOutboundIpAddresses: string;
    readonly siteConfig: { alwaysOn?: boolean, appCommandLine?: string, defaultDocuments?: string[], dotnetFrameworkVersion?: string, ftpsState: string, http2Enabled?: boolean, ipRestrictions: { ipAddress: string, subnetMask?: string }[], javaContainer?: string, javaContainerVersion?: string, javaVersion?: string, linuxFxVersion: string, localMysqlEnabled: boolean, managedPipelineMode: string, minTlsVersion: string, phpVersion?: string, pythonVersion?: string, remoteDebuggingEnabled?: boolean, remoteDebuggingVersion: string, scmType?: string, use32BitWorkerProcess: boolean, virtualNetworkName?: string, websocketsEnabled: boolean };
    readonly siteCredentials: { password: string, username: string }[];
    readonly sourceControls: { branch: string, repoUrl: string }[];
    readonly tags: {[key: string]: any};
    /**
     * id is the provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}
