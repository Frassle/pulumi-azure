// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Azure.Datalake {

	/// <summary>
	/// The set of arguments for constructing a Store resource.
	/// </summary>
	public struct StoreArgs {
		/// <summary>
		/// Is Encryption enabled on this Data Lake Store Account? Possible values are `Enabled` or `Disabled`. Defaults to `Enabled`.
		/// </summary>
		public Pulumi.IO<string> EncryptionState { get; set; }

		/// <summary>
		/// The Encryption Type used for this Data Lake Store Account. Currently can be set to `SystemManaged` when `encryption_state` is `Enabled` - and must be a blank string when it's Disabled.
		/// </summary>
		public Pulumi.IO<string> EncryptionType { get; set; }

		/// <summary>
		/// are Azure Service IP's allowed through the firewall? Possible values are `Enabled` and `Disabled`. Defaults to `Enabled.`
		/// </summary>
		public Pulumi.IO<string> FirewallAllowAzureIps { get; set; }

		/// <summary>
		/// the state of the Firewall. Possible values are `Enabled` and `Disabled`. Defaults to `Enabled.`
		/// </summary>
		public Pulumi.IO<string> FirewallState { get; set; }

		/// <summary>
		/// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Location { get; set; }

		/// <summary>
		/// Specifies the name of the Data Lake Store. Changing this forces a new resource to be created. Has to be between 3 to 24 characters.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// The name of the resource group in which to create the Data Lake Store.
		/// </summary>
		public Pulumi.IO<string> ResourceGroupName { get; set; }

		/// <summary>
		/// A mapping of tags to assign to the resource.
		/// </summary>
		public Pulumi.IO<System.Collections.Generic.Dictionary<string, string>> Tags { get; set; }

		/// <summary>
		/// The monthly commitment tier for Data Lake Store. Accepted values are `Consumption`, `Commitment_1TB`, `Commitment_10TB`, `Commitment_100TB`, `Commitment_500TB`, `Commitment_1PB` or `Commitment_5PB`.
		/// </summary>
		public Pulumi.IO<string> Tier { get; set; }

	} // StoreArgs

	/// <summary>
	/// Manage an Azure Data Lake Store.
	/// </summary>
	public class Store : Pulumi.CustomResource {
		/// <summary>
		/// Is Encryption enabled on this Data Lake Store Account? Possible values are `Enabled` or `Disabled`. Defaults to `Enabled`.
		/// </summary>
		public Pulumi.IO<string> EncryptionState { get; set; }

		/// <summary>
		/// The Encryption Type used for this Data Lake Store Account. Currently can be set to `SystemManaged` when `encryption_state` is `Enabled` - and must be a blank string when it's Disabled.
		/// </summary>
		public Pulumi.IO<string> EncryptionType { get; set; }

		/// <summary>
		/// The Endpoint for the Data Lake Store.
		/// </summary>
		public Pulumi.IO<string> Endpoint { get; set; }

		/// <summary>
		/// are Azure Service IP's allowed through the firewall? Possible values are `Enabled` and `Disabled`. Defaults to `Enabled.`
		/// </summary>
		public Pulumi.IO<string> FirewallAllowAzureIps { get; set; }

		/// <summary>
		/// the state of the Firewall. Possible values are `Enabled` and `Disabled`. Defaults to `Enabled.`
		/// </summary>
		public Pulumi.IO<string> FirewallState { get; set; }

		/// <summary>
		/// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Location { get; set; }

		/// <summary>
		/// Specifies the name of the Data Lake Store. Changing this forces a new resource to be created. Has to be between 3 to 24 characters.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// The name of the resource group in which to create the Data Lake Store.
		/// </summary>
		public Pulumi.IO<string> ResourceGroupName { get; set; }

		/// <summary>
		/// A mapping of tags to assign to the resource.
		/// </summary>
		public Pulumi.IO<System.Collections.Generic.Dictionary<string, string>> Tags { get; set; }

		/// <summary>
		/// The monthly commitment tier for Data Lake Store. Accepted values are `Consumption`, `Commitment_1TB`, `Commitment_10TB`, `Commitment_100TB`, `Commitment_500TB`, `Commitment_1PB` or `Commitment_5PB`.
		/// </summary>
		public Pulumi.IO<string> Tier { get; set; }

		public Store(string name, StoreArgs args, Pulumi.ResourceOptions opts = default(Pulumi.ResourceOptions))
			: base("azure:datalake/store:Store", name, SerialiseArgs(args), opts) {
			EncryptionState = base.Outputs["encryptionState"].Select(item => Protobuf.ToString(item));
			EncryptionType = base.Outputs["encryptionType"].Select(item => Protobuf.ToString(item));
			Endpoint = base.Outputs["endpoint"].Select(item => Protobuf.ToString(item));
			FirewallAllowAzureIps = base.Outputs["firewallAllowAzureIps"].Select(item => Protobuf.ToString(item));
			FirewallState = base.Outputs["firewallState"].Select(item => Protobuf.ToString(item));
			Location = base.Outputs["location"].Select(item => Protobuf.ToString(item));
			Name = base.Outputs["name"].Select(item => Protobuf.ToString(item));
			ResourceGroupName = base.Outputs["resourceGroupName"].Select(item => Protobuf.ToString(item));
			Tags = base.Outputs["tags"].Select(item => Protobuf.ToMap(item));
			Tier = base.Outputs["tier"].Select(item => Protobuf.ToString(item));
		} // ctor

		private static Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>> SerialiseArgs(StoreArgs args) {
			var props = new Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>();
			props["encryptionState"] = Protobuf.ToProtobuf(args.EncryptionState);
			props["encryptionType"] = Protobuf.ToProtobuf(args.EncryptionType);
			props["firewallAllowAzureIps"] = Protobuf.ToProtobuf(args.FirewallAllowAzureIps);
			props["firewallState"] = Protobuf.ToProtobuf(args.FirewallState);
			props["location"] = Protobuf.ToProtobuf(args.Location);
			props["name"] = Protobuf.ToProtobuf(args.Name);
			props["resourceGroupName"] = Protobuf.ToProtobuf(args.ResourceGroupName);
			props["tags"] = Protobuf.ToProtobuf(args.Tags);
			props["tier"] = Protobuf.ToProtobuf(args.Tier);
			props["endpoint"] = null; //out
			return props;
		} // SerialiseArgs

	} // Store
} // Pulumi.Azure.Datalake
