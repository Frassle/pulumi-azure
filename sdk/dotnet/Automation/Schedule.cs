// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Azure.Automation {

	public sealed class ScheduleArgsMonthlyOccurrence : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> Day { get; set; }
		public Pulumi.IO<int> Occurrence { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("day", Protobuf.ToProtobuf(Day)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("occurrence", Protobuf.ToProtobuf(Occurrence)));
		} // ToProtobuf

	} // ScheduleArgsMonthlyOccurrence

	public sealed class ScheduleMonthlyOccurrence : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> Day { get; set; }
		public Pulumi.IO<int> Occurrence { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("day", Protobuf.ToProtobuf(Day)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("occurrence", Protobuf.ToProtobuf(Occurrence)));
		} // ToProtobuf

		public static ScheduleMonthlyOccurrence FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new ScheduleMonthlyOccurrence();
				if (obj.Fields.ContainsKey("day")) {
					result.Day = Protobuf.ToString(obj.Fields["day"]);
				}
				if (obj.Fields.ContainsKey("occurrence")) {
					result.Occurrence = Protobuf.ToInt(obj.Fields["occurrence"]);
				}
			return result;
		} // FromProtobuf

	} // ScheduleMonthlyOccurrence

	/// <summary>
	/// The set of arguments for constructing a Schedule resource.
	/// </summary>
	public struct ScheduleArgs {
		public Pulumi.IO<string> AccountName { get; set; }

		/// <summary>
		/// The name of the automation account in which the Schedule is created. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> AutomationAccountName { get; set; }

		/// <summary>
		/// A description for this Schedule.
		/// </summary>
		public Pulumi.IO<string> Description { get; set; }

		/// <summary>
		/// The end time of the schedule.
		/// </summary>
		public Pulumi.IO<string> ExpiryTime { get; set; }

		/// <summary>
		/// The frequency of the schedule. - can be either `OneTime`, `Day`, `Hour`, `Week`, or `Month`.
		/// </summary>
		public Pulumi.IO<string> Frequency { get; set; }

		/// <summary>
		/// The number of `frequency`s between runs. Only valid when frequency is `Day`, `Hour`, `Week`, or `Month` and defaults to `1`.
		/// </summary>
		public Pulumi.IO<int> Interval { get; set; }

		/// <summary>
		/// List of days of the month that the job should execute on. Must be between `1` and `31`. `-1` for last day of the month. Only valid when frequency is `Month`.
		/// </summary>
		public Pulumi.IO<Pulumi.IO<int>[]> MonthDays { get; set; }

		/// <summary>
		/// List of occurrences of days within a month. Only valid when frequency is `Month`. The `monthly_occurrence` block supports fields documented below.
		/// </summary>
		public Pulumi.IO<Pulumi.IO<ScheduleArgsMonthlyOccurrence>[]> MonthlyOccurrences { get; set; }

		/// <summary>
		/// Specifies the name of the Schedule. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// The name of the resource group in which the Schedule is created. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ResourceGroupName { get; set; }

		/// <summary>
		/// Start time of the schedule. Must be at least five minutes in the future. Defaults to seven minutes in the future from the time the resource is created.
		/// </summary>
		public Pulumi.IO<string> StartTime { get; set; }

		/// <summary>
		/// The timezone of the start time. Defaults to `UTC`. For possible values see: https://msdn.microsoft.com/en-us/library/ms912391(v=winembedded.11).aspx
		/// </summary>
		public Pulumi.IO<string> Timezone { get; set; }

		/// <summary>
		/// List of days of the week that the job should execute on. Only valid when frequency is `Week`.
		/// </summary>
		public Pulumi.IO<Pulumi.IO<string>[]> WeekDays { get; set; }

	} // ScheduleArgs

	/// <summary>
	/// Manages a Automation Schedule.
	/// </summary>
	public class Schedule : Pulumi.CustomResource {
		public Pulumi.IO<string> AccountName { get; set; }

		/// <summary>
		/// The name of the automation account in which the Schedule is created. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> AutomationAccountName { get; set; }

		/// <summary>
		/// A description for this Schedule.
		/// </summary>
		public Pulumi.IO<string> Description { get; set; }

		/// <summary>
		/// The end time of the schedule.
		/// </summary>
		public Pulumi.IO<string> ExpiryTime { get; set; }

		/// <summary>
		/// The frequency of the schedule. - can be either `OneTime`, `Day`, `Hour`, `Week`, or `Month`.
		/// </summary>
		public Pulumi.IO<string> Frequency { get; set; }

		/// <summary>
		/// The number of `frequency`s between runs. Only valid when frequency is `Day`, `Hour`, `Week`, or `Month` and defaults to `1`.
		/// </summary>
		public Pulumi.IO<int> Interval { get; set; }

		/// <summary>
		/// List of days of the month that the job should execute on. Must be between `1` and `31`. `-1` for last day of the month. Only valid when frequency is `Month`.
		/// </summary>
		public Pulumi.IO<int[]> MonthDays { get; set; }

		/// <summary>
		/// List of occurrences of days within a month. Only valid when frequency is `Month`. The `monthly_occurrence` block supports fields documented below.
		/// </summary>
		public Pulumi.IO<ScheduleMonthlyOccurrence[]> MonthlyOccurrences { get; set; }

		/// <summary>
		/// Specifies the name of the Schedule. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// The name of the resource group in which the Schedule is created. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ResourceGroupName { get; set; }

		/// <summary>
		/// Start time of the schedule. Must be at least five minutes in the future. Defaults to seven minutes in the future from the time the resource is created.
		/// </summary>
		public Pulumi.IO<string> StartTime { get; set; }

		/// <summary>
		/// The timezone of the start time. Defaults to `UTC`. For possible values see: https://msdn.microsoft.com/en-us/library/ms912391(v=winembedded.11).aspx
		/// </summary>
		public Pulumi.IO<string> Timezone { get; set; }

		/// <summary>
		/// List of days of the week that the job should execute on. Only valid when frequency is `Week`.
		/// </summary>
		public Pulumi.IO<string[]> WeekDays { get; set; }

		public Schedule(string name, ScheduleArgs args, Pulumi.ResourceOptions opts = default(Pulumi.ResourceOptions))
			: base("azure:automation/schedule:Schedule", name, SerialiseArgs(args), opts) {
			AccountName = base.Outputs["accountName"].Select(item => Protobuf.ToString(item));
			AutomationAccountName = base.Outputs["automationAccountName"].Select(item => Protobuf.ToString(item));
			Description = base.Outputs["description"].Select(item => Protobuf.ToString(item));
			ExpiryTime = base.Outputs["expiryTime"].Select(item => Protobuf.ToString(item));
			Frequency = base.Outputs["frequency"].Select(item => Protobuf.ToString(item));
			Interval = base.Outputs["interval"].Select(item => Protobuf.ToInt(item));
			MonthDays = base.Outputs["monthDays"].Select(item => Protobuf.ToList(item, item1 => Protobuf.ToInt(item1)));
			MonthlyOccurrences = base.Outputs["monthlyOccurrences"].Select(item => Protobuf.ToList(item, item1 => ScheduleMonthlyOccurrence.FromProtobuf(item1)));
			Name = base.Outputs["name"].Select(item => Protobuf.ToString(item));
			ResourceGroupName = base.Outputs["resourceGroupName"].Select(item => Protobuf.ToString(item));
			StartTime = base.Outputs["startTime"].Select(item => Protobuf.ToString(item));
			Timezone = base.Outputs["timezone"].Select(item => Protobuf.ToString(item));
			WeekDays = base.Outputs["weekDays"].Select(item => Protobuf.ToList(item, item1 => Protobuf.ToString(item1)));
		} // ctor

		private static Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>> SerialiseArgs(ScheduleArgs args) {
			var props = new Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>();
			props["accountName"] = Protobuf.ToProtobuf(args.AccountName);
			props["automationAccountName"] = Protobuf.ToProtobuf(args.AutomationAccountName);
			props["description"] = Protobuf.ToProtobuf(args.Description);
			props["expiryTime"] = Protobuf.ToProtobuf(args.ExpiryTime);
			props["frequency"] = Protobuf.ToProtobuf(args.Frequency);
			props["interval"] = Protobuf.ToProtobuf(args.Interval);
			props["monthDays"] = Protobuf.ToProtobuf(args.MonthDays, item => Protobuf.ToProtobuf(item));
			props["monthlyOccurrences"] = Protobuf.ToProtobuf(args.MonthlyOccurrences, item => Protobuf.ToProtobuf(item));
			props["name"] = Protobuf.ToProtobuf(args.Name);
			props["resourceGroupName"] = Protobuf.ToProtobuf(args.ResourceGroupName);
			props["startTime"] = Protobuf.ToProtobuf(args.StartTime);
			props["timezone"] = Protobuf.ToProtobuf(args.Timezone);
			props["weekDays"] = Protobuf.ToProtobuf(args.WeekDays, item => Protobuf.ToProtobuf(item));
			return props;
		} // SerialiseArgs

	} // Schedule
} // Pulumi.Azure.Automation
