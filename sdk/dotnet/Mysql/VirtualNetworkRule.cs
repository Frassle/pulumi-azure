// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Azure.Mysql {

	/// <summary>
	/// The set of arguments for constructing a VirtualNetworkRule resource.
	/// </summary>
	public struct VirtualNetworkRuleArgs {
		/// <summary>
		/// The name of the MySQL Virtual Network Rule. Cannot be empty and must only contain alphanumeric characters and hyphens. Cannot start with a number, and cannot start or end with a hyphen. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// The name of the resource group where the MySQL server resides. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ResourceGroupName { get; set; }

		/// <summary>
		/// The name of the SQL Server to which this MySQL virtual network rule will be applied to. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ServerName { get; set; }

		/// <summary>
		/// The ID of the subnet that the MySQL server will be connected to.
		/// </summary>
		public Pulumi.IO<string> SubnetId { get; set; }

	} // VirtualNetworkRuleArgs

	/// <summary>
	/// Manages a MySQL Virtual Network Rule.
	/// 
	/// -> **NOTE:** MySQL Virtual Network Rules [can only be used with SKU Tiers of `GeneralPurpose` or `MemoryOptimized`](https://docs.microsoft.com/en-us/azure/mysql/concepts-data-access-and-security-vnet)
	/// </summary>
	public class VirtualNetworkRule : Pulumi.CustomResource {
		/// <summary>
		/// The name of the MySQL Virtual Network Rule. Cannot be empty and must only contain alphanumeric characters and hyphens. Cannot start with a number, and cannot start or end with a hyphen. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// The name of the resource group where the MySQL server resides. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ResourceGroupName { get; set; }

		/// <summary>
		/// The name of the SQL Server to which this MySQL virtual network rule will be applied to. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ServerName { get; set; }

		/// <summary>
		/// The ID of the subnet that the MySQL server will be connected to.
		/// </summary>
		public Pulumi.IO<string> SubnetId { get; set; }

		public VirtualNetworkRule(string name, VirtualNetworkRuleArgs args, Pulumi.ResourceOptions opts = default(Pulumi.ResourceOptions))
			: base("azure:mysql/virtualNetworkRule:VirtualNetworkRule", name, SerialiseArgs(args), opts) {
			Name = base.Outputs["name"].Select(item => Protobuf.ToString(item));
			ResourceGroupName = base.Outputs["resourceGroupName"].Select(item => Protobuf.ToString(item));
			ServerName = base.Outputs["serverName"].Select(item => Protobuf.ToString(item));
			SubnetId = base.Outputs["subnetId"].Select(item => Protobuf.ToString(item));
		} // ctor

		private static Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>> SerialiseArgs(VirtualNetworkRuleArgs args) {
			var props = new Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>();
			props["name"] = Protobuf.ToProtobuf(args.Name);
			props["resourceGroupName"] = Protobuf.ToProtobuf(args.ResourceGroupName);
			props["serverName"] = Protobuf.ToProtobuf(args.ServerName);
			props["subnetId"] = Protobuf.ToProtobuf(args.SubnetId);
			return props;
		} // SerialiseArgs

	} // VirtualNetworkRule
} // Pulumi.Azure.Mysql
