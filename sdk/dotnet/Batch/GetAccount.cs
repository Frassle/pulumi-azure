// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Azure.Batch {

	/// <summary>
	/// A collection of arguments for invoking getAccount.
	/// </summary>
	public struct GetAccountArgs {
		/// <summary>
		/// The name of the Batch account.
		/// </summary>
		public string Name { get; set; }

		/// <summary>
		/// The Name of the Resource Group where this Batch account exists.
		/// </summary>
		public string ResourceGroupName { get; set; }

	} // GetAccountArgs

	/// <summary>
	/// A collection of values returned by getAccount.
	/// </summary>
	public struct GetAccountResult {
		/// <summary>
		/// The Azure Region in which this Batch account exists.
		/// </summary>
		public string Location { get; set; }

		/// <summary>
		/// The pool allocation mode configured for this Batch account.
		/// </summary>
		public string PoolAllocationMode { get; set; }

		/// <summary>
		/// The ID of the Storage Account used for this Batch account.
		/// </summary>
		public string StorageAccountId { get; set; }

		/// <summary>
		/// A map of tags assigned to the Batch account.
		/// </summary>
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }

		/// <summary>
		/// id is the provider-assigned unique ID for this managed resource.
		/// </summary>
		public string Id { get; set; }

	} // GetAccountResult

	public static partial class BatchModule {
		/// <summary>
		/// Use this data source to access information about an existing Batch Account.
		/// </summary>
		public static System.Threading.Tasks.Task<GetAccountResult> GetAccount(GetAccountArgs args, Pulumi.InvokeOptions opts = default(Pulumi.InvokeOptions)) {
			var invokeArgs = new Google.Protobuf.WellKnownTypes.Struct();
			invokeArgs.Fields["name"] = Protobuf.ToProtobuf(args.Name);
			invokeArgs.Fields["resourceGroupName"] = Protobuf.ToProtobuf(args.ResourceGroupName);

			var task = Pulumi.Runtime.InvokeAsync("azure:batch/getAccount:getAccount", invokeArgs, opts);

			return task.ContinueWith(response => {
				var protobuf = response.Result;
				var result = new GetAccountResult();
				if (protobuf.Fields.ContainsKey("location")) {
					result.Location = Protobuf.ToString(protobuf.Fields["location"]);
				}
				if (protobuf.Fields.ContainsKey("poolAllocationMode")) {
					result.PoolAllocationMode = Protobuf.ToString(protobuf.Fields["poolAllocationMode"]);
				}
				if (protobuf.Fields.ContainsKey("storageAccountId")) {
					result.StorageAccountId = Protobuf.ToString(protobuf.Fields["storageAccountId"]);
				}
				if (protobuf.Fields.ContainsKey("tags")) {
					result.Tags = Protobuf.ToMap(protobuf.Fields["tags"]);
				}
				if (protobuf.Fields.ContainsKey("id")) {
					result.Id = Protobuf.ToString(protobuf.Fields["id"]);
				}
				return result;
			});
		} // GetAccount

	} // BatchModule
} // Pulumi.Azure.Batch
