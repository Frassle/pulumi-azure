// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Azure.Search {

	/// <summary>
	/// The set of arguments for constructing a Service resource.
	/// </summary>
	public struct ServiceArgs {
		/// <summary>
		/// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Location { get; set; }

		/// <summary>
		/// The name of the Search Service. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// Default is 1. Valid values include 1, 2, 3, 4, 6, or 12. Valid only when `sku` is `standard`. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<int> PartitionCount { get; set; }

		/// <summary>
		/// Default is 1. Valid values include 1 through 12. Valid only when `sku` is `standard`. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<int> ReplicaCount { get; set; }

		/// <summary>
		/// The name of the resource group in which to create the Search Service. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ResourceGroupName { get; set; }

		/// <summary>
		/// Valid values are `free` and `standard`. `standard2` and `standard3` are also valid, but can only be used when it's enabled on the backend by Microsoft support. `free` provisions the service in shared clusters. `standard` provisions the service in dedicated clusters.  Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Sku { get; set; }

		/// <summary>
		/// A mapping of tags to assign to the resource. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<System.Collections.Generic.Dictionary<string, string>> Tags { get; set; }

	} // ServiceArgs

	/// <summary>
	/// Allows you to manage an Azure Search Service.
	/// </summary>
	public class Service : Pulumi.CustomResource {
		/// <summary>
		/// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Location { get; set; }

		/// <summary>
		/// The name of the Search Service. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// Default is 1. Valid values include 1, 2, 3, 4, 6, or 12. Valid only when `sku` is `standard`. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<int> PartitionCount { get; set; }

		/// <summary>
		/// The Search Service Administration primary key.
		/// </summary>
		public Pulumi.IO<string> PrimaryKey { get; set; }

		/// <summary>
		/// Default is 1. Valid values include 1 through 12. Valid only when `sku` is `standard`. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<int> ReplicaCount { get; set; }

		/// <summary>
		/// The name of the resource group in which to create the Search Service. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ResourceGroupName { get; set; }

		/// <summary>
		/// The Search Service Administration secondary key.
		/// </summary>
		public Pulumi.IO<string> SecondaryKey { get; set; }

		/// <summary>
		/// Valid values are `free` and `standard`. `standard2` and `standard3` are also valid, but can only be used when it's enabled on the backend by Microsoft support. `free` provisions the service in shared clusters. `standard` provisions the service in dedicated clusters.  Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Sku { get; set; }

		/// <summary>
		/// A mapping of tags to assign to the resource. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<System.Collections.Generic.Dictionary<string, string>> Tags { get; set; }

		public Service(string name, ServiceArgs args, Pulumi.ResourceOptions opts = default(Pulumi.ResourceOptions))
			: base("azure:search/service:Service", name, SerialiseArgs(args), opts) {
			Location = base.Outputs["location"].Select(item => Protobuf.ToString(item));
			Name = base.Outputs["name"].Select(item => Protobuf.ToString(item));
			PartitionCount = base.Outputs["partitionCount"].Select(item => Protobuf.ToInt(item));
			PrimaryKey = base.Outputs["primaryKey"].Select(item => Protobuf.ToString(item));
			ReplicaCount = base.Outputs["replicaCount"].Select(item => Protobuf.ToInt(item));
			ResourceGroupName = base.Outputs["resourceGroupName"].Select(item => Protobuf.ToString(item));
			SecondaryKey = base.Outputs["secondaryKey"].Select(item => Protobuf.ToString(item));
			Sku = base.Outputs["sku"].Select(item => Protobuf.ToString(item));
			Tags = base.Outputs["tags"].Select(item => Protobuf.ToMap(item));
		} // ctor

		private static Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>> SerialiseArgs(ServiceArgs args) {
			var props = new Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>();
			props["location"] = Protobuf.ToProtobuf(args.Location);
			props["name"] = Protobuf.ToProtobuf(args.Name);
			props["partitionCount"] = Protobuf.ToProtobuf(args.PartitionCount);
			props["replicaCount"] = Protobuf.ToProtobuf(args.ReplicaCount);
			props["resourceGroupName"] = Protobuf.ToProtobuf(args.ResourceGroupName);
			props["sku"] = Protobuf.ToProtobuf(args.Sku);
			props["tags"] = Protobuf.ToProtobuf(args.Tags);
			props["primaryKey"] = null; //out
			props["secondaryKey"] = null; //out
			return props;
		} // SerialiseArgs

	} // Service
} // Pulumi.Azure.Search
