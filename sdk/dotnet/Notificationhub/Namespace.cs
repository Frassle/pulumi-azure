// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Azure.Notificationhub {

	public sealed class NamespaceArgsSku : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> Name { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("name", Protobuf.ToProtobuf(Name)));
		} // ToProtobuf

	} // NamespaceArgsSku

	public sealed class NamespaceSku : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> Name { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("name", Protobuf.ToProtobuf(Name)));
		} // ToProtobuf

		public static NamespaceSku FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new NamespaceSku();
				if (obj.Fields.ContainsKey("name")) {
					result.Name = Protobuf.ToString(obj.Fields["name"]);
				}
			return result;
		} // FromProtobuf

	} // NamespaceSku

	/// <summary>
	/// The set of arguments for constructing a Namespace resource.
	/// </summary>
	public struct NamespaceArgs {
		/// <summary>
		/// Is this Notification Hub Namespace enabled? Defaults to `true`.
		/// </summary>
		public Pulumi.IO<bool> Enabled { get; set; }

		/// <summary>
		/// The Azure Region in which this Notification Hub Namespace should be created.
		/// </summary>
		public Pulumi.IO<string> Location { get; set; }

		/// <summary>
		/// The name to use for this Notification Hub Namespace. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// The Type of Namespace - possible values are `Messaging` or `NotificationHub`. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> NamespaceType { get; set; }

		/// <summary>
		/// The name of the Resource Group in which the Notification Hub Namespace should exist. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ResourceGroupName { get; set; }

		/// <summary>
		/// A `sku` block as defined below.
		/// </summary>
		public Pulumi.IO<NamespaceArgsSku> Sku { get; set; }

	} // NamespaceArgs

	/// <summary>
	/// Manages a Notification Hub Namespace.
	/// </summary>
	public class Namespace : Pulumi.CustomResource {
		/// <summary>
		/// Is this Notification Hub Namespace enabled? Defaults to `true`.
		/// </summary>
		public Pulumi.IO<bool> Enabled { get; set; }

		/// <summary>
		/// The Azure Region in which this Notification Hub Namespace should be created.
		/// </summary>
		public Pulumi.IO<string> Location { get; set; }

		/// <summary>
		/// The name to use for this Notification Hub Namespace. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// The Type of Namespace - possible values are `Messaging` or `NotificationHub`. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> NamespaceType { get; set; }

		/// <summary>
		/// The name of the Resource Group in which the Notification Hub Namespace should exist. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ResourceGroupName { get; set; }

		/// <summary>
		/// The ServiceBus Endpoint for this Notification Hub Namespace.
		/// </summary>
		public Pulumi.IO<string> ServicebusEndpoint { get; set; }

		/// <summary>
		/// A `sku` block as defined below.
		/// </summary>
		public Pulumi.IO<NamespaceSku> Sku { get; set; }

		public Namespace(string name, NamespaceArgs args, Pulumi.ResourceOptions opts = default(Pulumi.ResourceOptions))
			: base("azure:notificationhub/namespace:Namespace", name, SerialiseArgs(args), opts) {
			Enabled = base.Outputs["enabled"].Select(item => Protobuf.ToBool(item));
			Location = base.Outputs["location"].Select(item => Protobuf.ToString(item));
			Name = base.Outputs["name"].Select(item => Protobuf.ToString(item));
			NamespaceType = base.Outputs["namespaceType"].Select(item => Protobuf.ToString(item));
			ResourceGroupName = base.Outputs["resourceGroupName"].Select(item => Protobuf.ToString(item));
			ServicebusEndpoint = base.Outputs["servicebusEndpoint"].Select(item => Protobuf.ToString(item));
			Sku = base.Outputs["sku"].Select(item => NamespaceSku.FromProtobuf(item));
		} // ctor

		private static Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>> SerialiseArgs(NamespaceArgs args) {
			var props = new Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>();
			props["enabled"] = Protobuf.ToProtobuf(args.Enabled);
			props["location"] = Protobuf.ToProtobuf(args.Location);
			props["name"] = Protobuf.ToProtobuf(args.Name);
			props["namespaceType"] = Protobuf.ToProtobuf(args.NamespaceType);
			props["resourceGroupName"] = Protobuf.ToProtobuf(args.ResourceGroupName);
			props["sku"] = Protobuf.ToProtobuf(args.Sku);
			props["servicebusEndpoint"] = null; //out
			return props;
		} // SerialiseArgs

	} // Namespace
} // Pulumi.Azure.Notificationhub
