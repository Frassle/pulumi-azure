// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Azure.Notificationhub {

	public sealed class GetNamespaceSku : Pulumi.IProtobuf {
		public string Name { get; set; }

		public Google.Protobuf.WellKnownTypes.Value ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("name", Protobuf.ToProtobuf(Name)));
		} // ToProtobuf

		public static GetNamespaceSku FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new GetNamespaceSku();
				if (obj.Fields.ContainsKey("name")) {
					result.Name = Protobuf.ToString(obj.Fields["name"]);
				}
			return result;
		} // FromProtobuf

	} // GetNamespaceSku

	/// <summary>
	/// A collection of arguments for invoking getNamespace.
	/// </summary>
	public struct GetNamespaceArgs {
		/// <summary>
		/// Specifies the Name of the Notification Hub Namespace.
		/// </summary>
		public string Name { get; set; }

		/// <summary>
		/// Specifies the Name of the Resource Group within which the Notification Hub exists.
		/// </summary>
		public string ResourceGroupName { get; set; }

	} // GetNamespaceArgs

	/// <summary>
	/// A collection of values returned by getNamespace.
	/// </summary>
	public struct GetNamespaceResult {
		/// <summary>
		/// Is this Notification Hub Namespace enabled?
		/// </summary>
		public bool Enabled { get; set; }

		/// <summary>
		/// The Azure Region in which this Notification Hub Namespace exists.
		/// </summary>
		public string Location { get; set; }

		/// <summary>
		/// The Type of Namespace, such as `Messaging` or `NotificationHub`.
		/// </summary>
		public string NamespaceType { get; set; }

		public string ServicebusEndpoint { get; set; }

		/// <summary>
		/// A `sku` block as defined below.
		/// </summary>
		public GetNamespaceSku[] Sku { get; set; }

		/// <summary>
		/// id is the provider-assigned unique ID for this managed resource.
		/// </summary>
		public string Id { get; set; }

	} // GetNamespaceResult

	public static partial class NotificationhubModule {
		/// <summary>
		/// Use this data source to access information about an existing Notification Hub Namespace.
		/// </summary>
		public static System.Threading.Tasks.Task<GetNamespaceResult> GetNamespace(GetNamespaceArgs args, Pulumi.InvokeOptions opts = default(Pulumi.InvokeOptions)) {
			var invokeArgs = new Google.Protobuf.WellKnownTypes.Struct();
			invokeArgs.Fields["name"] = Protobuf.ToProtobuf(args.Name);
			invokeArgs.Fields["resourceGroupName"] = Protobuf.ToProtobuf(args.ResourceGroupName);

			var task = Pulumi.Runtime.InvokeAsync("azure:notificationhub/getNamespace:getNamespace", invokeArgs, opts);

			return task.ContinueWith(response => {
				var protobuf = response.Result;
				var result = new GetNamespaceResult();
				if (protobuf.Fields.ContainsKey("enabled")) {
					result.Enabled = Protobuf.ToBool(protobuf.Fields["enabled"]);
				}
				if (protobuf.Fields.ContainsKey("location")) {
					result.Location = Protobuf.ToString(protobuf.Fields["location"]);
				}
				if (protobuf.Fields.ContainsKey("namespaceType")) {
					result.NamespaceType = Protobuf.ToString(protobuf.Fields["namespaceType"]);
				}
				if (protobuf.Fields.ContainsKey("servicebusEndpoint")) {
					result.ServicebusEndpoint = Protobuf.ToString(protobuf.Fields["servicebusEndpoint"]);
				}
				if (protobuf.Fields.ContainsKey("sku")) {
					result.Sku = Protobuf.ToList(protobuf.Fields["sku"], item => GetNamespaceSku.FromProtobuf(item));
				}
				if (protobuf.Fields.ContainsKey("id")) {
					result.Id = Protobuf.ToString(protobuf.Fields["id"]);
				}
				return result;
			});
		} // GetNamespace

	} // NotificationhubModule
} // Pulumi.Azure.Notificationhub
