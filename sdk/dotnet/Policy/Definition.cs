// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Azure.Policy {

	/// <summary>
	/// The set of arguments for constructing a Definition resource.
	/// </summary>
	public struct DefinitionArgs {
		/// <summary>
		/// The description of the policy definition.
		/// </summary>
		public Pulumi.IO<string> Description { get; set; }

		/// <summary>
		/// The display name of the policy definition.
		/// </summary>
		public Pulumi.IO<string> DisplayName { get; set; }

		/// <summary>
		/// The ID of the Management Group where this policy should be defined. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ManagementGroupId { get; set; }

		/// <summary>
		/// The metadata for the policy definition. This
		/// is a json object representing additional metadata that should be stored
		/// with the policy definition.
		/// </summary>
		public Pulumi.IO<string> Metadata { get; set; }

		/// <summary>
		/// The policy mode that allows you to specify which resource
		/// types will be evaluated.  The value can be "All", "Indexed" or
		/// "NotSpecified". Changing this resource forces a new resource to be
		/// created.
		/// </summary>
		public Pulumi.IO<string> Mode { get; set; }

		/// <summary>
		/// The name of the policy definition. Changing this forces a
		/// new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// Parameters for the policy definition. This field
		/// is a json object that allows you to parameterize your policy definition.
		/// </summary>
		public Pulumi.IO<string> Parameters { get; set; }

		/// <summary>
		/// The policy rule for the policy definition. This
		/// is a json object representing the rule that contains an if and
		/// a then block.
		/// </summary>
		public Pulumi.IO<string> PolicyRule { get; set; }

		/// <summary>
		/// The policy type.  The value can be "BuiltIn", "Custom"
		/// or "NotSpecified". Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> PolicyType { get; set; }

	} // DefinitionArgs

	/// <summary>
	/// Manages a policy rule definition on a management group or your provider subscription. 
	/// 
	/// Policy definitions do not take effect until they are assigned to a scope using a Policy Assignment.
	/// </summary>
	public class Definition : Pulumi.CustomResource {
		/// <summary>
		/// The description of the policy definition.
		/// </summary>
		public Pulumi.IO<string> Description { get; set; }

		/// <summary>
		/// The display name of the policy definition.
		/// </summary>
		public Pulumi.IO<string> DisplayName { get; set; }

		/// <summary>
		/// The ID of the Management Group where this policy should be defined. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ManagementGroupId { get; set; }

		/// <summary>
		/// The metadata for the policy definition. This
		/// is a json object representing additional metadata that should be stored
		/// with the policy definition.
		/// </summary>
		public Pulumi.IO<string> Metadata { get; set; }

		/// <summary>
		/// The policy mode that allows you to specify which resource
		/// types will be evaluated.  The value can be "All", "Indexed" or
		/// "NotSpecified". Changing this resource forces a new resource to be
		/// created.
		/// </summary>
		public Pulumi.IO<string> Mode { get; set; }

		/// <summary>
		/// The name of the policy definition. Changing this forces a
		/// new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// Parameters for the policy definition. This field
		/// is a json object that allows you to parameterize your policy definition.
		/// </summary>
		public Pulumi.IO<string> Parameters { get; set; }

		/// <summary>
		/// The policy rule for the policy definition. This
		/// is a json object representing the rule that contains an if and
		/// a then block.
		/// </summary>
		public Pulumi.IO<string> PolicyRule { get; set; }

		/// <summary>
		/// The policy type.  The value can be "BuiltIn", "Custom"
		/// or "NotSpecified". Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> PolicyType { get; set; }

		public Definition(string name, DefinitionArgs args, Pulumi.ResourceOptions opts = default(Pulumi.ResourceOptions))
			: base("azure:policy/definition:Definition", name, SerialiseArgs(args), opts) {
			Description = base.Outputs["description"].Select(item => Protobuf.ToString(item));
			DisplayName = base.Outputs["displayName"].Select(item => Protobuf.ToString(item));
			ManagementGroupId = base.Outputs["managementGroupId"].Select(item => Protobuf.ToString(item));
			Metadata = base.Outputs["metadata"].Select(item => Protobuf.ToString(item));
			Mode = base.Outputs["mode"].Select(item => Protobuf.ToString(item));
			Name = base.Outputs["name"].Select(item => Protobuf.ToString(item));
			Parameters = base.Outputs["parameters"].Select(item => Protobuf.ToString(item));
			PolicyRule = base.Outputs["policyRule"].Select(item => Protobuf.ToString(item));
			PolicyType = base.Outputs["policyType"].Select(item => Protobuf.ToString(item));
		} // ctor

		private static Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>> SerialiseArgs(DefinitionArgs args) {
			var props = new Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>();
			props["description"] = Protobuf.ToProtobuf(args.Description);
			props["displayName"] = Protobuf.ToProtobuf(args.DisplayName);
			props["managementGroupId"] = Protobuf.ToProtobuf(args.ManagementGroupId);
			props["metadata"] = Protobuf.ToProtobuf(args.Metadata);
			props["mode"] = Protobuf.ToProtobuf(args.Mode);
			props["name"] = Protobuf.ToProtobuf(args.Name);
			props["parameters"] = Protobuf.ToProtobuf(args.Parameters);
			props["policyRule"] = Protobuf.ToProtobuf(args.PolicyRule);
			props["policyType"] = Protobuf.ToProtobuf(args.PolicyType);
			return props;
		} // SerialiseArgs

	} // Definition
} // Pulumi.Azure.Policy
