// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Azure.Policy {

	/// <summary>
	/// The set of arguments for constructing a PolicySetDefinition resource.
	/// </summary>
	public struct PolicySetDefinitionArgs {
		/// <summary>
		/// The description of the policy set definition.
		/// </summary>
		public Pulumi.IO<string> Description { get; set; }

		/// <summary>
		/// The display name of the policy set definition.
		/// </summary>
		public Pulumi.IO<string> DisplayName { get; set; }

		/// <summary>
		/// The ID of the Management Group where this policy should be defined. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ManagementGroupId { get; set; }

		/// <summary>
		/// The metadata for the policy set definition. This is a json object representing additional metadata that should be stored with the policy definition.
		/// </summary>
		public Pulumi.IO<string> Metadata { get; set; }

		/// <summary>
		/// The name of the policy set definition. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// Parameters for the policy set definition. This field is a json object that allows you to parameterize your policy definition.
		/// </summary>
		public Pulumi.IO<string> Parameters { get; set; }

		/// <summary>
		/// The policy definitions for the policy set definition. This is a json object representing the bundled policy definitions .
		/// </summary>
		public Pulumi.IO<string> PolicyDefinitions { get; set; }

		/// <summary>
		/// The policy set type. Possible values are `BuiltIn` or `Custom`. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> PolicyType { get; set; }

	} // PolicySetDefinitionArgs

	/// <summary>
	/// Manages a policy set definition. 
	/// 
	/// -> **NOTE:**  Policy set definitions (also known as policy initiatives) do not take effect until they are assigned to a scope using a Policy Set Assignment.
	/// </summary>
	public class PolicySetDefinition : Pulumi.CustomResource {
		/// <summary>
		/// The description of the policy set definition.
		/// </summary>
		public Pulumi.IO<string> Description { get; set; }

		/// <summary>
		/// The display name of the policy set definition.
		/// </summary>
		public Pulumi.IO<string> DisplayName { get; set; }

		/// <summary>
		/// The ID of the Management Group where this policy should be defined. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ManagementGroupId { get; set; }

		/// <summary>
		/// The metadata for the policy set definition. This is a json object representing additional metadata that should be stored with the policy definition.
		/// </summary>
		public Pulumi.IO<string> Metadata { get; set; }

		/// <summary>
		/// The name of the policy set definition. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// Parameters for the policy set definition. This field is a json object that allows you to parameterize your policy definition.
		/// </summary>
		public Pulumi.IO<string> Parameters { get; set; }

		/// <summary>
		/// The policy definitions for the policy set definition. This is a json object representing the bundled policy definitions .
		/// </summary>
		public Pulumi.IO<string> PolicyDefinitions { get; set; }

		/// <summary>
		/// The policy set type. Possible values are `BuiltIn` or `Custom`. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> PolicyType { get; set; }

		public PolicySetDefinition(string name, PolicySetDefinitionArgs args, Pulumi.ResourceOptions opts = default(Pulumi.ResourceOptions))
			: base("azure:policy/policySetDefinition:PolicySetDefinition", name, SerialiseArgs(args), opts) {
			Description = base.Outputs["description"].Select(item => Protobuf.ToString(item));
			DisplayName = base.Outputs["displayName"].Select(item => Protobuf.ToString(item));
			ManagementGroupId = base.Outputs["managementGroupId"].Select(item => Protobuf.ToString(item));
			Metadata = base.Outputs["metadata"].Select(item => Protobuf.ToString(item));
			Name = base.Outputs["name"].Select(item => Protobuf.ToString(item));
			Parameters = base.Outputs["parameters"].Select(item => Protobuf.ToString(item));
			PolicyDefinitions = base.Outputs["policyDefinitions"].Select(item => Protobuf.ToString(item));
			PolicyType = base.Outputs["policyType"].Select(item => Protobuf.ToString(item));
		} // ctor

		private static Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>> SerialiseArgs(PolicySetDefinitionArgs args) {
			var props = new Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>();
			props["description"] = Protobuf.ToProtobuf(args.Description);
			props["displayName"] = Protobuf.ToProtobuf(args.DisplayName);
			props["managementGroupId"] = Protobuf.ToProtobuf(args.ManagementGroupId);
			props["metadata"] = Protobuf.ToProtobuf(args.Metadata);
			props["name"] = Protobuf.ToProtobuf(args.Name);
			props["parameters"] = Protobuf.ToProtobuf(args.Parameters);
			props["policyDefinitions"] = Protobuf.ToProtobuf(args.PolicyDefinitions);
			props["policyType"] = Protobuf.ToProtobuf(args.PolicyType);
			return props;
		} // SerialiseArgs

	} // PolicySetDefinition
} // Pulumi.Azure.Policy
