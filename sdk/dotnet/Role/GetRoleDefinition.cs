// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Azure.Role {

	public sealed class GetRoleDefinitionPermission : Pulumi.IProtobuf {
		public string[] Actions { get; set; }
		public string[] DataActions { get; set; }
		public string[] NotActions { get; set; }
		public string[] NotDataActions { get; set; }

		public Google.Protobuf.WellKnownTypes.Value ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("actions", Protobuf.ToProtobuf(Actions, item => Protobuf.ToProtobuf(item))),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("data_actions", Protobuf.ToProtobuf(DataActions, item => Protobuf.ToProtobuf(item))),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("not_actions", Protobuf.ToProtobuf(NotActions, item => Protobuf.ToProtobuf(item))),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("not_data_actions", Protobuf.ToProtobuf(NotDataActions, item => Protobuf.ToProtobuf(item))));
		} // ToProtobuf

		public static GetRoleDefinitionPermission FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new GetRoleDefinitionPermission();
				if (obj.Fields.ContainsKey("actions")) {
					result.Actions = Protobuf.ToList(obj.Fields["actions"], item => Protobuf.ToString(item));
				}
				if (obj.Fields.ContainsKey("data_actions")) {
					result.DataActions = Protobuf.ToList(obj.Fields["data_actions"], item => Protobuf.ToString(item));
				}
				if (obj.Fields.ContainsKey("not_actions")) {
					result.NotActions = Protobuf.ToList(obj.Fields["not_actions"], item => Protobuf.ToString(item));
				}
				if (obj.Fields.ContainsKey("not_data_actions")) {
					result.NotDataActions = Protobuf.ToList(obj.Fields["not_data_actions"], item => Protobuf.ToString(item));
				}
			return result;
		} // FromProtobuf

	} // GetRoleDefinitionPermission

	/// <summary>
	/// A collection of arguments for invoking getRoleDefinition.
	/// </summary>
	public struct GetRoleDefinitionArgs {
		/// <summary>
		/// Specifies the ID of the Role Definition as a UUID/GUID.
		/// </summary>
		public string RoleDefinitionId { get; set; }

		/// <summary>
		/// Specifies the Scope at which the Custom Role Definition exists.
		/// </summary>
		public string Scope { get; set; }

	} // GetRoleDefinitionArgs

	/// <summary>
	/// A collection of values returned by getRoleDefinition.
	/// </summary>
	public struct GetRoleDefinitionResult {
		/// <summary>
		/// One or more assignable scopes for this Role Definition, such as `/subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333`, `/subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333/resourceGroups/myGroup`, or `/subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333/resourceGroups/myGroup/providers/Microsoft.Compute/virtualMachines/myVM`.
		/// </summary>
		public string[] AssignableScopes { get; set; }

		/// <summary>
		/// the Description of the built-in Role.
		/// </summary>
		public string Description { get; set; }

		public string Name { get; set; }

		/// <summary>
		/// a `permissions` block as documented below.
		/// </summary>
		public GetRoleDefinitionPermission[] Permissions { get; set; }

		/// <summary>
		/// the Type of the Role.
		/// </summary>
		public string Type { get; set; }

		/// <summary>
		/// id is the provider-assigned unique ID for this managed resource.
		/// </summary>
		public string Id { get; set; }

	} // GetRoleDefinitionResult

	public static partial class RoleModule {
		/// <summary>
		/// Use this data source to access information about an existing Custom Role Definition. To access information about a built-in Role Definition, please see the `azurerm_builtin_role_definition` data source instead.
		/// </summary>
		public static System.Threading.Tasks.Task<GetRoleDefinitionResult> GetRoleDefinition(GetRoleDefinitionArgs args, Pulumi.InvokeOptions opts = default(Pulumi.InvokeOptions)) {
			var invokeArgs = new Google.Protobuf.WellKnownTypes.Struct();
			invokeArgs.Fields["roleDefinitionId"] = Protobuf.ToProtobuf(args.RoleDefinitionId);
			invokeArgs.Fields["scope"] = Protobuf.ToProtobuf(args.Scope);

			var task = Pulumi.Runtime.InvokeAsync("azure:role/getRoleDefinition:getRoleDefinition", invokeArgs, opts);

			return task.ContinueWith(response => {
				var protobuf = response.Result;
				var result = new GetRoleDefinitionResult();
				if (protobuf.Fields.ContainsKey("assignableScopes")) {
					result.AssignableScopes = Protobuf.ToList(protobuf.Fields["assignableScopes"], item => Protobuf.ToString(item));
				}
				if (protobuf.Fields.ContainsKey("description")) {
					result.Description = Protobuf.ToString(protobuf.Fields["description"]);
				}
				if (protobuf.Fields.ContainsKey("name")) {
					result.Name = Protobuf.ToString(protobuf.Fields["name"]);
				}
				if (protobuf.Fields.ContainsKey("permissions")) {
					result.Permissions = Protobuf.ToList(protobuf.Fields["permissions"], item => GetRoleDefinitionPermission.FromProtobuf(item));
				}
				if (protobuf.Fields.ContainsKey("type")) {
					result.Type = Protobuf.ToString(protobuf.Fields["type"]);
				}
				if (protobuf.Fields.ContainsKey("id")) {
					result.Id = Protobuf.ToString(protobuf.Fields["id"]);
				}
				return result;
			});
		} // GetRoleDefinition

	} // RoleModule
} // Pulumi.Azure.Role
