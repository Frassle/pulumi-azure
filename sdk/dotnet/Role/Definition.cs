// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Azure.Role {

	public sealed class DefinitionArgsPermission : Pulumi.IIOProtobuf {
		public Pulumi.IO<Pulumi.IO<string>[]> Actions { get; set; }
		public Pulumi.IO<Pulumi.IO<string>[]> DataActions { get; set; }
		public Pulumi.IO<Pulumi.IO<string>[]> NotActions { get; set; }
		public Pulumi.IO<Pulumi.IO<string>[]> NotDataActions { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("actions", Protobuf.ToProtobuf(Actions, item => Protobuf.ToProtobuf(item))),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("data_actions", Protobuf.ToProtobuf(DataActions, item => Protobuf.ToProtobuf(item))),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("not_actions", Protobuf.ToProtobuf(NotActions, item => Protobuf.ToProtobuf(item))),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("not_data_actions", Protobuf.ToProtobuf(NotDataActions, item => Protobuf.ToProtobuf(item))));
		} // ToProtobuf

	} // DefinitionArgsPermission

	public sealed class DefinitionPermission : Pulumi.IIOProtobuf {
		public Pulumi.IO<string[]> Actions { get; set; }
		public Pulumi.IO<string[]> DataActions { get; set; }
		public Pulumi.IO<string[]> NotActions { get; set; }
		public Pulumi.IO<string[]> NotDataActions { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("actions", Protobuf.ToProtobuf(Actions, item => Protobuf.ToProtobuf(item))),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("data_actions", Protobuf.ToProtobuf(DataActions, item => Protobuf.ToProtobuf(item))),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("not_actions", Protobuf.ToProtobuf(NotActions, item => Protobuf.ToProtobuf(item))),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("not_data_actions", Protobuf.ToProtobuf(NotDataActions, item => Protobuf.ToProtobuf(item))));
		} // ToProtobuf

		public static DefinitionPermission FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new DefinitionPermission();
				if (obj.Fields.ContainsKey("actions")) {
					result.Actions = Protobuf.ToList(obj.Fields["actions"], item => Protobuf.ToString(item));
				}
				if (obj.Fields.ContainsKey("data_actions")) {
					result.DataActions = Protobuf.ToList(obj.Fields["data_actions"], item => Protobuf.ToString(item));
				}
				if (obj.Fields.ContainsKey("not_actions")) {
					result.NotActions = Protobuf.ToList(obj.Fields["not_actions"], item => Protobuf.ToString(item));
				}
				if (obj.Fields.ContainsKey("not_data_actions")) {
					result.NotDataActions = Protobuf.ToList(obj.Fields["not_data_actions"], item => Protobuf.ToString(item));
				}
			return result;
		} // FromProtobuf

	} // DefinitionPermission

	/// <summary>
	/// The set of arguments for constructing a Definition resource.
	/// </summary>
	public struct DefinitionArgs {
		/// <summary>
		/// One or more assignable scopes for this Role Definition, such as `/subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333`, `/subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333/resourceGroups/myGroup`, or `/subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333/resourceGroups/myGroup/providers/Microsoft.Compute/virtualMachines/myVM`.
		/// </summary>
		public Pulumi.IO<Pulumi.IO<string>[]> AssignableScopes { get; set; }

		/// <summary>
		/// A description of the Role Definition.
		/// </summary>
		public Pulumi.IO<string> Description { get; set; }

		/// <summary>
		/// The name of the Role Definition. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// A `permissions` block as defined below.
		/// </summary>
		public Pulumi.IO<Pulumi.IO<DefinitionArgsPermission>[]> Permissions { get; set; }

		/// <summary>
		/// A unique UUID/GUID which identifies this role - one will be generated if not specified. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> RoleDefinitionId { get; set; }

		/// <summary>
		/// The scope at which the Role Definition applies too, such as `/subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333`, `/subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333/resourceGroups/myGroup`, or `/subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333/resourceGroups/myGroup/providers/Microsoft.Compute/virtualMachines/myVM`. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Scope { get; set; }

	} // DefinitionArgs

	/// <summary>
	/// Manages a custom Role Definition, used to assign Roles to Users/Principals. See ['Understand role definitions'](https://docs.microsoft.com/en-us/azure/role-based-access-control/role-definitions) in the Azure documentation for more details.
	/// </summary>
	public class Definition : Pulumi.CustomResource {
		/// <summary>
		/// One or more assignable scopes for this Role Definition, such as `/subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333`, `/subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333/resourceGroups/myGroup`, or `/subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333/resourceGroups/myGroup/providers/Microsoft.Compute/virtualMachines/myVM`.
		/// </summary>
		public Pulumi.IO<string[]> AssignableScopes { get; set; }

		/// <summary>
		/// A description of the Role Definition.
		/// </summary>
		public Pulumi.IO<string> Description { get; set; }

		/// <summary>
		/// The name of the Role Definition. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// A `permissions` block as defined below.
		/// </summary>
		public Pulumi.IO<DefinitionPermission[]> Permissions { get; set; }

		/// <summary>
		/// A unique UUID/GUID which identifies this role - one will be generated if not specified. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> RoleDefinitionId { get; set; }

		/// <summary>
		/// The scope at which the Role Definition applies too, such as `/subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333`, `/subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333/resourceGroups/myGroup`, or `/subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333/resourceGroups/myGroup/providers/Microsoft.Compute/virtualMachines/myVM`. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Scope { get; set; }

		public Definition(string name, DefinitionArgs args, Pulumi.ResourceOptions opts = default(Pulumi.ResourceOptions))
			: base("azure:role/definition:Definition", name, SerialiseArgs(args), opts) {
			AssignableScopes = base.Outputs["assignableScopes"].Select(item => Protobuf.ToList(item, item1 => Protobuf.ToString(item1)));
			Description = base.Outputs["description"].Select(item => Protobuf.ToString(item));
			Name = base.Outputs["name"].Select(item => Protobuf.ToString(item));
			Permissions = base.Outputs["permissions"].Select(item => Protobuf.ToList(item, item1 => DefinitionPermission.FromProtobuf(item1)));
			RoleDefinitionId = base.Outputs["roleDefinitionId"].Select(item => Protobuf.ToString(item));
			Scope = base.Outputs["scope"].Select(item => Protobuf.ToString(item));
		} // ctor

		private static Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>> SerialiseArgs(DefinitionArgs args) {
			var props = new Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>();
			props["assignableScopes"] = Protobuf.ToProtobuf(args.AssignableScopes, item => Protobuf.ToProtobuf(item));
			props["description"] = Protobuf.ToProtobuf(args.Description);
			props["name"] = Protobuf.ToProtobuf(args.Name);
			props["permissions"] = Protobuf.ToProtobuf(args.Permissions, item => Protobuf.ToProtobuf(item));
			props["roleDefinitionId"] = Protobuf.ToProtobuf(args.RoleDefinitionId);
			props["scope"] = Protobuf.ToProtobuf(args.Scope);
			return props;
		} // SerialiseArgs

	} // Definition
} // Pulumi.Azure.Role
