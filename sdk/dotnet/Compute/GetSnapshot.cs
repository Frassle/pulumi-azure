// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Azure.Compute {

	public sealed class GetSnapshotEncryptionSettingDiskEncryptionKey : Pulumi.IProtobuf {
		public string SecretUrl { get; set; }
		public string SourceVaultId { get; set; }

		public Google.Protobuf.WellKnownTypes.Value ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("secret_url", Protobuf.ToProtobuf(SecretUrl)),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("source_vault_id", Protobuf.ToProtobuf(SourceVaultId)));
		} // ToProtobuf

		public static GetSnapshotEncryptionSettingDiskEncryptionKey FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new GetSnapshotEncryptionSettingDiskEncryptionKey();
				if (obj.Fields.ContainsKey("secret_url")) {
					result.SecretUrl = Protobuf.ToString(obj.Fields["secret_url"]);
				}
				if (obj.Fields.ContainsKey("source_vault_id")) {
					result.SourceVaultId = Protobuf.ToString(obj.Fields["source_vault_id"]);
				}
			return result;
		} // FromProtobuf

	} // GetSnapshotEncryptionSettingDiskEncryptionKey

	public sealed class GetSnapshotEncryptionSettingKeyEncryptionKey : Pulumi.IProtobuf {
		public string KeyUrl { get; set; }
		public string SourceVaultId { get; set; }

		public Google.Protobuf.WellKnownTypes.Value ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("key_url", Protobuf.ToProtobuf(KeyUrl)),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("source_vault_id", Protobuf.ToProtobuf(SourceVaultId)));
		} // ToProtobuf

		public static GetSnapshotEncryptionSettingKeyEncryptionKey FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new GetSnapshotEncryptionSettingKeyEncryptionKey();
				if (obj.Fields.ContainsKey("key_url")) {
					result.KeyUrl = Protobuf.ToString(obj.Fields["key_url"]);
				}
				if (obj.Fields.ContainsKey("source_vault_id")) {
					result.SourceVaultId = Protobuf.ToString(obj.Fields["source_vault_id"]);
				}
			return result;
		} // FromProtobuf

	} // GetSnapshotEncryptionSettingKeyEncryptionKey

	public sealed class GetSnapshotEncryptionSetting : Pulumi.IProtobuf {
		public GetSnapshotEncryptionSettingDiskEncryptionKey[] DiskEncryptionKey { get; set; }
		public bool Enabled { get; set; }
		public GetSnapshotEncryptionSettingKeyEncryptionKey[] KeyEncryptionKey { get; set; }

		public Google.Protobuf.WellKnownTypes.Value ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("disk_encryption_key", Protobuf.ToProtobuf(DiskEncryptionKey, item => Protobuf.ToProtobuf(item))),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("enabled", Protobuf.ToProtobuf(Enabled)),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("key_encryption_key", Protobuf.ToProtobuf(KeyEncryptionKey, item => Protobuf.ToProtobuf(item))));
		} // ToProtobuf

		public static GetSnapshotEncryptionSetting FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new GetSnapshotEncryptionSetting();
				if (obj.Fields.ContainsKey("disk_encryption_key")) {
					result.DiskEncryptionKey = Protobuf.ToList(obj.Fields["disk_encryption_key"], item => GetSnapshotEncryptionSettingDiskEncryptionKey.FromProtobuf(item));
				}
				if (obj.Fields.ContainsKey("enabled")) {
					result.Enabled = Protobuf.ToBool(obj.Fields["enabled"]);
				}
				if (obj.Fields.ContainsKey("key_encryption_key")) {
					result.KeyEncryptionKey = Protobuf.ToList(obj.Fields["key_encryption_key"], item => GetSnapshotEncryptionSettingKeyEncryptionKey.FromProtobuf(item));
				}
			return result;
		} // FromProtobuf

	} // GetSnapshotEncryptionSetting

	/// <summary>
	/// A collection of arguments for invoking getSnapshot.
	/// </summary>
	public struct GetSnapshotArgs {
		/// <summary>
		/// Specifies the name of the Snapshot.
		/// </summary>
		public string Name { get; set; }

		/// <summary>
		/// Specifies the name of the resource group the Snapshot is located in.
		/// </summary>
		public string ResourceGroupName { get; set; }

	} // GetSnapshotArgs

	/// <summary>
	/// A collection of values returned by getSnapshot.
	/// </summary>
	public struct GetSnapshotResult {
		public string CreationOption { get; set; }

		/// <summary>
		/// The size of the Snapshotted Disk in GB.
		/// </summary>
		public int DiskSizeGb { get; set; }

		public GetSnapshotEncryptionSetting[] EncryptionSettings { get; set; }

		public string OsType { get; set; }

		/// <summary>
		/// The reference to an existing snapshot.
		/// </summary>
		public string SourceResourceId { get; set; }

		/// <summary>
		/// The URI to a Managed or Unmanaged Disk.
		/// </summary>
		public string SourceUri { get; set; }

		/// <summary>
		/// The ID of an storage account.
		/// </summary>
		public string StorageAccountId { get; set; }

		public string TimeCreated { get; set; }

		/// <summary>
		/// id is the provider-assigned unique ID for this managed resource.
		/// </summary>
		public string Id { get; set; }

	} // GetSnapshotResult

	public static partial class ComputeModule {
		/// <summary>
		/// Use this data source to access information about an existing Snapshot.
		/// </summary>
		public static System.Threading.Tasks.Task<GetSnapshotResult> GetSnapshot(GetSnapshotArgs args, Pulumi.InvokeOptions opts = default(Pulumi.InvokeOptions)) {
			var invokeArgs = new Google.Protobuf.WellKnownTypes.Struct();
			invokeArgs.Fields["name"] = Protobuf.ToProtobuf(args.Name);
			invokeArgs.Fields["resourceGroupName"] = Protobuf.ToProtobuf(args.ResourceGroupName);

			var task = Pulumi.Runtime.InvokeAsync("azure:compute/getSnapshot:getSnapshot", invokeArgs, opts);

			return task.ContinueWith(response => {
				var protobuf = response.Result;
				var result = new GetSnapshotResult();
				if (protobuf.Fields.ContainsKey("creationOption")) {
					result.CreationOption = Protobuf.ToString(protobuf.Fields["creationOption"]);
				}
				if (protobuf.Fields.ContainsKey("diskSizeGb")) {
					result.DiskSizeGb = Protobuf.ToInt(protobuf.Fields["diskSizeGb"]);
				}
				if (protobuf.Fields.ContainsKey("encryptionSettings")) {
					result.EncryptionSettings = Protobuf.ToList(protobuf.Fields["encryptionSettings"], item => GetSnapshotEncryptionSetting.FromProtobuf(item));
				}
				if (protobuf.Fields.ContainsKey("osType")) {
					result.OsType = Protobuf.ToString(protobuf.Fields["osType"]);
				}
				if (protobuf.Fields.ContainsKey("sourceResourceId")) {
					result.SourceResourceId = Protobuf.ToString(protobuf.Fields["sourceResourceId"]);
				}
				if (protobuf.Fields.ContainsKey("sourceUri")) {
					result.SourceUri = Protobuf.ToString(protobuf.Fields["sourceUri"]);
				}
				if (protobuf.Fields.ContainsKey("storageAccountId")) {
					result.StorageAccountId = Protobuf.ToString(protobuf.Fields["storageAccountId"]);
				}
				if (protobuf.Fields.ContainsKey("timeCreated")) {
					result.TimeCreated = Protobuf.ToString(protobuf.Fields["timeCreated"]);
				}
				if (protobuf.Fields.ContainsKey("id")) {
					result.Id = Protobuf.ToString(protobuf.Fields["id"]);
				}
				return result;
			});
		} // GetSnapshot

	} // ComputeModule
} // Pulumi.Azure.Compute
