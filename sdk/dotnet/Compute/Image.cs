// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Azure.Compute {

	public sealed class ImageArgsDataDisk : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> BlobUri { get; set; }
		public Pulumi.IO<string> Caching { get; set; }
		public Pulumi.IO<int> Lun { get; set; }
		public Pulumi.IO<string> ManagedDiskId { get; set; }
		public Pulumi.IO<int> SizeGb { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("blob_uri", Protobuf.ToProtobuf(BlobUri)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("caching", Protobuf.ToProtobuf(Caching)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("lun", Protobuf.ToProtobuf(Lun)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("managed_disk_id", Protobuf.ToProtobuf(ManagedDiskId)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("size_gb", Protobuf.ToProtobuf(SizeGb)));
		} // ToProtobuf

	} // ImageArgsDataDisk

	public sealed class ImageArgsOsDisk : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> BlobUri { get; set; }
		public Pulumi.IO<string> Caching { get; set; }
		public Pulumi.IO<string> ManagedDiskId { get; set; }
		public Pulumi.IO<string> OsState { get; set; }
		public Pulumi.IO<string> OsType { get; set; }
		public Pulumi.IO<int> SizeGb { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("blob_uri", Protobuf.ToProtobuf(BlobUri)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("caching", Protobuf.ToProtobuf(Caching)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("managed_disk_id", Protobuf.ToProtobuf(ManagedDiskId)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("os_state", Protobuf.ToProtobuf(OsState)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("os_type", Protobuf.ToProtobuf(OsType)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("size_gb", Protobuf.ToProtobuf(SizeGb)));
		} // ToProtobuf

	} // ImageArgsOsDisk

	public sealed class ImageDataDisk : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> BlobUri { get; set; }
		public Pulumi.IO<string> Caching { get; set; }
		public Pulumi.IO<int> Lun { get; set; }
		public Pulumi.IO<string> ManagedDiskId { get; set; }
		public Pulumi.IO<int> SizeGb { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("blob_uri", Protobuf.ToProtobuf(BlobUri)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("caching", Protobuf.ToProtobuf(Caching)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("lun", Protobuf.ToProtobuf(Lun)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("managed_disk_id", Protobuf.ToProtobuf(ManagedDiskId)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("size_gb", Protobuf.ToProtobuf(SizeGb)));
		} // ToProtobuf

		public static ImageDataDisk FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new ImageDataDisk();
				if (obj.Fields.ContainsKey("blob_uri")) {
					result.BlobUri = Protobuf.ToString(obj.Fields["blob_uri"]);
				}
				if (obj.Fields.ContainsKey("caching")) {
					result.Caching = Protobuf.ToString(obj.Fields["caching"]);
				}
				if (obj.Fields.ContainsKey("lun")) {
					result.Lun = Protobuf.ToInt(obj.Fields["lun"]);
				}
				if (obj.Fields.ContainsKey("managed_disk_id")) {
					result.ManagedDiskId = Protobuf.ToString(obj.Fields["managed_disk_id"]);
				}
				if (obj.Fields.ContainsKey("size_gb")) {
					result.SizeGb = Protobuf.ToInt(obj.Fields["size_gb"]);
				}
			return result;
		} // FromProtobuf

	} // ImageDataDisk

	public sealed class ImageOsDisk : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> BlobUri { get; set; }
		public Pulumi.IO<string> Caching { get; set; }
		public Pulumi.IO<string> ManagedDiskId { get; set; }
		public Pulumi.IO<string> OsState { get; set; }
		public Pulumi.IO<string> OsType { get; set; }
		public Pulumi.IO<int> SizeGb { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("blob_uri", Protobuf.ToProtobuf(BlobUri)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("caching", Protobuf.ToProtobuf(Caching)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("managed_disk_id", Protobuf.ToProtobuf(ManagedDiskId)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("os_state", Protobuf.ToProtobuf(OsState)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("os_type", Protobuf.ToProtobuf(OsType)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("size_gb", Protobuf.ToProtobuf(SizeGb)));
		} // ToProtobuf

		public static ImageOsDisk FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new ImageOsDisk();
				if (obj.Fields.ContainsKey("blob_uri")) {
					result.BlobUri = Protobuf.ToString(obj.Fields["blob_uri"]);
				}
				if (obj.Fields.ContainsKey("caching")) {
					result.Caching = Protobuf.ToString(obj.Fields["caching"]);
				}
				if (obj.Fields.ContainsKey("managed_disk_id")) {
					result.ManagedDiskId = Protobuf.ToString(obj.Fields["managed_disk_id"]);
				}
				if (obj.Fields.ContainsKey("os_state")) {
					result.OsState = Protobuf.ToString(obj.Fields["os_state"]);
				}
				if (obj.Fields.ContainsKey("os_type")) {
					result.OsType = Protobuf.ToString(obj.Fields["os_type"]);
				}
				if (obj.Fields.ContainsKey("size_gb")) {
					result.SizeGb = Protobuf.ToInt(obj.Fields["size_gb"]);
				}
			return result;
		} // FromProtobuf

	} // ImageOsDisk

	/// <summary>
	/// The set of arguments for constructing a Image resource.
	/// </summary>
	public struct ImageArgs {
		/// <summary>
		/// One or more `data_disk` elements as defined below.
		/// </summary>
		public Pulumi.IO<Pulumi.IO<ImageArgsDataDisk>[]> DataDisks { get; set; }

		/// <summary>
		/// Specified the supported Azure location where the resource exists.
		/// Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Location { get; set; }

		/// <summary>
		/// Specifies the name of the image. Changing this forces a
		/// new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// One or more `os_disk` elements as defined below.
		/// </summary>
		public Pulumi.IO<ImageArgsOsDisk> OsDisk { get; set; }

		/// <summary>
		/// The name of the resource group in which to create
		/// the image. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ResourceGroupName { get; set; }

		/// <summary>
		/// The Virtual Machine ID from which to create the image.
		/// </summary>
		public Pulumi.IO<string> SourceVirtualMachineId { get; set; }

		/// <summary>
		/// A mapping of tags to assign to the resource.
		/// </summary>
		public Pulumi.IO<System.Collections.Generic.Dictionary<string, string>> Tags { get; set; }

	} // ImageArgs

	/// <summary>
	/// Manage a custom virtual machine image that can be used to create virtual machines.
	/// </summary>
	public class Image : Pulumi.CustomResource {
		/// <summary>
		/// One or more `data_disk` elements as defined below.
		/// </summary>
		public Pulumi.IO<ImageDataDisk[]> DataDisks { get; set; }

		/// <summary>
		/// Specified the supported Azure location where the resource exists.
		/// Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Location { get; set; }

		/// <summary>
		/// Specifies the name of the image. Changing this forces a
		/// new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// One or more `os_disk` elements as defined below.
		/// </summary>
		public Pulumi.IO<ImageOsDisk> OsDisk { get; set; }

		/// <summary>
		/// The name of the resource group in which to create
		/// the image. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ResourceGroupName { get; set; }

		/// <summary>
		/// The Virtual Machine ID from which to create the image.
		/// </summary>
		public Pulumi.IO<string> SourceVirtualMachineId { get; set; }

		/// <summary>
		/// A mapping of tags to assign to the resource.
		/// </summary>
		public Pulumi.IO<System.Collections.Generic.Dictionary<string, string>> Tags { get; set; }

		public Image(string name, ImageArgs args, Pulumi.ResourceOptions opts = default(Pulumi.ResourceOptions))
			: base("azure:compute/image:Image", name, SerialiseArgs(args), opts) {
			DataDisks = base.Outputs["dataDisks"].Select(item => Protobuf.ToList(item, item1 => ImageDataDisk.FromProtobuf(item1)));
			Location = base.Outputs["location"].Select(item => Protobuf.ToString(item));
			Name = base.Outputs["name"].Select(item => Protobuf.ToString(item));
			OsDisk = base.Outputs["osDisk"].Select(item => ImageOsDisk.FromProtobuf(item));
			ResourceGroupName = base.Outputs["resourceGroupName"].Select(item => Protobuf.ToString(item));
			SourceVirtualMachineId = base.Outputs["sourceVirtualMachineId"].Select(item => Protobuf.ToString(item));
			Tags = base.Outputs["tags"].Select(item => Protobuf.ToMap(item));
		} // ctor

		private static Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>> SerialiseArgs(ImageArgs args) {
			var props = new Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>();
			props["dataDisks"] = Protobuf.ToProtobuf(args.DataDisks, item => Protobuf.ToProtobuf(item));
			props["location"] = Protobuf.ToProtobuf(args.Location);
			props["name"] = Protobuf.ToProtobuf(args.Name);
			props["osDisk"] = Protobuf.ToProtobuf(args.OsDisk);
			props["resourceGroupName"] = Protobuf.ToProtobuf(args.ResourceGroupName);
			props["sourceVirtualMachineId"] = Protobuf.ToProtobuf(args.SourceVirtualMachineId);
			props["tags"] = Protobuf.ToProtobuf(args.Tags);
			return props;
		} // SerialiseArgs

	} // Image
} // Pulumi.Azure.Compute
