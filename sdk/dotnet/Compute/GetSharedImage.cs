// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Azure.Compute {

	public sealed class GetSharedImageIdentifier : Pulumi.IProtobuf {
		public string Offer { get; set; }
		public string Publisher { get; set; }
		public string Sku { get; set; }

		public Google.Protobuf.WellKnownTypes.Value ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("offer", Protobuf.ToProtobuf(Offer)),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("publisher", Protobuf.ToProtobuf(Publisher)),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("sku", Protobuf.ToProtobuf(Sku)));
		} // ToProtobuf

		public static GetSharedImageIdentifier FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new GetSharedImageIdentifier();
				if (obj.Fields.ContainsKey("offer")) {
					result.Offer = Protobuf.ToString(obj.Fields["offer"]);
				}
				if (obj.Fields.ContainsKey("publisher")) {
					result.Publisher = Protobuf.ToString(obj.Fields["publisher"]);
				}
				if (obj.Fields.ContainsKey("sku")) {
					result.Sku = Protobuf.ToString(obj.Fields["sku"]);
				}
			return result;
		} // FromProtobuf

	} // GetSharedImageIdentifier

	/// <summary>
	/// A collection of arguments for invoking getSharedImage.
	/// </summary>
	public struct GetSharedImageArgs {
		/// <summary>
		/// The name of the Shared Image Gallery in which the Shared Image exists.
		/// </summary>
		public string GalleryName { get; set; }

		/// <summary>
		/// The name of the Shared Image.
		/// </summary>
		public string Name { get; set; }

		/// <summary>
		/// The name of the Resource Group in which the Shared Image Gallery exists.
		/// </summary>
		public string ResourceGroupName { get; set; }

	} // GetSharedImageArgs

	/// <summary>
	/// A collection of values returned by getSharedImage.
	/// </summary>
	public struct GetSharedImageResult {
		/// <summary>
		/// The description of this Shared Image.
		/// </summary>
		public string Description { get; set; }

		/// <summary>
		/// The End User Licence Agreement for the Shared Image.
		/// </summary>
		public string Eula { get; set; }

		public GetSharedImageIdentifier[] Identifiers { get; set; }

		/// <summary>
		/// The supported Azure location where the Shared Image Gallery exists.
		/// </summary>
		public string Location { get; set; }

		/// <summary>
		/// The type of Operating System present in this Shared Image.
		/// </summary>
		public string OsType { get; set; }

		/// <summary>
		/// The URI containing the Privacy Statement for this Shared Image.
		/// </summary>
		public string PrivacyStatementUri { get; set; }

		/// <summary>
		/// The URI containing the Release Notes for this Shared Image.
		/// </summary>
		public string ReleaseNoteUri { get; set; }

		/// <summary>
		/// A mapping of tags assigned to the Shared Image.
		/// </summary>
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }

		/// <summary>
		/// id is the provider-assigned unique ID for this managed resource.
		/// </summary>
		public string Id { get; set; }

	} // GetSharedImageResult

	public static partial class ComputeModule {
		/// <summary>
		/// Use this data source to access information about an existing Shared Image within a Shared Image Gallery.
		/// 
		/// -> **NOTE** Shared Image Galleries are currently in Public Preview. You can find more information, including [how to register for the Public Preview here](https://azure.microsoft.com/en-gb/blog/announcing-the-public-preview-of-shared-image-gallery/).
		/// </summary>
		public static System.Threading.Tasks.Task<GetSharedImageResult> GetSharedImage(GetSharedImageArgs args, Pulumi.InvokeOptions opts = default(Pulumi.InvokeOptions)) {
			var invokeArgs = new Google.Protobuf.WellKnownTypes.Struct();
			invokeArgs.Fields["galleryName"] = Protobuf.ToProtobuf(args.GalleryName);
			invokeArgs.Fields["name"] = Protobuf.ToProtobuf(args.Name);
			invokeArgs.Fields["resourceGroupName"] = Protobuf.ToProtobuf(args.ResourceGroupName);

			var task = Pulumi.Runtime.InvokeAsync("azure:compute/getSharedImage:getSharedImage", invokeArgs, opts);

			return task.ContinueWith(response => {
				var protobuf = response.Result;
				var result = new GetSharedImageResult();
				if (protobuf.Fields.ContainsKey("description")) {
					result.Description = Protobuf.ToString(protobuf.Fields["description"]);
				}
				if (protobuf.Fields.ContainsKey("eula")) {
					result.Eula = Protobuf.ToString(protobuf.Fields["eula"]);
				}
				if (protobuf.Fields.ContainsKey("identifiers")) {
					result.Identifiers = Protobuf.ToList(protobuf.Fields["identifiers"], item => GetSharedImageIdentifier.FromProtobuf(item));
				}
				if (protobuf.Fields.ContainsKey("location")) {
					result.Location = Protobuf.ToString(protobuf.Fields["location"]);
				}
				if (protobuf.Fields.ContainsKey("osType")) {
					result.OsType = Protobuf.ToString(protobuf.Fields["osType"]);
				}
				if (protobuf.Fields.ContainsKey("privacyStatementUri")) {
					result.PrivacyStatementUri = Protobuf.ToString(protobuf.Fields["privacyStatementUri"]);
				}
				if (protobuf.Fields.ContainsKey("releaseNoteUri")) {
					result.ReleaseNoteUri = Protobuf.ToString(protobuf.Fields["releaseNoteUri"]);
				}
				if (protobuf.Fields.ContainsKey("tags")) {
					result.Tags = Protobuf.ToMap(protobuf.Fields["tags"]);
				}
				if (protobuf.Fields.ContainsKey("id")) {
					result.Id = Protobuf.ToString(protobuf.Fields["id"]);
				}
				return result;
			});
		} // GetSharedImage

	} // ComputeModule
} // Pulumi.Azure.Compute
