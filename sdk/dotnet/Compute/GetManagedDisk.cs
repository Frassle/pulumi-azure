// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Azure.Compute {

	/// <summary>
	/// A collection of arguments for invoking getManagedDisk.
	/// </summary>
	public struct GetManagedDiskArgs {
		/// <summary>
		/// Specifies the name of the Managed Disk.
		/// </summary>
		public string Name { get; set; }

		/// <summary>
		/// Specifies the name of the resource group.
		/// </summary>
		public string ResourceGroupName { get; set; }

		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }

		public string[] Zones { get; set; }

	} // GetManagedDiskArgs

	/// <summary>
	/// A collection of values returned by getManagedDisk.
	/// </summary>
	public struct GetManagedDiskResult {
		public string CreateOption { get; set; }

		/// <summary>
		/// The size of the managed disk in gigabytes.
		/// </summary>
		public int DiskSizeGb { get; set; }

		/// <summary>
		/// The operating system for managed disk. Valid values are `Linux` or `Windows`
		/// </summary>
		public string OsType { get; set; }

		/// <summary>
		/// ID of an existing managed disk that the current resource was created from.
		/// </summary>
		public string SourceResourceId { get; set; }

		/// <summary>
		/// The source URI for the managed disk
		/// </summary>
		public string SourceUri { get; set; }

		/// <summary>
		/// The storage account type for the managed disk.
		/// </summary>
		public string StorageAccountType { get; set; }

		/// <summary>
		/// A mapping of tags assigned to the resource.
		/// </summary>
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }

		/// <summary>
		/// A collection containing the availability zone the managed disk is allocated in.
		/// </summary>
		public string[] Zones { get; set; }

		/// <summary>
		/// id is the provider-assigned unique ID for this managed resource.
		/// </summary>
		public string Id { get; set; }

	} // GetManagedDiskResult

	public static partial class ComputeModule {
		/// <summary>
		/// Use this data source to access information about an existing Managed Disk.
		/// </summary>
		public static System.Threading.Tasks.Task<GetManagedDiskResult> GetManagedDisk(GetManagedDiskArgs args, Pulumi.InvokeOptions opts = default(Pulumi.InvokeOptions)) {
			var invokeArgs = new Google.Protobuf.WellKnownTypes.Struct();
			invokeArgs.Fields["name"] = Protobuf.ToProtobuf(args.Name);
			invokeArgs.Fields["resourceGroupName"] = Protobuf.ToProtobuf(args.ResourceGroupName);
			invokeArgs.Fields["tags"] = Protobuf.ToProtobuf(args.Tags);
			invokeArgs.Fields["zones"] = Protobuf.ToProtobuf(args.Zones, item => Protobuf.ToProtobuf(item));

			var task = Pulumi.Runtime.InvokeAsync("azure:compute/getManagedDisk:getManagedDisk", invokeArgs, opts);

			return task.ContinueWith(response => {
				var protobuf = response.Result;
				var result = new GetManagedDiskResult();
				if (protobuf.Fields.ContainsKey("createOption")) {
					result.CreateOption = Protobuf.ToString(protobuf.Fields["createOption"]);
				}
				if (protobuf.Fields.ContainsKey("diskSizeGb")) {
					result.DiskSizeGb = Protobuf.ToInt(protobuf.Fields["diskSizeGb"]);
				}
				if (protobuf.Fields.ContainsKey("osType")) {
					result.OsType = Protobuf.ToString(protobuf.Fields["osType"]);
				}
				if (protobuf.Fields.ContainsKey("sourceResourceId")) {
					result.SourceResourceId = Protobuf.ToString(protobuf.Fields["sourceResourceId"]);
				}
				if (protobuf.Fields.ContainsKey("sourceUri")) {
					result.SourceUri = Protobuf.ToString(protobuf.Fields["sourceUri"]);
				}
				if (protobuf.Fields.ContainsKey("storageAccountType")) {
					result.StorageAccountType = Protobuf.ToString(protobuf.Fields["storageAccountType"]);
				}
				if (protobuf.Fields.ContainsKey("tags")) {
					result.Tags = Protobuf.ToMap(protobuf.Fields["tags"]);
				}
				if (protobuf.Fields.ContainsKey("zones")) {
					result.Zones = Protobuf.ToList(protobuf.Fields["zones"], item => Protobuf.ToString(item));
				}
				if (protobuf.Fields.ContainsKey("id")) {
					result.Id = Protobuf.ToString(protobuf.Fields["id"]);
				}
				return result;
			});
		} // GetManagedDisk

	} // ComputeModule
} // Pulumi.Azure.Compute
