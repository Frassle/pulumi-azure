// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Azure.Compute {

	public sealed class GetImageDataDisk : Pulumi.IProtobuf {
		public string BlobUri { get; set; }
		public string Caching { get; set; }
		public int Lun { get; set; }
		public string ManagedDiskId { get; set; }
		public int SizeGb { get; set; }

		public Google.Protobuf.WellKnownTypes.Value ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("blob_uri", Protobuf.ToProtobuf(BlobUri)),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("caching", Protobuf.ToProtobuf(Caching)),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("lun", Protobuf.ToProtobuf(Lun)),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("managed_disk_id", Protobuf.ToProtobuf(ManagedDiskId)),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("size_gb", Protobuf.ToProtobuf(SizeGb)));
		} // ToProtobuf

		public static GetImageDataDisk FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new GetImageDataDisk();
				if (obj.Fields.ContainsKey("blob_uri")) {
					result.BlobUri = Protobuf.ToString(obj.Fields["blob_uri"]);
				}
				if (obj.Fields.ContainsKey("caching")) {
					result.Caching = Protobuf.ToString(obj.Fields["caching"]);
				}
				if (obj.Fields.ContainsKey("lun")) {
					result.Lun = Protobuf.ToInt(obj.Fields["lun"]);
				}
				if (obj.Fields.ContainsKey("managed_disk_id")) {
					result.ManagedDiskId = Protobuf.ToString(obj.Fields["managed_disk_id"]);
				}
				if (obj.Fields.ContainsKey("size_gb")) {
					result.SizeGb = Protobuf.ToInt(obj.Fields["size_gb"]);
				}
			return result;
		} // FromProtobuf

	} // GetImageDataDisk

	public sealed class GetImageOsDisk : Pulumi.IProtobuf {
		public string BlobUri { get; set; }
		public string Caching { get; set; }
		public string ManagedDiskId { get; set; }
		public string OsState { get; set; }
		public string OsType { get; set; }
		public int SizeGb { get; set; }

		public Google.Protobuf.WellKnownTypes.Value ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("blob_uri", Protobuf.ToProtobuf(BlobUri)),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("caching", Protobuf.ToProtobuf(Caching)),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("managed_disk_id", Protobuf.ToProtobuf(ManagedDiskId)),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("os_state", Protobuf.ToProtobuf(OsState)),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("os_type", Protobuf.ToProtobuf(OsType)),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("size_gb", Protobuf.ToProtobuf(SizeGb)));
		} // ToProtobuf

		public static GetImageOsDisk FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new GetImageOsDisk();
				if (obj.Fields.ContainsKey("blob_uri")) {
					result.BlobUri = Protobuf.ToString(obj.Fields["blob_uri"]);
				}
				if (obj.Fields.ContainsKey("caching")) {
					result.Caching = Protobuf.ToString(obj.Fields["caching"]);
				}
				if (obj.Fields.ContainsKey("managed_disk_id")) {
					result.ManagedDiskId = Protobuf.ToString(obj.Fields["managed_disk_id"]);
				}
				if (obj.Fields.ContainsKey("os_state")) {
					result.OsState = Protobuf.ToString(obj.Fields["os_state"]);
				}
				if (obj.Fields.ContainsKey("os_type")) {
					result.OsType = Protobuf.ToString(obj.Fields["os_type"]);
				}
				if (obj.Fields.ContainsKey("size_gb")) {
					result.SizeGb = Protobuf.ToInt(obj.Fields["size_gb"]);
				}
			return result;
		} // FromProtobuf

	} // GetImageOsDisk

	/// <summary>
	/// A collection of arguments for invoking getImage.
	/// </summary>
	public struct GetImageArgs {
		/// <summary>
		/// The name of the Image.
		/// </summary>
		public string Name { get; set; }

		/// <summary>
		/// Regex pattern of the image to match.
		/// </summary>
		public string NameRegex { get; set; }

		/// <summary>
		/// The Name of the Resource Group where this Image exists.
		/// </summary>
		public string ResourceGroupName { get; set; }

		/// <summary>
		/// By default when matching by regex, images are sorted by name in ascending order and the first match is chosen, to sort descending, set this flag.
		/// </summary>
		public bool SortDescending { get; set; }

	} // GetImageArgs

	/// <summary>
	/// A collection of values returned by getImage.
	/// </summary>
	public struct GetImageResult {
		/// <summary>
		/// a collection of `data_disk` blocks as defined below.
		/// </summary>
		public GetImageDataDisk[] DataDisks { get; set; }

		/// <summary>
		/// the Azure Location where this Image exists.
		/// </summary>
		public string Location { get; set; }

		/// <summary>
		/// a `os_disk` block as defined below.
		/// </summary>
		public GetImageOsDisk[] OsDisks { get; set; }

		/// <summary>
		/// a mapping of tags to assigned to the resource.
		/// </summary>
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }

		/// <summary>
		/// id is the provider-assigned unique ID for this managed resource.
		/// </summary>
		public string Id { get; set; }

	} // GetImageResult

	public static partial class ComputeModule {
		/// <summary>
		/// Use this data source to access information about an existing Image.
		/// </summary>
		public static System.Threading.Tasks.Task<GetImageResult> GetImage(GetImageArgs args, Pulumi.InvokeOptions opts = default(Pulumi.InvokeOptions)) {
			var invokeArgs = new Google.Protobuf.WellKnownTypes.Struct();
			invokeArgs.Fields["name"] = Protobuf.ToProtobuf(args.Name);
			invokeArgs.Fields["nameRegex"] = Protobuf.ToProtobuf(args.NameRegex);
			invokeArgs.Fields["resourceGroupName"] = Protobuf.ToProtobuf(args.ResourceGroupName);
			invokeArgs.Fields["sortDescending"] = Protobuf.ToProtobuf(args.SortDescending);

			var task = Pulumi.Runtime.InvokeAsync("azure:compute/getImage:getImage", invokeArgs, opts);

			return task.ContinueWith(response => {
				var protobuf = response.Result;
				var result = new GetImageResult();
				if (protobuf.Fields.ContainsKey("dataDisks")) {
					result.DataDisks = Protobuf.ToList(protobuf.Fields["dataDisks"], item => GetImageDataDisk.FromProtobuf(item));
				}
				if (protobuf.Fields.ContainsKey("location")) {
					result.Location = Protobuf.ToString(protobuf.Fields["location"]);
				}
				if (protobuf.Fields.ContainsKey("osDisks")) {
					result.OsDisks = Protobuf.ToList(protobuf.Fields["osDisks"], item => GetImageOsDisk.FromProtobuf(item));
				}
				if (protobuf.Fields.ContainsKey("tags")) {
					result.Tags = Protobuf.ToMap(protobuf.Fields["tags"]);
				}
				if (protobuf.Fields.ContainsKey("id")) {
					result.Id = Protobuf.ToString(protobuf.Fields["id"]);
				}
				return result;
			});
		} // GetImage

	} // ComputeModule
} // Pulumi.Azure.Compute
