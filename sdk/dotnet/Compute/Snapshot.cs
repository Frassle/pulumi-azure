// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Azure.Compute {

	public sealed class SnapshotArgsEncryptionSettingArgsDiskEncryptionKey : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> SecretUrl { get; set; }
		public Pulumi.IO<string> SourceVaultId { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("secret_url", Protobuf.ToProtobuf(SecretUrl)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("source_vault_id", Protobuf.ToProtobuf(SourceVaultId)));
		} // ToProtobuf

	} // SnapshotArgsEncryptionSettingArgsDiskEncryptionKey

	public sealed class SnapshotArgsEncryptionSettingArgsKeyEncryptionKey : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> KeyUrl { get; set; }
		public Pulumi.IO<string> SourceVaultId { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("key_url", Protobuf.ToProtobuf(KeyUrl)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("source_vault_id", Protobuf.ToProtobuf(SourceVaultId)));
		} // ToProtobuf

	} // SnapshotArgsEncryptionSettingArgsKeyEncryptionKey

	public sealed class SnapshotArgsEncryptionSetting : Pulumi.IIOProtobuf {
		public Pulumi.IO<SnapshotArgsEncryptionSettingArgsDiskEncryptionKey> DiskEncryptionKey { get; set; }
		public Pulumi.IO<bool> Enabled { get; set; }
		public Pulumi.IO<SnapshotArgsEncryptionSettingArgsKeyEncryptionKey> KeyEncryptionKey { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("disk_encryption_key", Protobuf.ToProtobuf(DiskEncryptionKey)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("enabled", Protobuf.ToProtobuf(Enabled)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("key_encryption_key", Protobuf.ToProtobuf(KeyEncryptionKey)));
		} // ToProtobuf

	} // SnapshotArgsEncryptionSetting

	public sealed class SnapshotEncryptionSettingDiskEncryptionKey : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> SecretUrl { get; set; }
		public Pulumi.IO<string> SourceVaultId { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("secret_url", Protobuf.ToProtobuf(SecretUrl)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("source_vault_id", Protobuf.ToProtobuf(SourceVaultId)));
		} // ToProtobuf

		public static SnapshotEncryptionSettingDiskEncryptionKey FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new SnapshotEncryptionSettingDiskEncryptionKey();
				if (obj.Fields.ContainsKey("secret_url")) {
					result.SecretUrl = Protobuf.ToString(obj.Fields["secret_url"]);
				}
				if (obj.Fields.ContainsKey("source_vault_id")) {
					result.SourceVaultId = Protobuf.ToString(obj.Fields["source_vault_id"]);
				}
			return result;
		} // FromProtobuf

	} // SnapshotEncryptionSettingDiskEncryptionKey

	public sealed class SnapshotEncryptionSettingKeyEncryptionKey : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> KeyUrl { get; set; }
		public Pulumi.IO<string> SourceVaultId { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("key_url", Protobuf.ToProtobuf(KeyUrl)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("source_vault_id", Protobuf.ToProtobuf(SourceVaultId)));
		} // ToProtobuf

		public static SnapshotEncryptionSettingKeyEncryptionKey FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new SnapshotEncryptionSettingKeyEncryptionKey();
				if (obj.Fields.ContainsKey("key_url")) {
					result.KeyUrl = Protobuf.ToString(obj.Fields["key_url"]);
				}
				if (obj.Fields.ContainsKey("source_vault_id")) {
					result.SourceVaultId = Protobuf.ToString(obj.Fields["source_vault_id"]);
				}
			return result;
		} // FromProtobuf

	} // SnapshotEncryptionSettingKeyEncryptionKey

	public sealed class SnapshotEncryptionSetting : Pulumi.IIOProtobuf {
		public Pulumi.IO<SnapshotEncryptionSettingDiskEncryptionKey> DiskEncryptionKey { get; set; }
		public Pulumi.IO<bool> Enabled { get; set; }
		public Pulumi.IO<SnapshotEncryptionSettingKeyEncryptionKey> KeyEncryptionKey { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("disk_encryption_key", Protobuf.ToProtobuf(DiskEncryptionKey)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("enabled", Protobuf.ToProtobuf(Enabled)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("key_encryption_key", Protobuf.ToProtobuf(KeyEncryptionKey)));
		} // ToProtobuf

		public static SnapshotEncryptionSetting FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new SnapshotEncryptionSetting();
				if (obj.Fields.ContainsKey("disk_encryption_key")) {
					result.DiskEncryptionKey = SnapshotEncryptionSettingDiskEncryptionKey.FromProtobuf(obj.Fields["disk_encryption_key"]);
				}
				if (obj.Fields.ContainsKey("enabled")) {
					result.Enabled = Protobuf.ToBool(obj.Fields["enabled"]);
				}
				if (obj.Fields.ContainsKey("key_encryption_key")) {
					result.KeyEncryptionKey = SnapshotEncryptionSettingKeyEncryptionKey.FromProtobuf(obj.Fields["key_encryption_key"]);
				}
			return result;
		} // FromProtobuf

	} // SnapshotEncryptionSetting

	/// <summary>
	/// The set of arguments for constructing a Snapshot resource.
	/// </summary>
	public struct SnapshotArgs {
		/// <summary>
		/// Indicates how the snapshot is to be created. Possible values are `Copy` or `Import`. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> CreateOption { get; set; }

		/// <summary>
		/// The size of the Snapshotted Disk in GB.
		/// </summary>
		public Pulumi.IO<int> DiskSizeGb { get; set; }

		public Pulumi.IO<SnapshotArgsEncryptionSetting> EncryptionSettings { get; set; }

		/// <summary>
		/// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Location { get; set; }

		/// <summary>
		/// Specifies the name of the Snapshot resource. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// The name of the resource group in which to create the Snapshot. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ResourceGroupName { get; set; }

		/// <summary>
		/// Specifies a reference to an existing snapshot, when `create_option` is `Copy`. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> SourceResourceId { get; set; }

		/// <summary>
		/// Specifies the URI to a Managed or Unmanaged Disk. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> SourceUri { get; set; }

		/// <summary>
		/// Specifies the ID of an storage account. Used with `source_uri` to allow authorization during import of unmanaged blobs from a different subscription. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> StorageAccountId { get; set; }

		/// <summary>
		/// A mapping of tags to assign to the resource.
		/// </summary>
		public Pulumi.IO<System.Collections.Generic.Dictionary<string, string>> Tags { get; set; }

	} // SnapshotArgs

	/// <summary>
	/// Manages a Disk Snapshot.
	/// </summary>
	public class Snapshot : Pulumi.CustomResource {
		/// <summary>
		/// Indicates how the snapshot is to be created. Possible values are `Copy` or `Import`. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> CreateOption { get; set; }

		/// <summary>
		/// The size of the Snapshotted Disk in GB.
		/// </summary>
		public Pulumi.IO<int> DiskSizeGb { get; set; }

		public Pulumi.IO<SnapshotEncryptionSetting> EncryptionSettings { get; set; }

		/// <summary>
		/// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Location { get; set; }

		/// <summary>
		/// Specifies the name of the Snapshot resource. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// The name of the resource group in which to create the Snapshot. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ResourceGroupName { get; set; }

		/// <summary>
		/// Specifies a reference to an existing snapshot, when `create_option` is `Copy`. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> SourceResourceId { get; set; }

		/// <summary>
		/// Specifies the URI to a Managed or Unmanaged Disk. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> SourceUri { get; set; }

		/// <summary>
		/// Specifies the ID of an storage account. Used with `source_uri` to allow authorization during import of unmanaged blobs from a different subscription. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> StorageAccountId { get; set; }

		/// <summary>
		/// A mapping of tags to assign to the resource.
		/// </summary>
		public Pulumi.IO<System.Collections.Generic.Dictionary<string, string>> Tags { get; set; }

		public Snapshot(string name, SnapshotArgs args, Pulumi.ResourceOptions opts = default(Pulumi.ResourceOptions))
			: base("azure:compute/snapshot:Snapshot", name, SerialiseArgs(args), opts) {
			CreateOption = base.Outputs["createOption"].Select(item => Protobuf.ToString(item));
			DiskSizeGb = base.Outputs["diskSizeGb"].Select(item => Protobuf.ToInt(item));
			EncryptionSettings = base.Outputs["encryptionSettings"].Select(item => SnapshotEncryptionSetting.FromProtobuf(item));
			Location = base.Outputs["location"].Select(item => Protobuf.ToString(item));
			Name = base.Outputs["name"].Select(item => Protobuf.ToString(item));
			ResourceGroupName = base.Outputs["resourceGroupName"].Select(item => Protobuf.ToString(item));
			SourceResourceId = base.Outputs["sourceResourceId"].Select(item => Protobuf.ToString(item));
			SourceUri = base.Outputs["sourceUri"].Select(item => Protobuf.ToString(item));
			StorageAccountId = base.Outputs["storageAccountId"].Select(item => Protobuf.ToString(item));
			Tags = base.Outputs["tags"].Select(item => Protobuf.ToMap(item));
		} // ctor

		private static Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>> SerialiseArgs(SnapshotArgs args) {
			var props = new Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>();
			props["createOption"] = Protobuf.ToProtobuf(args.CreateOption);
			props["diskSizeGb"] = Protobuf.ToProtobuf(args.DiskSizeGb);
			props["encryptionSettings"] = Protobuf.ToProtobuf(args.EncryptionSettings);
			props["location"] = Protobuf.ToProtobuf(args.Location);
			props["name"] = Protobuf.ToProtobuf(args.Name);
			props["resourceGroupName"] = Protobuf.ToProtobuf(args.ResourceGroupName);
			props["sourceResourceId"] = Protobuf.ToProtobuf(args.SourceResourceId);
			props["sourceUri"] = Protobuf.ToProtobuf(args.SourceUri);
			props["storageAccountId"] = Protobuf.ToProtobuf(args.StorageAccountId);
			props["tags"] = Protobuf.ToProtobuf(args.Tags);
			return props;
		} // SerialiseArgs

	} // Snapshot
} // Pulumi.Azure.Compute
