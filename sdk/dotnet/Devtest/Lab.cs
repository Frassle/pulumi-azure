// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Azure.Devtest {

	/// <summary>
	/// The set of arguments for constructing a Lab resource.
	/// </summary>
	public struct LabArgs {
		/// <summary>
		/// Specifies the supported Azure location where the Dev Test Lab should exist. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Location { get; set; }

		/// <summary>
		/// Specifies the name of the Dev Test Lab. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// The name of the resource group under which the Dev Test Lab resource has to be created. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ResourceGroupName { get; set; }

		/// <summary>
		/// The type of storage used by the Dev Test Lab. Possible values are `Standard` and `Premium`. Defaults to `Premium`. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> StorageType { get; set; }

		/// <summary>
		/// A mapping of tags to assign to the resource.
		/// </summary>
		public Pulumi.IO<System.Collections.Generic.Dictionary<string, string>> Tags { get; set; }

	} // LabArgs

	/// <summary>
	/// Manages a Dev Test Lab.
	/// </summary>
	public class Lab : Pulumi.CustomResource {
		/// <summary>
		/// The ID of the Storage Account used for Artifact Storage.
		/// </summary>
		public Pulumi.IO<string> ArtifactsStorageAccountId { get; set; }

		/// <summary>
		/// The ID of the Default Premium Storage Account for this Dev Test Lab.
		/// </summary>
		public Pulumi.IO<string> DefaultPremiumStorageAccountId { get; set; }

		/// <summary>
		/// The ID of the Default Storage Account for this Dev Test Lab.
		/// </summary>
		public Pulumi.IO<string> DefaultStorageAccountId { get; set; }

		/// <summary>
		/// The ID of the Key used for this Dev Test Lab.
		/// </summary>
		public Pulumi.IO<string> KeyVaultId { get; set; }

		/// <summary>
		/// Specifies the supported Azure location where the Dev Test Lab should exist. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Location { get; set; }

		/// <summary>
		/// Specifies the name of the Dev Test Lab. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// The ID of the Storage Account used for Storage of Premium Data Disk.
		/// </summary>
		public Pulumi.IO<string> PremiumDataDiskStorageAccountId { get; set; }

		/// <summary>
		/// The name of the resource group under which the Dev Test Lab resource has to be created. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ResourceGroupName { get; set; }

		/// <summary>
		/// The type of storage used by the Dev Test Lab. Possible values are `Standard` and `Premium`. Defaults to `Premium`. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> StorageType { get; set; }

		/// <summary>
		/// A mapping of tags to assign to the resource.
		/// </summary>
		public Pulumi.IO<System.Collections.Generic.Dictionary<string, string>> Tags { get; set; }

		/// <summary>
		/// The unique immutable identifier of the Dev Test Lab.
		/// </summary>
		public Pulumi.IO<string> UniqueIdentifier { get; set; }

		public Lab(string name, LabArgs args, Pulumi.ResourceOptions opts = default(Pulumi.ResourceOptions))
			: base("azure:devtest/lab:Lab", name, SerialiseArgs(args), opts) {
			ArtifactsStorageAccountId = base.Outputs["artifactsStorageAccountId"].Select(item => Protobuf.ToString(item));
			DefaultPremiumStorageAccountId = base.Outputs["defaultPremiumStorageAccountId"].Select(item => Protobuf.ToString(item));
			DefaultStorageAccountId = base.Outputs["defaultStorageAccountId"].Select(item => Protobuf.ToString(item));
			KeyVaultId = base.Outputs["keyVaultId"].Select(item => Protobuf.ToString(item));
			Location = base.Outputs["location"].Select(item => Protobuf.ToString(item));
			Name = base.Outputs["name"].Select(item => Protobuf.ToString(item));
			PremiumDataDiskStorageAccountId = base.Outputs["premiumDataDiskStorageAccountId"].Select(item => Protobuf.ToString(item));
			ResourceGroupName = base.Outputs["resourceGroupName"].Select(item => Protobuf.ToString(item));
			StorageType = base.Outputs["storageType"].Select(item => Protobuf.ToString(item));
			Tags = base.Outputs["tags"].Select(item => Protobuf.ToMap(item));
			UniqueIdentifier = base.Outputs["uniqueIdentifier"].Select(item => Protobuf.ToString(item));
		} // ctor

		private static Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>> SerialiseArgs(LabArgs args) {
			var props = new Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>();
			props["location"] = Protobuf.ToProtobuf(args.Location);
			props["name"] = Protobuf.ToProtobuf(args.Name);
			props["resourceGroupName"] = Protobuf.ToProtobuf(args.ResourceGroupName);
			props["storageType"] = Protobuf.ToProtobuf(args.StorageType);
			props["tags"] = Protobuf.ToProtobuf(args.Tags);
			props["artifactsStorageAccountId"] = null; //out
			props["defaultPremiumStorageAccountId"] = null; //out
			props["defaultStorageAccountId"] = null; //out
			props["keyVaultId"] = null; //out
			props["premiumDataDiskStorageAccountId"] = null; //out
			props["uniqueIdentifier"] = null; //out
			return props;
		} // SerialiseArgs

	} // Lab
} // Pulumi.Azure.Devtest
