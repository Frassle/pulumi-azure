// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Azure.Devtest {

	/// <summary>
	/// The set of arguments for constructing a Policy resource.
	/// </summary>
	public struct PolicyArgs {
		/// <summary>
		/// A description for the Policy.
		/// </summary>
		public Pulumi.IO<string> Description { get; set; }

		/// <summary>
		/// The Evaluation Type used for this Policy. Possible values include: 'AllowedValuesPolicy', 'MaxValuePolicy'. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> EvaluatorType { get; set; }

		/// <summary>
		/// The Fact Data for this Policy.
		/// </summary>
		public Pulumi.IO<string> FactData { get; set; }

		/// <summary>
		/// Specifies the name of the Dev Test Lab in which the Policy should be created. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> LabName { get; set; }

		/// <summary>
		/// Specifies the name of the Dev Test Policy. Possible values are `GalleryImage`, `LabPremiumVmCount`, `LabTargetCost`, `LabVmCount`, `LabVmSize`, `UserOwnedLabPremiumVmCount`, `UserOwnedLabVmCount` and `UserOwnedLabVmCountInSubnet`. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// Specifies the name of the Policy Set within the Dev Test Lab where this policy should be created. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> PolicySetName { get; set; }

		/// <summary>
		/// The name of the resource group in which the Dev Test Lab resource exists. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ResourceGroupName { get; set; }

		/// <summary>
		/// A mapping of tags to assign to the resource.
		/// </summary>
		public Pulumi.IO<System.Collections.Generic.Dictionary<string, string>> Tags { get; set; }

		/// <summary>
		/// The Threshold for this Policy.
		/// </summary>
		public Pulumi.IO<string> Threshold { get; set; }

	} // PolicyArgs

	/// <summary>
	/// Manages a Policy within a Dev Test Policy Set.
	/// </summary>
	public class Policy : Pulumi.CustomResource {
		/// <summary>
		/// A description for the Policy.
		/// </summary>
		public Pulumi.IO<string> Description { get; set; }

		/// <summary>
		/// The Evaluation Type used for this Policy. Possible values include: 'AllowedValuesPolicy', 'MaxValuePolicy'. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> EvaluatorType { get; set; }

		/// <summary>
		/// The Fact Data for this Policy.
		/// </summary>
		public Pulumi.IO<string> FactData { get; set; }

		/// <summary>
		/// Specifies the name of the Dev Test Lab in which the Policy should be created. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> LabName { get; set; }

		/// <summary>
		/// Specifies the name of the Dev Test Policy. Possible values are `GalleryImage`, `LabPremiumVmCount`, `LabTargetCost`, `LabVmCount`, `LabVmSize`, `UserOwnedLabPremiumVmCount`, `UserOwnedLabVmCount` and `UserOwnedLabVmCountInSubnet`. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// Specifies the name of the Policy Set within the Dev Test Lab where this policy should be created. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> PolicySetName { get; set; }

		/// <summary>
		/// The name of the resource group in which the Dev Test Lab resource exists. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ResourceGroupName { get; set; }

		/// <summary>
		/// A mapping of tags to assign to the resource.
		/// </summary>
		public Pulumi.IO<System.Collections.Generic.Dictionary<string, string>> Tags { get; set; }

		/// <summary>
		/// The Threshold for this Policy.
		/// </summary>
		public Pulumi.IO<string> Threshold { get; set; }

		public Policy(string name, PolicyArgs args, Pulumi.ResourceOptions opts = default(Pulumi.ResourceOptions))
			: base("azure:devtest/policy:Policy", name, SerialiseArgs(args), opts) {
			Description = base.Outputs["description"].Select(item => Protobuf.ToString(item));
			EvaluatorType = base.Outputs["evaluatorType"].Select(item => Protobuf.ToString(item));
			FactData = base.Outputs["factData"].Select(item => Protobuf.ToString(item));
			LabName = base.Outputs["labName"].Select(item => Protobuf.ToString(item));
			Name = base.Outputs["name"].Select(item => Protobuf.ToString(item));
			PolicySetName = base.Outputs["policySetName"].Select(item => Protobuf.ToString(item));
			ResourceGroupName = base.Outputs["resourceGroupName"].Select(item => Protobuf.ToString(item));
			Tags = base.Outputs["tags"].Select(item => Protobuf.ToMap(item));
			Threshold = base.Outputs["threshold"].Select(item => Protobuf.ToString(item));
		} // ctor

		private static Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>> SerialiseArgs(PolicyArgs args) {
			var props = new Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>();
			props["description"] = Protobuf.ToProtobuf(args.Description);
			props["evaluatorType"] = Protobuf.ToProtobuf(args.EvaluatorType);
			props["factData"] = Protobuf.ToProtobuf(args.FactData);
			props["labName"] = Protobuf.ToProtobuf(args.LabName);
			props["name"] = Protobuf.ToProtobuf(args.Name);
			props["policySetName"] = Protobuf.ToProtobuf(args.PolicySetName);
			props["resourceGroupName"] = Protobuf.ToProtobuf(args.ResourceGroupName);
			props["tags"] = Protobuf.ToProtobuf(args.Tags);
			props["threshold"] = Protobuf.ToProtobuf(args.Threshold);
			return props;
		} // SerialiseArgs

	} // Policy
} // Pulumi.Azure.Devtest
