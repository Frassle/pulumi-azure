// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Azure.Devtest {

	/// <summary>
	/// A collection of arguments for invoking getLab.
	/// </summary>
	public struct GetLabArgs {
		/// <summary>
		/// The name of the Dev Test Lab.
		/// </summary>
		public string Name { get; set; }

		/// <summary>
		/// The Name of the Resource Group where the Dev Test Lab exists.
		/// </summary>
		public string ResourceGroupName { get; set; }

	} // GetLabArgs

	/// <summary>
	/// A collection of values returned by getLab.
	/// </summary>
	public struct GetLabResult {
		/// <summary>
		/// The ID of the Storage Account used for Artifact Storage.
		/// </summary>
		public string ArtifactsStorageAccountId { get; set; }

		/// <summary>
		/// The ID of the Default Premium Storage Account for this Dev Test Lab.
		/// </summary>
		public string DefaultPremiumStorageAccountId { get; set; }

		/// <summary>
		/// The ID of the Default Storage Account for this Dev Test Lab.
		/// </summary>
		public string DefaultStorageAccountId { get; set; }

		/// <summary>
		/// The ID of the Key used for this Dev Test Lab.
		/// </summary>
		public string KeyVaultId { get; set; }

		/// <summary>
		/// The Azure location where the Dev Test Lab exists.
		/// </summary>
		public string Location { get; set; }

		/// <summary>
		/// The ID of the Storage Account used for Storage of Premium Data Disk.
		/// </summary>
		public string PremiumDataDiskStorageAccountId { get; set; }

		/// <summary>
		/// The type of storage used by the Dev Test Lab.
		/// </summary>
		public string StorageType { get; set; }

		/// <summary>
		/// A mapping of tags to assign to the resource.
		/// </summary>
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }

		/// <summary>
		/// The unique immutable identifier of the Dev Test Lab.
		/// </summary>
		public string UniqueIdentifier { get; set; }

		/// <summary>
		/// id is the provider-assigned unique ID for this managed resource.
		/// </summary>
		public string Id { get; set; }

	} // GetLabResult

	public static partial class DevtestModule {
		/// <summary>
		/// Use this data source to access information about an existing Dev Test Lab.
		/// </summary>
		public static System.Threading.Tasks.Task<GetLabResult> GetLab(GetLabArgs args, Pulumi.InvokeOptions opts = default(Pulumi.InvokeOptions)) {
			var invokeArgs = new Google.Protobuf.WellKnownTypes.Struct();
			invokeArgs.Fields["name"] = Protobuf.ToProtobuf(args.Name);
			invokeArgs.Fields["resourceGroupName"] = Protobuf.ToProtobuf(args.ResourceGroupName);

			var task = Pulumi.Runtime.InvokeAsync("azure:devtest/getLab:getLab", invokeArgs, opts);

			return task.ContinueWith(response => {
				var protobuf = response.Result;
				var result = new GetLabResult();
				if (protobuf.Fields.ContainsKey("artifactsStorageAccountId")) {
					result.ArtifactsStorageAccountId = Protobuf.ToString(protobuf.Fields["artifactsStorageAccountId"]);
				}
				if (protobuf.Fields.ContainsKey("defaultPremiumStorageAccountId")) {
					result.DefaultPremiumStorageAccountId = Protobuf.ToString(protobuf.Fields["defaultPremiumStorageAccountId"]);
				}
				if (protobuf.Fields.ContainsKey("defaultStorageAccountId")) {
					result.DefaultStorageAccountId = Protobuf.ToString(protobuf.Fields["defaultStorageAccountId"]);
				}
				if (protobuf.Fields.ContainsKey("keyVaultId")) {
					result.KeyVaultId = Protobuf.ToString(protobuf.Fields["keyVaultId"]);
				}
				if (protobuf.Fields.ContainsKey("location")) {
					result.Location = Protobuf.ToString(protobuf.Fields["location"]);
				}
				if (protobuf.Fields.ContainsKey("premiumDataDiskStorageAccountId")) {
					result.PremiumDataDiskStorageAccountId = Protobuf.ToString(protobuf.Fields["premiumDataDiskStorageAccountId"]);
				}
				if (protobuf.Fields.ContainsKey("storageType")) {
					result.StorageType = Protobuf.ToString(protobuf.Fields["storageType"]);
				}
				if (protobuf.Fields.ContainsKey("tags")) {
					result.Tags = Protobuf.ToMap(protobuf.Fields["tags"]);
				}
				if (protobuf.Fields.ContainsKey("uniqueIdentifier")) {
					result.UniqueIdentifier = Protobuf.ToString(protobuf.Fields["uniqueIdentifier"]);
				}
				if (protobuf.Fields.ContainsKey("id")) {
					result.Id = Protobuf.ToString(protobuf.Fields["id"]);
				}
				return result;
			});
		} // GetLab

	} // DevtestModule
} // Pulumi.Azure.Devtest
