// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Azure.Monitoring {

	public sealed class LogProfileArgsRetentionPolicy : Pulumi.IIOProtobuf {
		public Pulumi.IO<int> Days { get; set; }
		public Pulumi.IO<bool> Enabled { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("days", Protobuf.ToProtobuf(Days)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("enabled", Protobuf.ToProtobuf(Enabled)));
		} // ToProtobuf

	} // LogProfileArgsRetentionPolicy

	public sealed class LogProfileRetentionPolicy : Pulumi.IIOProtobuf {
		public Pulumi.IO<int> Days { get; set; }
		public Pulumi.IO<bool> Enabled { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("days", Protobuf.ToProtobuf(Days)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("enabled", Protobuf.ToProtobuf(Enabled)));
		} // ToProtobuf

		public static LogProfileRetentionPolicy FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new LogProfileRetentionPolicy();
				if (obj.Fields.ContainsKey("days")) {
					result.Days = Protobuf.ToInt(obj.Fields["days"]);
				}
				if (obj.Fields.ContainsKey("enabled")) {
					result.Enabled = Protobuf.ToBool(obj.Fields["enabled"]);
				}
			return result;
		} // FromProtobuf

	} // LogProfileRetentionPolicy

	/// <summary>
	/// The set of arguments for constructing a LogProfile resource.
	/// </summary>
	public struct LogProfileArgs {
		/// <summary>
		/// List of categories of the logs.
		/// </summary>
		public Pulumi.IO<Pulumi.IO<string>[]> Categories { get; set; }

		/// <summary>
		/// List of regions for which Activity Log events are stored or streamed.
		/// </summary>
		public Pulumi.IO<Pulumi.IO<string>[]> Locations { get; set; }

		/// <summary>
		/// The name of the Log Profile. Changing this forces a
		/// new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// A `retention_policy` block as documented below. A retention policy for how long Activity Logs are retained in the storage account.
		/// </summary>
		public Pulumi.IO<LogProfileArgsRetentionPolicy> RetentionPolicy { get; set; }

		/// <summary>
		/// The service bus (or event hub) rule ID of the service bus (or event hub) namespace in which the Activity Log is streamed to. At least one of `storage_account_id` or `servicebus_rule_id` must be set.
		/// </summary>
		public Pulumi.IO<string> ServicebusRuleId { get; set; }

		/// <summary>
		/// The resource ID of the storage account in which the Activity Log is stored. At least one of `storage_account_id` or `servicebus_rule_id` must be set.
		/// </summary>
		public Pulumi.IO<string> StorageAccountId { get; set; }

	} // LogProfileArgs

	/// <summary>
	/// Manages a [Log Profile](https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-overview-activity-logs#export-the-activity-log-with-a-log-profile). A Log Profile configures how Activity Logs are exported.
	/// 
	/// -> **NOTE:** It's only possible to configure one Log Profile per Subscription. If you are trying to create more than one Log Profile, an error with `StatusCode=409` will occur.
	/// </summary>
	public class LogProfile : Pulumi.CustomResource {
		/// <summary>
		/// List of categories of the logs.
		/// </summary>
		public Pulumi.IO<string[]> Categories { get; set; }

		/// <summary>
		/// List of regions for which Activity Log events are stored or streamed.
		/// </summary>
		public Pulumi.IO<string[]> Locations { get; set; }

		/// <summary>
		/// The name of the Log Profile. Changing this forces a
		/// new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// A `retention_policy` block as documented below. A retention policy for how long Activity Logs are retained in the storage account.
		/// </summary>
		public Pulumi.IO<LogProfileRetentionPolicy> RetentionPolicy { get; set; }

		/// <summary>
		/// The service bus (or event hub) rule ID of the service bus (or event hub) namespace in which the Activity Log is streamed to. At least one of `storage_account_id` or `servicebus_rule_id` must be set.
		/// </summary>
		public Pulumi.IO<string> ServicebusRuleId { get; set; }

		/// <summary>
		/// The resource ID of the storage account in which the Activity Log is stored. At least one of `storage_account_id` or `servicebus_rule_id` must be set.
		/// </summary>
		public Pulumi.IO<string> StorageAccountId { get; set; }

		public LogProfile(string name, LogProfileArgs args, Pulumi.ResourceOptions opts = default(Pulumi.ResourceOptions))
			: base("azure:monitoring/logProfile:LogProfile", name, SerialiseArgs(args), opts) {
			Categories = base.Outputs["categories"].Select(item => Protobuf.ToList(item, item1 => Protobuf.ToString(item1)));
			Locations = base.Outputs["locations"].Select(item => Protobuf.ToList(item, item1 => Protobuf.ToString(item1)));
			Name = base.Outputs["name"].Select(item => Protobuf.ToString(item));
			RetentionPolicy = base.Outputs["retentionPolicy"].Select(item => LogProfileRetentionPolicy.FromProtobuf(item));
			ServicebusRuleId = base.Outputs["servicebusRuleId"].Select(item => Protobuf.ToString(item));
			StorageAccountId = base.Outputs["storageAccountId"].Select(item => Protobuf.ToString(item));
		} // ctor

		private static Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>> SerialiseArgs(LogProfileArgs args) {
			var props = new Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>();
			props["categories"] = Protobuf.ToProtobuf(args.Categories, item => Protobuf.ToProtobuf(item));
			props["locations"] = Protobuf.ToProtobuf(args.Locations, item => Protobuf.ToProtobuf(item));
			props["name"] = Protobuf.ToProtobuf(args.Name);
			props["retentionPolicy"] = Protobuf.ToProtobuf(args.RetentionPolicy);
			props["servicebusRuleId"] = Protobuf.ToProtobuf(args.ServicebusRuleId);
			props["storageAccountId"] = Protobuf.ToProtobuf(args.StorageAccountId);
			return props;
		} // SerialiseArgs

	} // LogProfile
} // Pulumi.Azure.Monitoring
