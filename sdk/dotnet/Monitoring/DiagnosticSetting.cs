// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Azure.Monitoring {

	public sealed class DiagnosticSettingArgsLogArgsRetentionPolicy : Pulumi.IIOProtobuf {
		public Pulumi.IO<int> Days { get; set; }
		public Pulumi.IO<bool> Enabled { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("days", Protobuf.ToProtobuf(Days)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("enabled", Protobuf.ToProtobuf(Enabled)));
		} // ToProtobuf

	} // DiagnosticSettingArgsLogArgsRetentionPolicy

	public sealed class DiagnosticSettingArgsLog : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> Category { get; set; }
		public Pulumi.IO<bool> Enabled { get; set; }
		public Pulumi.IO<DiagnosticSettingArgsLogArgsRetentionPolicy> RetentionPolicy { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("category", Protobuf.ToProtobuf(Category)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("enabled", Protobuf.ToProtobuf(Enabled)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("retention_policy", Protobuf.ToProtobuf(RetentionPolicy)));
		} // ToProtobuf

	} // DiagnosticSettingArgsLog

	public sealed class DiagnosticSettingArgsMetricArgsRetentionPolicy : Pulumi.IIOProtobuf {
		public Pulumi.IO<int> Days { get; set; }
		public Pulumi.IO<bool> Enabled { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("days", Protobuf.ToProtobuf(Days)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("enabled", Protobuf.ToProtobuf(Enabled)));
		} // ToProtobuf

	} // DiagnosticSettingArgsMetricArgsRetentionPolicy

	public sealed class DiagnosticSettingArgsMetric : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> Category { get; set; }
		public Pulumi.IO<bool> Enabled { get; set; }
		public Pulumi.IO<DiagnosticSettingArgsMetricArgsRetentionPolicy> RetentionPolicy { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("category", Protobuf.ToProtobuf(Category)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("enabled", Protobuf.ToProtobuf(Enabled)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("retention_policy", Protobuf.ToProtobuf(RetentionPolicy)));
		} // ToProtobuf

	} // DiagnosticSettingArgsMetric

	public sealed class DiagnosticSettingLogRetentionPolicy : Pulumi.IIOProtobuf {
		public Pulumi.IO<int> Days { get; set; }
		public Pulumi.IO<bool> Enabled { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("days", Protobuf.ToProtobuf(Days)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("enabled", Protobuf.ToProtobuf(Enabled)));
		} // ToProtobuf

		public static DiagnosticSettingLogRetentionPolicy FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new DiagnosticSettingLogRetentionPolicy();
				if (obj.Fields.ContainsKey("days")) {
					result.Days = Protobuf.ToInt(obj.Fields["days"]);
				}
				if (obj.Fields.ContainsKey("enabled")) {
					result.Enabled = Protobuf.ToBool(obj.Fields["enabled"]);
				}
			return result;
		} // FromProtobuf

	} // DiagnosticSettingLogRetentionPolicy

	public sealed class DiagnosticSettingLog : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> Category { get; set; }
		public Pulumi.IO<bool> Enabled { get; set; }
		public Pulumi.IO<DiagnosticSettingLogRetentionPolicy> RetentionPolicy { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("category", Protobuf.ToProtobuf(Category)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("enabled", Protobuf.ToProtobuf(Enabled)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("retention_policy", Protobuf.ToProtobuf(RetentionPolicy)));
		} // ToProtobuf

		public static DiagnosticSettingLog FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new DiagnosticSettingLog();
				if (obj.Fields.ContainsKey("category")) {
					result.Category = Protobuf.ToString(obj.Fields["category"]);
				}
				if (obj.Fields.ContainsKey("enabled")) {
					result.Enabled = Protobuf.ToBool(obj.Fields["enabled"]);
				}
				if (obj.Fields.ContainsKey("retention_policy")) {
					result.RetentionPolicy = DiagnosticSettingLogRetentionPolicy.FromProtobuf(obj.Fields["retention_policy"]);
				}
			return result;
		} // FromProtobuf

	} // DiagnosticSettingLog

	public sealed class DiagnosticSettingMetricRetentionPolicy : Pulumi.IIOProtobuf {
		public Pulumi.IO<int> Days { get; set; }
		public Pulumi.IO<bool> Enabled { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("days", Protobuf.ToProtobuf(Days)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("enabled", Protobuf.ToProtobuf(Enabled)));
		} // ToProtobuf

		public static DiagnosticSettingMetricRetentionPolicy FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new DiagnosticSettingMetricRetentionPolicy();
				if (obj.Fields.ContainsKey("days")) {
					result.Days = Protobuf.ToInt(obj.Fields["days"]);
				}
				if (obj.Fields.ContainsKey("enabled")) {
					result.Enabled = Protobuf.ToBool(obj.Fields["enabled"]);
				}
			return result;
		} // FromProtobuf

	} // DiagnosticSettingMetricRetentionPolicy

	public sealed class DiagnosticSettingMetric : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> Category { get; set; }
		public Pulumi.IO<bool> Enabled { get; set; }
		public Pulumi.IO<DiagnosticSettingMetricRetentionPolicy> RetentionPolicy { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("category", Protobuf.ToProtobuf(Category)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("enabled", Protobuf.ToProtobuf(Enabled)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("retention_policy", Protobuf.ToProtobuf(RetentionPolicy)));
		} // ToProtobuf

		public static DiagnosticSettingMetric FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new DiagnosticSettingMetric();
				if (obj.Fields.ContainsKey("category")) {
					result.Category = Protobuf.ToString(obj.Fields["category"]);
				}
				if (obj.Fields.ContainsKey("enabled")) {
					result.Enabled = Protobuf.ToBool(obj.Fields["enabled"]);
				}
				if (obj.Fields.ContainsKey("retention_policy")) {
					result.RetentionPolicy = DiagnosticSettingMetricRetentionPolicy.FromProtobuf(obj.Fields["retention_policy"]);
				}
			return result;
		} // FromProtobuf

	} // DiagnosticSettingMetric

	/// <summary>
	/// The set of arguments for constructing a DiagnosticSetting resource.
	/// </summary>
	public struct DiagnosticSettingArgs {
		/// <summary>
		/// Specifies the ID of an Event Hub Namespace Authorization Rule used to send Diagnostics Data. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> EventhubAuthorizationRuleId { get; set; }

		/// <summary>
		/// Specifies the name of the Event Hub where Diagnostics Data should be sent. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> EventhubName { get; set; }

		/// <summary>
		/// One or more `log` blocks as defined below.
		/// </summary>
		public Pulumi.IO<Pulumi.IO<DiagnosticSettingArgsLog>[]> Logs { get; set; }

		/// <summary>
		/// Specifies the ID of a Log Analytics Workspace where Diagnostics Data should be sent. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> LogAnalyticsWorkspaceId { get; set; }

		/// <summary>
		/// One or more `metric` blocks as defined below.
		/// </summary>
		public Pulumi.IO<Pulumi.IO<DiagnosticSettingArgsMetric>[]> Metrics { get; set; }

		/// <summary>
		/// Specifies the name of the Diagnostic Setting. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// With this parameter you can specify a storage account which should be used to send the logs to. Parameter must be a valid Azure Resource ID. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> StorageAccountId { get; set; }

		/// <summary>
		/// The ID of an existing Resource on which to configure Diagnostic Settings. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> TargetResourceId { get; set; }

	} // DiagnosticSettingArgs

	/// <summary>
	/// Manages a Diagnostic Setting for an existing Resource.
	/// </summary>
	public class DiagnosticSetting : Pulumi.CustomResource {
		/// <summary>
		/// Specifies the ID of an Event Hub Namespace Authorization Rule used to send Diagnostics Data. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> EventhubAuthorizationRuleId { get; set; }

		/// <summary>
		/// Specifies the name of the Event Hub where Diagnostics Data should be sent. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> EventhubName { get; set; }

		/// <summary>
		/// One or more `log` blocks as defined below.
		/// </summary>
		public Pulumi.IO<DiagnosticSettingLog[]> Logs { get; set; }

		/// <summary>
		/// Specifies the ID of a Log Analytics Workspace where Diagnostics Data should be sent. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> LogAnalyticsWorkspaceId { get; set; }

		/// <summary>
		/// One or more `metric` blocks as defined below.
		/// </summary>
		public Pulumi.IO<DiagnosticSettingMetric[]> Metrics { get; set; }

		/// <summary>
		/// Specifies the name of the Diagnostic Setting. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// With this parameter you can specify a storage account which should be used to send the logs to. Parameter must be a valid Azure Resource ID. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> StorageAccountId { get; set; }

		/// <summary>
		/// The ID of an existing Resource on which to configure Diagnostic Settings. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> TargetResourceId { get; set; }

		public DiagnosticSetting(string name, DiagnosticSettingArgs args, Pulumi.ResourceOptions opts = default(Pulumi.ResourceOptions))
			: base("azure:monitoring/diagnosticSetting:DiagnosticSetting", name, SerialiseArgs(args), opts) {
			EventhubAuthorizationRuleId = base.Outputs["eventhubAuthorizationRuleId"].Select(item => Protobuf.ToString(item));
			EventhubName = base.Outputs["eventhubName"].Select(item => Protobuf.ToString(item));
			Logs = base.Outputs["logs"].Select(item => Protobuf.ToList(item, item1 => DiagnosticSettingLog.FromProtobuf(item1)));
			LogAnalyticsWorkspaceId = base.Outputs["logAnalyticsWorkspaceId"].Select(item => Protobuf.ToString(item));
			Metrics = base.Outputs["metrics"].Select(item => Protobuf.ToList(item, item1 => DiagnosticSettingMetric.FromProtobuf(item1)));
			Name = base.Outputs["name"].Select(item => Protobuf.ToString(item));
			StorageAccountId = base.Outputs["storageAccountId"].Select(item => Protobuf.ToString(item));
			TargetResourceId = base.Outputs["targetResourceId"].Select(item => Protobuf.ToString(item));
		} // ctor

		private static Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>> SerialiseArgs(DiagnosticSettingArgs args) {
			var props = new Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>();
			props["eventhubAuthorizationRuleId"] = Protobuf.ToProtobuf(args.EventhubAuthorizationRuleId);
			props["eventhubName"] = Protobuf.ToProtobuf(args.EventhubName);
			props["logs"] = Protobuf.ToProtobuf(args.Logs, item => Protobuf.ToProtobuf(item));
			props["logAnalyticsWorkspaceId"] = Protobuf.ToProtobuf(args.LogAnalyticsWorkspaceId);
			props["metrics"] = Protobuf.ToProtobuf(args.Metrics, item => Protobuf.ToProtobuf(item));
			props["name"] = Protobuf.ToProtobuf(args.Name);
			props["storageAccountId"] = Protobuf.ToProtobuf(args.StorageAccountId);
			props["targetResourceId"] = Protobuf.ToProtobuf(args.TargetResourceId);
			return props;
		} // SerialiseArgs

	} // DiagnosticSetting
} // Pulumi.Azure.Monitoring
