// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Azure.Containerservice {

	public sealed class GetKubernetesClusterAddonProfileHttpApplicationRouting : Pulumi.IProtobuf {
		public bool Enabled { get; set; }
		public string HttpApplicationRoutingZoneName { get; set; }

		public Google.Protobuf.WellKnownTypes.Value ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("enabled", Protobuf.ToProtobuf(Enabled)),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("http_application_routing_zone_name", Protobuf.ToProtobuf(HttpApplicationRoutingZoneName)));
		} // ToProtobuf

		public static GetKubernetesClusterAddonProfileHttpApplicationRouting FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new GetKubernetesClusterAddonProfileHttpApplicationRouting();
				if (obj.Fields.ContainsKey("enabled")) {
					result.Enabled = Protobuf.ToBool(obj.Fields["enabled"]);
				}
				if (obj.Fields.ContainsKey("http_application_routing_zone_name")) {
					result.HttpApplicationRoutingZoneName = Protobuf.ToString(obj.Fields["http_application_routing_zone_name"]);
				}
			return result;
		} // FromProtobuf

	} // GetKubernetesClusterAddonProfileHttpApplicationRouting

	public sealed class GetKubernetesClusterAddonProfileOmsAgent : Pulumi.IProtobuf {
		public bool Enabled { get; set; }
		public string LogAnalyticsWorkspaceId { get; set; }

		public Google.Protobuf.WellKnownTypes.Value ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("enabled", Protobuf.ToProtobuf(Enabled)),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("log_analytics_workspace_id", Protobuf.ToProtobuf(LogAnalyticsWorkspaceId)));
		} // ToProtobuf

		public static GetKubernetesClusterAddonProfileOmsAgent FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new GetKubernetesClusterAddonProfileOmsAgent();
				if (obj.Fields.ContainsKey("enabled")) {
					result.Enabled = Protobuf.ToBool(obj.Fields["enabled"]);
				}
				if (obj.Fields.ContainsKey("log_analytics_workspace_id")) {
					result.LogAnalyticsWorkspaceId = Protobuf.ToString(obj.Fields["log_analytics_workspace_id"]);
				}
			return result;
		} // FromProtobuf

	} // GetKubernetesClusterAddonProfileOmsAgent

	public sealed class GetKubernetesClusterAddonProfile : Pulumi.IProtobuf {
		public GetKubernetesClusterAddonProfileHttpApplicationRouting[] HttpApplicationRouting { get; set; }
		public GetKubernetesClusterAddonProfileOmsAgent[] OmsAgent { get; set; }

		public Google.Protobuf.WellKnownTypes.Value ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("http_application_routing", Protobuf.ToProtobuf(HttpApplicationRouting, item => Protobuf.ToProtobuf(item))),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("oms_agent", Protobuf.ToProtobuf(OmsAgent, item => Protobuf.ToProtobuf(item))));
		} // ToProtobuf

		public static GetKubernetesClusterAddonProfile FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new GetKubernetesClusterAddonProfile();
				if (obj.Fields.ContainsKey("http_application_routing")) {
					result.HttpApplicationRouting = Protobuf.ToList(obj.Fields["http_application_routing"], item => GetKubernetesClusterAddonProfileHttpApplicationRouting.FromProtobuf(item));
				}
				if (obj.Fields.ContainsKey("oms_agent")) {
					result.OmsAgent = Protobuf.ToList(obj.Fields["oms_agent"], item => GetKubernetesClusterAddonProfileOmsAgent.FromProtobuf(item));
				}
			return result;
		} // FromProtobuf

	} // GetKubernetesClusterAddonProfile

	public sealed class GetKubernetesClusterAgentPoolProfile : Pulumi.IProtobuf {
		public int Count { get; set; }
		public string DnsPrefix { get; set; }
		public int MaxPods { get; set; }
		public string Name { get; set; }
		public int OsDiskSizeGb { get; set; }
		public string OsType { get; set; }
		public string VmSize { get; set; }
		public string VnetSubnetId { get; set; }

		public Google.Protobuf.WellKnownTypes.Value ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("count", Protobuf.ToProtobuf(Count)),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("dns_prefix", Protobuf.ToProtobuf(DnsPrefix)),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("max_pods", Protobuf.ToProtobuf(MaxPods)),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("name", Protobuf.ToProtobuf(Name)),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("os_disk_size_gb", Protobuf.ToProtobuf(OsDiskSizeGb)),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("os_type", Protobuf.ToProtobuf(OsType)),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("vm_size", Protobuf.ToProtobuf(VmSize)),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("vnet_subnet_id", Protobuf.ToProtobuf(VnetSubnetId)));
		} // ToProtobuf

		public static GetKubernetesClusterAgentPoolProfile FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new GetKubernetesClusterAgentPoolProfile();
				if (obj.Fields.ContainsKey("count")) {
					result.Count = Protobuf.ToInt(obj.Fields["count"]);
				}
				if (obj.Fields.ContainsKey("dns_prefix")) {
					result.DnsPrefix = Protobuf.ToString(obj.Fields["dns_prefix"]);
				}
				if (obj.Fields.ContainsKey("max_pods")) {
					result.MaxPods = Protobuf.ToInt(obj.Fields["max_pods"]);
				}
				if (obj.Fields.ContainsKey("name")) {
					result.Name = Protobuf.ToString(obj.Fields["name"]);
				}
				if (obj.Fields.ContainsKey("os_disk_size_gb")) {
					result.OsDiskSizeGb = Protobuf.ToInt(obj.Fields["os_disk_size_gb"]);
				}
				if (obj.Fields.ContainsKey("os_type")) {
					result.OsType = Protobuf.ToString(obj.Fields["os_type"]);
				}
				if (obj.Fields.ContainsKey("vm_size")) {
					result.VmSize = Protobuf.ToString(obj.Fields["vm_size"]);
				}
				if (obj.Fields.ContainsKey("vnet_subnet_id")) {
					result.VnetSubnetId = Protobuf.ToString(obj.Fields["vnet_subnet_id"]);
				}
			return result;
		} // FromProtobuf

	} // GetKubernetesClusterAgentPoolProfile

	public sealed class GetKubernetesClusterKubeAdminConfig : Pulumi.IProtobuf {
		public string ClientCertificate { get; set; }
		public string ClientKey { get; set; }
		public string ClusterCaCertificate { get; set; }
		public string Host { get; set; }
		public string Password { get; set; }
		public string Username { get; set; }

		public Google.Protobuf.WellKnownTypes.Value ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("client_certificate", Protobuf.ToProtobuf(ClientCertificate)),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("client_key", Protobuf.ToProtobuf(ClientKey)),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("cluster_ca_certificate", Protobuf.ToProtobuf(ClusterCaCertificate)),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("host", Protobuf.ToProtobuf(Host)),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("password", Protobuf.ToProtobuf(Password)),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("username", Protobuf.ToProtobuf(Username)));
		} // ToProtobuf

		public static GetKubernetesClusterKubeAdminConfig FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new GetKubernetesClusterKubeAdminConfig();
				if (obj.Fields.ContainsKey("client_certificate")) {
					result.ClientCertificate = Protobuf.ToString(obj.Fields["client_certificate"]);
				}
				if (obj.Fields.ContainsKey("client_key")) {
					result.ClientKey = Protobuf.ToString(obj.Fields["client_key"]);
				}
				if (obj.Fields.ContainsKey("cluster_ca_certificate")) {
					result.ClusterCaCertificate = Protobuf.ToString(obj.Fields["cluster_ca_certificate"]);
				}
				if (obj.Fields.ContainsKey("host")) {
					result.Host = Protobuf.ToString(obj.Fields["host"]);
				}
				if (obj.Fields.ContainsKey("password")) {
					result.Password = Protobuf.ToString(obj.Fields["password"]);
				}
				if (obj.Fields.ContainsKey("username")) {
					result.Username = Protobuf.ToString(obj.Fields["username"]);
				}
			return result;
		} // FromProtobuf

	} // GetKubernetesClusterKubeAdminConfig

	public sealed class GetKubernetesClusterKubeConfig : Pulumi.IProtobuf {
		public string ClientCertificate { get; set; }
		public string ClientKey { get; set; }
		public string ClusterCaCertificate { get; set; }
		public string Host { get; set; }
		public string Password { get; set; }
		public string Username { get; set; }

		public Google.Protobuf.WellKnownTypes.Value ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("client_certificate", Protobuf.ToProtobuf(ClientCertificate)),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("client_key", Protobuf.ToProtobuf(ClientKey)),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("cluster_ca_certificate", Protobuf.ToProtobuf(ClusterCaCertificate)),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("host", Protobuf.ToProtobuf(Host)),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("password", Protobuf.ToProtobuf(Password)),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("username", Protobuf.ToProtobuf(Username)));
		} // ToProtobuf

		public static GetKubernetesClusterKubeConfig FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new GetKubernetesClusterKubeConfig();
				if (obj.Fields.ContainsKey("client_certificate")) {
					result.ClientCertificate = Protobuf.ToString(obj.Fields["client_certificate"]);
				}
				if (obj.Fields.ContainsKey("client_key")) {
					result.ClientKey = Protobuf.ToString(obj.Fields["client_key"]);
				}
				if (obj.Fields.ContainsKey("cluster_ca_certificate")) {
					result.ClusterCaCertificate = Protobuf.ToString(obj.Fields["cluster_ca_certificate"]);
				}
				if (obj.Fields.ContainsKey("host")) {
					result.Host = Protobuf.ToString(obj.Fields["host"]);
				}
				if (obj.Fields.ContainsKey("password")) {
					result.Password = Protobuf.ToString(obj.Fields["password"]);
				}
				if (obj.Fields.ContainsKey("username")) {
					result.Username = Protobuf.ToString(obj.Fields["username"]);
				}
			return result;
		} // FromProtobuf

	} // GetKubernetesClusterKubeConfig

	public sealed class GetKubernetesClusterLinuxProfileSshKey : Pulumi.IProtobuf {
		public string KeyData { get; set; }

		public Google.Protobuf.WellKnownTypes.Value ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("key_data", Protobuf.ToProtobuf(KeyData)));
		} // ToProtobuf

		public static GetKubernetesClusterLinuxProfileSshKey FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new GetKubernetesClusterLinuxProfileSshKey();
				if (obj.Fields.ContainsKey("key_data")) {
					result.KeyData = Protobuf.ToString(obj.Fields["key_data"]);
				}
			return result;
		} // FromProtobuf

	} // GetKubernetesClusterLinuxProfileSshKey

	public sealed class GetKubernetesClusterLinuxProfile : Pulumi.IProtobuf {
		public string AdminUsername { get; set; }
		public GetKubernetesClusterLinuxProfileSshKey[] SshKey { get; set; }

		public Google.Protobuf.WellKnownTypes.Value ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("admin_username", Protobuf.ToProtobuf(AdminUsername)),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("ssh_key", Protobuf.ToProtobuf(SshKey, item => Protobuf.ToProtobuf(item))));
		} // ToProtobuf

		public static GetKubernetesClusterLinuxProfile FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new GetKubernetesClusterLinuxProfile();
				if (obj.Fields.ContainsKey("admin_username")) {
					result.AdminUsername = Protobuf.ToString(obj.Fields["admin_username"]);
				}
				if (obj.Fields.ContainsKey("ssh_key")) {
					result.SshKey = Protobuf.ToList(obj.Fields["ssh_key"], item => GetKubernetesClusterLinuxProfileSshKey.FromProtobuf(item));
				}
			return result;
		} // FromProtobuf

	} // GetKubernetesClusterLinuxProfile

	public sealed class GetKubernetesClusterNetworkProfile : Pulumi.IProtobuf {
		public string DnsServiceIp { get; set; }
		public string DockerBridgeCidr { get; set; }
		public string NetworkPlugin { get; set; }
		public string PodCidr { get; set; }
		public string ServiceCidr { get; set; }

		public Google.Protobuf.WellKnownTypes.Value ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("dns_service_ip", Protobuf.ToProtobuf(DnsServiceIp)),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("docker_bridge_cidr", Protobuf.ToProtobuf(DockerBridgeCidr)),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("network_plugin", Protobuf.ToProtobuf(NetworkPlugin)),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("pod_cidr", Protobuf.ToProtobuf(PodCidr)),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("service_cidr", Protobuf.ToProtobuf(ServiceCidr)));
		} // ToProtobuf

		public static GetKubernetesClusterNetworkProfile FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new GetKubernetesClusterNetworkProfile();
				if (obj.Fields.ContainsKey("dns_service_ip")) {
					result.DnsServiceIp = Protobuf.ToString(obj.Fields["dns_service_ip"]);
				}
				if (obj.Fields.ContainsKey("docker_bridge_cidr")) {
					result.DockerBridgeCidr = Protobuf.ToString(obj.Fields["docker_bridge_cidr"]);
				}
				if (obj.Fields.ContainsKey("network_plugin")) {
					result.NetworkPlugin = Protobuf.ToString(obj.Fields["network_plugin"]);
				}
				if (obj.Fields.ContainsKey("pod_cidr")) {
					result.PodCidr = Protobuf.ToString(obj.Fields["pod_cidr"]);
				}
				if (obj.Fields.ContainsKey("service_cidr")) {
					result.ServiceCidr = Protobuf.ToString(obj.Fields["service_cidr"]);
				}
			return result;
		} // FromProtobuf

	} // GetKubernetesClusterNetworkProfile

	public sealed class GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectory : Pulumi.IProtobuf {
		public string ClientAppId { get; set; }
		public string ServerAppId { get; set; }
		public string TenantId { get; set; }

		public Google.Protobuf.WellKnownTypes.Value ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("client_app_id", Protobuf.ToProtobuf(ClientAppId)),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("server_app_id", Protobuf.ToProtobuf(ServerAppId)),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("tenant_id", Protobuf.ToProtobuf(TenantId)));
		} // ToProtobuf

		public static GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectory FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectory();
				if (obj.Fields.ContainsKey("client_app_id")) {
					result.ClientAppId = Protobuf.ToString(obj.Fields["client_app_id"]);
				}
				if (obj.Fields.ContainsKey("server_app_id")) {
					result.ServerAppId = Protobuf.ToString(obj.Fields["server_app_id"]);
				}
				if (obj.Fields.ContainsKey("tenant_id")) {
					result.TenantId = Protobuf.ToString(obj.Fields["tenant_id"]);
				}
			return result;
		} // FromProtobuf

	} // GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectory

	public sealed class GetKubernetesClusterRoleBasedAccessControl : Pulumi.IProtobuf {
		public GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectory[] AzureActiveDirectory { get; set; }
		public bool Enabled { get; set; }

		public Google.Protobuf.WellKnownTypes.Value ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("azure_active_directory", Protobuf.ToProtobuf(AzureActiveDirectory, item => Protobuf.ToProtobuf(item))),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("enabled", Protobuf.ToProtobuf(Enabled)));
		} // ToProtobuf

		public static GetKubernetesClusterRoleBasedAccessControl FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new GetKubernetesClusterRoleBasedAccessControl();
				if (obj.Fields.ContainsKey("azure_active_directory")) {
					result.AzureActiveDirectory = Protobuf.ToList(obj.Fields["azure_active_directory"], item => GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectory.FromProtobuf(item));
				}
				if (obj.Fields.ContainsKey("enabled")) {
					result.Enabled = Protobuf.ToBool(obj.Fields["enabled"]);
				}
			return result;
		} // FromProtobuf

	} // GetKubernetesClusterRoleBasedAccessControl

	public sealed class GetKubernetesClusterServicePrincipal : Pulumi.IProtobuf {
		public string ClientId { get; set; }

		public Google.Protobuf.WellKnownTypes.Value ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("client_id", Protobuf.ToProtobuf(ClientId)));
		} // ToProtobuf

		public static GetKubernetesClusterServicePrincipal FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new GetKubernetesClusterServicePrincipal();
				if (obj.Fields.ContainsKey("client_id")) {
					result.ClientId = Protobuf.ToString(obj.Fields["client_id"]);
				}
			return result;
		} // FromProtobuf

	} // GetKubernetesClusterServicePrincipal

	/// <summary>
	/// A collection of arguments for invoking getKubernetesCluster.
	/// </summary>
	public struct GetKubernetesClusterArgs {
		/// <summary>
		/// The name of the managed Kubernetes Cluster.
		/// </summary>
		public string Name { get; set; }

		/// <summary>
		/// The name of the Resource Group in which the managed Kubernetes Cluster exists.
		/// </summary>
		public string ResourceGroupName { get; set; }

	} // GetKubernetesClusterArgs

	/// <summary>
	/// A collection of values returned by getKubernetesCluster.
	/// </summary>
	public struct GetKubernetesClusterResult {
		/// <summary>
		/// A `addon_profile` block as documented below.
		/// </summary>
		public GetKubernetesClusterAddonProfile[] AddonProfiles { get; set; }

		/// <summary>
		/// One or more `agent_profile_pool` blocks as documented below.
		/// </summary>
		public GetKubernetesClusterAgentPoolProfile[] AgentPoolProfiles { get; set; }

		/// <summary>
		/// The DNS Prefix of the managed Kubernetes cluster.
		/// </summary>
		public string DnsPrefix { get; set; }

		/// <summary>
		/// The FQDN of the Azure Kubernetes Managed Cluster.
		/// </summary>
		public string Fqdn { get; set; }

		/// <summary>
		/// A `kube_admin_config` block as defined below. This is only available when Role Based Access Control with Azure Active Directory is enabled.
		/// </summary>
		public GetKubernetesClusterKubeAdminConfig[] KubeAdminConfigs { get; set; }

		/// <summary>
		/// Raw Kubernetes config for the admin account to be used by [kubectl](https://kubernetes.io/docs/reference/kubectl/overview/) and other compatible tools. This is only available when Role Based Access Control with Azure Active Directory is enabled.
		/// </summary>
		public string KubeAdminConfigRaw { get; set; }

		/// <summary>
		/// A `kube_config` block as defined below.
		/// </summary>
		public GetKubernetesClusterKubeConfig[] KubeConfigs { get; set; }

		/// <summary>
		/// Base64 encoded Kubernetes configuration.
		/// </summary>
		public string KubeConfigRaw { get; set; }

		/// <summary>
		/// The version of Kubernetes used on the managed Kubernetes Cluster.
		/// </summary>
		public string KubernetesVersion { get; set; }

		/// <summary>
		/// A `linux_profile` block as documented below.
		/// </summary>
		public GetKubernetesClusterLinuxProfile[] LinuxProfiles { get; set; }

		/// <summary>
		/// The Azure Region in which the managed Kubernetes Cluster exists.
		/// </summary>
		public string Location { get; set; }

		/// <summary>
		/// A `network_profile` block as documented below.
		/// </summary>
		public GetKubernetesClusterNetworkProfile[] NetworkProfiles { get; set; }

		/// <summary>
		/// Auto-generated Resource Group containing AKS Cluster resources.
		/// </summary>
		public string NodeResourceGroup { get; set; }

		/// <summary>
		/// A `role_based_access_control` block as documented below.
		/// </summary>
		public GetKubernetesClusterRoleBasedAccessControl[] RoleBasedAccessControls { get; set; }

		/// <summary>
		/// A `service_principal` block as documented below.
		/// </summary>
		public GetKubernetesClusterServicePrincipal[] ServicePrincipals { get; set; }

		/// <summary>
		/// A mapping of tags assigned to this resource.
		/// </summary>
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }

		/// <summary>
		/// id is the provider-assigned unique ID for this managed resource.
		/// </summary>
		public string Id { get; set; }

	} // GetKubernetesClusterResult

	public static partial class ContainerserviceModule {
		/// <summary>
		/// Use this data source to access information about an existing Managed Kubernetes Cluster (AKS).
		/// 
		/// > **Note:** All arguments including the client secret will be stored in the raw state as plain-text.
		/// [Read more about sensitive data in state](https://www.terraform.io/docs/state/sensitive-data.html).
		/// </summary>
		public static System.Threading.Tasks.Task<GetKubernetesClusterResult> GetKubernetesCluster(GetKubernetesClusterArgs args, Pulumi.InvokeOptions opts = default(Pulumi.InvokeOptions)) {
			var invokeArgs = new Google.Protobuf.WellKnownTypes.Struct();
			invokeArgs.Fields["name"] = Protobuf.ToProtobuf(args.Name);
			invokeArgs.Fields["resourceGroupName"] = Protobuf.ToProtobuf(args.ResourceGroupName);

			var task = Pulumi.Runtime.InvokeAsync("azure:containerservice/getKubernetesCluster:getKubernetesCluster", invokeArgs, opts);

			return task.ContinueWith(response => {
				var protobuf = response.Result;
				var result = new GetKubernetesClusterResult();
				if (protobuf.Fields.ContainsKey("addonProfiles")) {
					result.AddonProfiles = Protobuf.ToList(protobuf.Fields["addonProfiles"], item => GetKubernetesClusterAddonProfile.FromProtobuf(item));
				}
				if (protobuf.Fields.ContainsKey("agentPoolProfiles")) {
					result.AgentPoolProfiles = Protobuf.ToList(protobuf.Fields["agentPoolProfiles"], item => GetKubernetesClusterAgentPoolProfile.FromProtobuf(item));
				}
				if (protobuf.Fields.ContainsKey("dnsPrefix")) {
					result.DnsPrefix = Protobuf.ToString(protobuf.Fields["dnsPrefix"]);
				}
				if (protobuf.Fields.ContainsKey("fqdn")) {
					result.Fqdn = Protobuf.ToString(protobuf.Fields["fqdn"]);
				}
				if (protobuf.Fields.ContainsKey("kubeAdminConfigs")) {
					result.KubeAdminConfigs = Protobuf.ToList(protobuf.Fields["kubeAdminConfigs"], item => GetKubernetesClusterKubeAdminConfig.FromProtobuf(item));
				}
				if (protobuf.Fields.ContainsKey("kubeAdminConfigRaw")) {
					result.KubeAdminConfigRaw = Protobuf.ToString(protobuf.Fields["kubeAdminConfigRaw"]);
				}
				if (protobuf.Fields.ContainsKey("kubeConfigs")) {
					result.KubeConfigs = Protobuf.ToList(protobuf.Fields["kubeConfigs"], item => GetKubernetesClusterKubeConfig.FromProtobuf(item));
				}
				if (protobuf.Fields.ContainsKey("kubeConfigRaw")) {
					result.KubeConfigRaw = Protobuf.ToString(protobuf.Fields["kubeConfigRaw"]);
				}
				if (protobuf.Fields.ContainsKey("kubernetesVersion")) {
					result.KubernetesVersion = Protobuf.ToString(protobuf.Fields["kubernetesVersion"]);
				}
				if (protobuf.Fields.ContainsKey("linuxProfiles")) {
					result.LinuxProfiles = Protobuf.ToList(protobuf.Fields["linuxProfiles"], item => GetKubernetesClusterLinuxProfile.FromProtobuf(item));
				}
				if (protobuf.Fields.ContainsKey("location")) {
					result.Location = Protobuf.ToString(protobuf.Fields["location"]);
				}
				if (protobuf.Fields.ContainsKey("networkProfiles")) {
					result.NetworkProfiles = Protobuf.ToList(protobuf.Fields["networkProfiles"], item => GetKubernetesClusterNetworkProfile.FromProtobuf(item));
				}
				if (protobuf.Fields.ContainsKey("nodeResourceGroup")) {
					result.NodeResourceGroup = Protobuf.ToString(protobuf.Fields["nodeResourceGroup"]);
				}
				if (protobuf.Fields.ContainsKey("roleBasedAccessControls")) {
					result.RoleBasedAccessControls = Protobuf.ToList(protobuf.Fields["roleBasedAccessControls"], item => GetKubernetesClusterRoleBasedAccessControl.FromProtobuf(item));
				}
				if (protobuf.Fields.ContainsKey("servicePrincipals")) {
					result.ServicePrincipals = Protobuf.ToList(protobuf.Fields["servicePrincipals"], item => GetKubernetesClusterServicePrincipal.FromProtobuf(item));
				}
				if (protobuf.Fields.ContainsKey("tags")) {
					result.Tags = Protobuf.ToMap(protobuf.Fields["tags"]);
				}
				if (protobuf.Fields.ContainsKey("id")) {
					result.Id = Protobuf.ToString(protobuf.Fields["id"]);
				}
				return result;
			});
		} // GetKubernetesCluster

	} // ContainerserviceModule
} // Pulumi.Azure.Containerservice
