// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Azure.Containerservice {

	public sealed class RegistryArgsStorageAccount : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> AccessKey { get; set; }
		public Pulumi.IO<string> Name { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("access_key", Protobuf.ToProtobuf(AccessKey)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("name", Protobuf.ToProtobuf(Name)));
		} // ToProtobuf

	} // RegistryArgsStorageAccount

	public sealed class RegistryStorageAccount : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> AccessKey { get; set; }
		public Pulumi.IO<string> Name { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("access_key", Protobuf.ToProtobuf(AccessKey)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("name", Protobuf.ToProtobuf(Name)));
		} // ToProtobuf

		public static RegistryStorageAccount FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new RegistryStorageAccount();
				if (obj.Fields.ContainsKey("access_key")) {
					result.AccessKey = Protobuf.ToString(obj.Fields["access_key"]);
				}
				if (obj.Fields.ContainsKey("name")) {
					result.Name = Protobuf.ToString(obj.Fields["name"]);
				}
			return result;
		} // FromProtobuf

	} // RegistryStorageAccount

	/// <summary>
	/// The set of arguments for constructing a Registry resource.
	/// </summary>
	public struct RegistryArgs {
		/// <summary>
		/// Specifies whether the admin user is enabled. Defaults to `false`.
		/// </summary>
		public Pulumi.IO<bool> AdminEnabled { get; set; }

		/// <summary>
		/// A list of Azure locations where the container registry should be geo-replicated.
		/// </summary>
		public Pulumi.IO<Pulumi.IO<string>[]> GeoreplicationLocations { get; set; }

		/// <summary>
		/// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Location { get; set; }

		/// <summary>
		/// Specifies the name of the Container Registry. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// The name of the resource group in which to create the Container Registry. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ResourceGroupName { get; set; }

		/// <summary>
		/// The SKU name of the the container registry. Possible values are `Classic` (which was previously `Basic`), `Basic`, `Standard` and `Premium`.
		/// </summary>
		public Pulumi.IO<string> Sku { get; set; }

		public Pulumi.IO<RegistryArgsStorageAccount> StorageAccount { get; set; }

		/// <summary>
		/// The ID of a Storage Account which must be located in the same Azure Region as the Container Registry.
		/// </summary>
		public Pulumi.IO<string> StorageAccountId { get; set; }

		/// <summary>
		/// A mapping of tags to assign to the resource.
		/// </summary>
		public Pulumi.IO<System.Collections.Generic.Dictionary<string, string>> Tags { get; set; }

	} // RegistryArgs

	/// <summary>
	/// Manages an Azure Container Registry.
	/// 
	/// > **Note:** All arguments including the access key will be stored in the raw state as plain-text.
	/// [Read more about sensitive data in state](https://www.terraform.io/docs/state/sensitive-data.html).
	/// </summary>
	public class Registry : Pulumi.CustomResource {
		/// <summary>
		/// Specifies whether the admin user is enabled. Defaults to `false`.
		/// </summary>
		public Pulumi.IO<bool> AdminEnabled { get; set; }

		/// <summary>
		/// The Password associated with the Container Registry Admin account - if the admin account is enabled.
		/// </summary>
		public Pulumi.IO<string> AdminPassword { get; set; }

		/// <summary>
		/// The Username associated with the Container Registry Admin account - if the admin account is enabled.
		/// </summary>
		public Pulumi.IO<string> AdminUsername { get; set; }

		/// <summary>
		/// A list of Azure locations where the container registry should be geo-replicated.
		/// </summary>
		public Pulumi.IO<string[]> GeoreplicationLocations { get; set; }

		/// <summary>
		/// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Location { get; set; }

		/// <summary>
		/// The URL that can be used to log into the container registry.
		/// </summary>
		public Pulumi.IO<string> LoginServer { get; set; }

		/// <summary>
		/// Specifies the name of the Container Registry. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// The name of the resource group in which to create the Container Registry. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ResourceGroupName { get; set; }

		/// <summary>
		/// The SKU name of the the container registry. Possible values are `Classic` (which was previously `Basic`), `Basic`, `Standard` and `Premium`.
		/// </summary>
		public Pulumi.IO<string> Sku { get; set; }

		public Pulumi.IO<RegistryStorageAccount> StorageAccount { get; set; }

		/// <summary>
		/// The ID of a Storage Account which must be located in the same Azure Region as the Container Registry.
		/// </summary>
		public Pulumi.IO<string> StorageAccountId { get; set; }

		/// <summary>
		/// A mapping of tags to assign to the resource.
		/// </summary>
		public Pulumi.IO<System.Collections.Generic.Dictionary<string, string>> Tags { get; set; }

		public Registry(string name, RegistryArgs args, Pulumi.ResourceOptions opts = default(Pulumi.ResourceOptions))
			: base("azure:containerservice/registry:Registry", name, SerialiseArgs(args), opts) {
			AdminEnabled = base.Outputs["adminEnabled"].Select(item => Protobuf.ToBool(item));
			AdminPassword = base.Outputs["adminPassword"].Select(item => Protobuf.ToString(item));
			AdminUsername = base.Outputs["adminUsername"].Select(item => Protobuf.ToString(item));
			GeoreplicationLocations = base.Outputs["georeplicationLocations"].Select(item => Protobuf.ToList(item, item1 => Protobuf.ToString(item1)));
			Location = base.Outputs["location"].Select(item => Protobuf.ToString(item));
			LoginServer = base.Outputs["loginServer"].Select(item => Protobuf.ToString(item));
			Name = base.Outputs["name"].Select(item => Protobuf.ToString(item));
			ResourceGroupName = base.Outputs["resourceGroupName"].Select(item => Protobuf.ToString(item));
			Sku = base.Outputs["sku"].Select(item => Protobuf.ToString(item));
			StorageAccount = base.Outputs["storageAccount"].Select(item => RegistryStorageAccount.FromProtobuf(item));
			StorageAccountId = base.Outputs["storageAccountId"].Select(item => Protobuf.ToString(item));
			Tags = base.Outputs["tags"].Select(item => Protobuf.ToMap(item));
		} // ctor

		private static Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>> SerialiseArgs(RegistryArgs args) {
			var props = new Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>();
			props["adminEnabled"] = Protobuf.ToProtobuf(args.AdminEnabled);
			props["georeplicationLocations"] = Protobuf.ToProtobuf(args.GeoreplicationLocations, item => Protobuf.ToProtobuf(item));
			props["location"] = Protobuf.ToProtobuf(args.Location);
			props["name"] = Protobuf.ToProtobuf(args.Name);
			props["resourceGroupName"] = Protobuf.ToProtobuf(args.ResourceGroupName);
			props["sku"] = Protobuf.ToProtobuf(args.Sku);
			props["storageAccount"] = Protobuf.ToProtobuf(args.StorageAccount);
			props["storageAccountId"] = Protobuf.ToProtobuf(args.StorageAccountId);
			props["tags"] = Protobuf.ToProtobuf(args.Tags);
			props["adminPassword"] = null; //out
			props["adminUsername"] = null; //out
			props["loginServer"] = null; //out
			return props;
		} // SerialiseArgs

	} // Registry
} // Pulumi.Azure.Containerservice
