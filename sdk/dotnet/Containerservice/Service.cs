// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Azure.Containerservice {

	public sealed class ServiceArgsAgentPoolProfile : Pulumi.IIOProtobuf {
		public Pulumi.IO<int> Count { get; set; }
		public Pulumi.IO<string> DnsPrefix { get; set; }
		public Pulumi.IO<string> Fqdn { get; set; }
		public Pulumi.IO<string> Name { get; set; }
		public Pulumi.IO<string> VmSize { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("count", Protobuf.ToProtobuf(Count)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("dns_prefix", Protobuf.ToProtobuf(DnsPrefix)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("fqdn", Protobuf.ToProtobuf(Fqdn)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("name", Protobuf.ToProtobuf(Name)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("vm_size", Protobuf.ToProtobuf(VmSize)));
		} // ToProtobuf

	} // ServiceArgsAgentPoolProfile

	public sealed class ServiceArgsDiagnosticsProfile : Pulumi.IIOProtobuf {
		public Pulumi.IO<bool> Enabled { get; set; }
		public Pulumi.IO<string> StorageUri { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("enabled", Protobuf.ToProtobuf(Enabled)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("storage_uri", Protobuf.ToProtobuf(StorageUri)));
		} // ToProtobuf

	} // ServiceArgsDiagnosticsProfile

	public sealed class ServiceArgsLinuxProfileArgsSshKey : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> KeyData { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("key_data", Protobuf.ToProtobuf(KeyData)));
		} // ToProtobuf

	} // ServiceArgsLinuxProfileArgsSshKey

	public sealed class ServiceArgsLinuxProfile : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> AdminUsername { get; set; }
		public Pulumi.IO<ServiceArgsLinuxProfileArgsSshKey> SshKey { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("admin_username", Protobuf.ToProtobuf(AdminUsername)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("ssh_key", Protobuf.ToProtobuf(SshKey)));
		} // ToProtobuf

	} // ServiceArgsLinuxProfile

	public sealed class ServiceArgsMasterProfile : Pulumi.IIOProtobuf {
		public Pulumi.IO<int> Count { get; set; }
		public Pulumi.IO<string> DnsPrefix { get; set; }
		public Pulumi.IO<string> Fqdn { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("count", Protobuf.ToProtobuf(Count)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("dns_prefix", Protobuf.ToProtobuf(DnsPrefix)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("fqdn", Protobuf.ToProtobuf(Fqdn)));
		} // ToProtobuf

	} // ServiceArgsMasterProfile

	public sealed class ServiceArgsServicePrincipal : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> ClientId { get; set; }
		public Pulumi.IO<string> ClientSecret { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("client_id", Protobuf.ToProtobuf(ClientId)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("client_secret", Protobuf.ToProtobuf(ClientSecret)));
		} // ToProtobuf

	} // ServiceArgsServicePrincipal

	public sealed class ServiceAgentPoolProfile : Pulumi.IIOProtobuf {
		public Pulumi.IO<int> Count { get; set; }
		public Pulumi.IO<string> DnsPrefix { get; set; }
		public Pulumi.IO<string> Fqdn { get; set; }
		public Pulumi.IO<string> Name { get; set; }
		public Pulumi.IO<string> VmSize { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("count", Protobuf.ToProtobuf(Count)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("dns_prefix", Protobuf.ToProtobuf(DnsPrefix)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("fqdn", Protobuf.ToProtobuf(Fqdn)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("name", Protobuf.ToProtobuf(Name)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("vm_size", Protobuf.ToProtobuf(VmSize)));
		} // ToProtobuf

		public static ServiceAgentPoolProfile FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new ServiceAgentPoolProfile();
				if (obj.Fields.ContainsKey("count")) {
					result.Count = Protobuf.ToInt(obj.Fields["count"]);
				}
				if (obj.Fields.ContainsKey("dns_prefix")) {
					result.DnsPrefix = Protobuf.ToString(obj.Fields["dns_prefix"]);
				}
				if (obj.Fields.ContainsKey("fqdn")) {
					result.Fqdn = Protobuf.ToString(obj.Fields["fqdn"]);
				}
				if (obj.Fields.ContainsKey("name")) {
					result.Name = Protobuf.ToString(obj.Fields["name"]);
				}
				if (obj.Fields.ContainsKey("vm_size")) {
					result.VmSize = Protobuf.ToString(obj.Fields["vm_size"]);
				}
			return result;
		} // FromProtobuf

	} // ServiceAgentPoolProfile

	public sealed class ServiceDiagnosticsProfile : Pulumi.IIOProtobuf {
		public Pulumi.IO<bool> Enabled { get; set; }
		public Pulumi.IO<string> StorageUri { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("enabled", Protobuf.ToProtobuf(Enabled)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("storage_uri", Protobuf.ToProtobuf(StorageUri)));
		} // ToProtobuf

		public static ServiceDiagnosticsProfile FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new ServiceDiagnosticsProfile();
				if (obj.Fields.ContainsKey("enabled")) {
					result.Enabled = Protobuf.ToBool(obj.Fields["enabled"]);
				}
				if (obj.Fields.ContainsKey("storage_uri")) {
					result.StorageUri = Protobuf.ToString(obj.Fields["storage_uri"]);
				}
			return result;
		} // FromProtobuf

	} // ServiceDiagnosticsProfile

	public sealed class ServiceLinuxProfileSshKey : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> KeyData { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("key_data", Protobuf.ToProtobuf(KeyData)));
		} // ToProtobuf

		public static ServiceLinuxProfileSshKey FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new ServiceLinuxProfileSshKey();
				if (obj.Fields.ContainsKey("key_data")) {
					result.KeyData = Protobuf.ToString(obj.Fields["key_data"]);
				}
			return result;
		} // FromProtobuf

	} // ServiceLinuxProfileSshKey

	public sealed class ServiceLinuxProfile : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> AdminUsername { get; set; }
		public Pulumi.IO<ServiceLinuxProfileSshKey> SshKey { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("admin_username", Protobuf.ToProtobuf(AdminUsername)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("ssh_key", Protobuf.ToProtobuf(SshKey)));
		} // ToProtobuf

		public static ServiceLinuxProfile FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new ServiceLinuxProfile();
				if (obj.Fields.ContainsKey("admin_username")) {
					result.AdminUsername = Protobuf.ToString(obj.Fields["admin_username"]);
				}
				if (obj.Fields.ContainsKey("ssh_key")) {
					result.SshKey = ServiceLinuxProfileSshKey.FromProtobuf(obj.Fields["ssh_key"]);
				}
			return result;
		} // FromProtobuf

	} // ServiceLinuxProfile

	public sealed class ServiceMasterProfile : Pulumi.IIOProtobuf {
		public Pulumi.IO<int> Count { get; set; }
		public Pulumi.IO<string> DnsPrefix { get; set; }
		public Pulumi.IO<string> Fqdn { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("count", Protobuf.ToProtobuf(Count)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("dns_prefix", Protobuf.ToProtobuf(DnsPrefix)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("fqdn", Protobuf.ToProtobuf(Fqdn)));
		} // ToProtobuf

		public static ServiceMasterProfile FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new ServiceMasterProfile();
				if (obj.Fields.ContainsKey("count")) {
					result.Count = Protobuf.ToInt(obj.Fields["count"]);
				}
				if (obj.Fields.ContainsKey("dns_prefix")) {
					result.DnsPrefix = Protobuf.ToString(obj.Fields["dns_prefix"]);
				}
				if (obj.Fields.ContainsKey("fqdn")) {
					result.Fqdn = Protobuf.ToString(obj.Fields["fqdn"]);
				}
			return result;
		} // FromProtobuf

	} // ServiceMasterProfile

	public sealed class ServiceServicePrincipal : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> ClientId { get; set; }
		public Pulumi.IO<string> ClientSecret { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("client_id", Protobuf.ToProtobuf(ClientId)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("client_secret", Protobuf.ToProtobuf(ClientSecret)));
		} // ToProtobuf

		public static ServiceServicePrincipal FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new ServiceServicePrincipal();
				if (obj.Fields.ContainsKey("client_id")) {
					result.ClientId = Protobuf.ToString(obj.Fields["client_id"]);
				}
				if (obj.Fields.ContainsKey("client_secret")) {
					result.ClientSecret = Protobuf.ToString(obj.Fields["client_secret"]);
				}
			return result;
		} // FromProtobuf

	} // ServiceServicePrincipal

	/// <summary>
	/// The set of arguments for constructing a Service resource.
	/// </summary>
	public struct ServiceArgs {
		/// <summary>
		/// A Agent Pool Profile's block as documented below.
		/// </summary>
		public Pulumi.IO<ServiceArgsAgentPoolProfile> AgentPoolProfile { get; set; }

		/// <summary>
		/// A VM Diagnostics Profile block as documented below.
		/// </summary>
		public Pulumi.IO<ServiceArgsDiagnosticsProfile> DiagnosticsProfile { get; set; }

		/// <summary>
		/// A Linux Profile block as documented below.
		/// </summary>
		public Pulumi.IO<ServiceArgsLinuxProfile> LinuxProfile { get; set; }

		/// <summary>
		/// The location where the Container Service instance should be created. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Location { get; set; }

		/// <summary>
		/// A Master Profile block as documented below.
		/// </summary>
		public Pulumi.IO<ServiceArgsMasterProfile> MasterProfile { get; set; }

		/// <summary>
		/// Unique name of the agent pool profile in the context of the subscription and resource group.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// Specifies the Container Orchestration Platform to use. Currently can be either `DCOS`, `Kubernetes` or `Swarm`. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> OrchestrationPlatform { get; set; }

		/// <summary>
		/// Specifies the resource group where the resource exists. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ResourceGroupName { get; set; }

		/// <summary>
		/// A Service Principal block as documented below.
		/// </summary>
		public Pulumi.IO<ServiceArgsServicePrincipal> ServicePrincipal { get; set; }

		/// <summary>
		/// A mapping of tags to assign to the resource.
		/// </summary>
		public Pulumi.IO<System.Collections.Generic.Dictionary<string, string>> Tags { get; set; }

	} // ServiceArgs

	/// <summary>
	/// Manages an Azure Container Service Instance
	/// 
	/// > **NOTE:** All arguments including the client secret will be stored in the raw state as plain-text.
	/// [Read more about sensitive data in state](https://www.terraform.io/docs/state/sensitive-data.html).
	/// 
	/// > **DEPRECATED:** [Azure Container Service (ACS) has been deprecated by Azure in favour of Azure (Managed) Kubernetes Service (AKS)](https://azure.microsoft.com/en-us/updates/azure-container-service-will-retire-on-january-31-2020/). Support for ACS will be removed in the next major version of the AzureRM Provider (2.0) - and we **strongly recommend** you consider using Azure Kubernetes Service (AKS) for new deployments.
	/// 
	/// ## Example Usage (DCOS)
	/// 
	/// ```hcl
	/// resource "azurerm_resource_group" "test" {
	///   name     = "acctestRG1"
	///   location = "West US"
	/// }
	/// 
	/// resource "azurerm_container_service" "test" {
	///   name                   = "acctestcontservice1"
	///   location               = "${azurerm_resource_group.test.location}"
	///   resource_group_name    = "${azurerm_resource_group.test.name}"
	///   orchestration_platform = "DCOS"
	/// 
	///   master_profile {
	///     count      = 1
	///     dns_prefix = "acctestmaster1"
	///   }
	/// 
	///   linux_profile {
	///     admin_username = "acctestuser1"
	/// 
	///     ssh_key {
	///       key_data = "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCqaZoyiz1qbdOQ8xEf6uEu1cCwYowo5FHtsBhqLoDnnp7KUTEBN+L2NxRIfQ781rxV6Iq5jSav6b2Q8z5KiseOlvKA/RF2wqU0UPYqQviQhLmW6THTpmrv/YkUCuzxDpsH7DUDhZcwySLKVVe0Qm3+5N2Ta6UYH3lsDf9R9wTP2K/+vAnflKebuypNlmocIvakFWoZda18FOmsOoIVXQ8HWFNCuw9ZCunMSN62QGamCe3dL5cXlkgHYv7ekJE15IA9aOJcM7e90oeTqo+7HTcWfdu0qQqPWY5ujyMw/llas8tsXY85LFqRnr3gJ02bAscjc477+X+j/gkpFoN1QEmt terraform@demo.tld"
	///     }
	///   }
	/// 
	///   agent_pool_profile {
	///     name       = "default"
	///     count      = 1
	///     dns_prefix = "acctestagent1"
	///     vm_size    = "Standard_F2"
	///   }
	/// 
	///   diagnostics_profile {
	///     enabled = false
	///   }
	/// 
	///   tags {
	///     Environment = "Production"
	///   }
	/// }
	/// ```
	/// </summary>
	public class Service : Pulumi.CustomResource {
		/// <summary>
		/// A Agent Pool Profile's block as documented below.
		/// </summary>
		public Pulumi.IO<ServiceAgentPoolProfile> AgentPoolProfile { get; set; }

		/// <summary>
		/// A VM Diagnostics Profile block as documented below.
		/// </summary>
		public Pulumi.IO<ServiceDiagnosticsProfile> DiagnosticsProfile { get; set; }

		/// <summary>
		/// A Linux Profile block as documented below.
		/// </summary>
		public Pulumi.IO<ServiceLinuxProfile> LinuxProfile { get; set; }

		/// <summary>
		/// The location where the Container Service instance should be created. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Location { get; set; }

		/// <summary>
		/// A Master Profile block as documented below.
		/// </summary>
		public Pulumi.IO<ServiceMasterProfile> MasterProfile { get; set; }

		/// <summary>
		/// Unique name of the agent pool profile in the context of the subscription and resource group.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// Specifies the Container Orchestration Platform to use. Currently can be either `DCOS`, `Kubernetes` or `Swarm`. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> OrchestrationPlatform { get; set; }

		/// <summary>
		/// Specifies the resource group where the resource exists. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ResourceGroupName { get; set; }

		/// <summary>
		/// A Service Principal block as documented below.
		/// </summary>
		public Pulumi.IO<ServiceServicePrincipal> ServicePrincipal { get; set; }

		/// <summary>
		/// A mapping of tags to assign to the resource.
		/// </summary>
		public Pulumi.IO<System.Collections.Generic.Dictionary<string, string>> Tags { get; set; }

		public Service(string name, ServiceArgs args, Pulumi.ResourceOptions opts = default(Pulumi.ResourceOptions))
			: base("azure:containerservice/service:Service", name, SerialiseArgs(args), opts) {
			AgentPoolProfile = base.Outputs["agentPoolProfile"].Select(item => ServiceAgentPoolProfile.FromProtobuf(item));
			DiagnosticsProfile = base.Outputs["diagnosticsProfile"].Select(item => ServiceDiagnosticsProfile.FromProtobuf(item));
			LinuxProfile = base.Outputs["linuxProfile"].Select(item => ServiceLinuxProfile.FromProtobuf(item));
			Location = base.Outputs["location"].Select(item => Protobuf.ToString(item));
			MasterProfile = base.Outputs["masterProfile"].Select(item => ServiceMasterProfile.FromProtobuf(item));
			Name = base.Outputs["name"].Select(item => Protobuf.ToString(item));
			OrchestrationPlatform = base.Outputs["orchestrationPlatform"].Select(item => Protobuf.ToString(item));
			ResourceGroupName = base.Outputs["resourceGroupName"].Select(item => Protobuf.ToString(item));
			ServicePrincipal = base.Outputs["servicePrincipal"].Select(item => ServiceServicePrincipal.FromProtobuf(item));
			Tags = base.Outputs["tags"].Select(item => Protobuf.ToMap(item));
		} // ctor

		private static Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>> SerialiseArgs(ServiceArgs args) {
			var props = new Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>();
			props["agentPoolProfile"] = Protobuf.ToProtobuf(args.AgentPoolProfile);
			props["diagnosticsProfile"] = Protobuf.ToProtobuf(args.DiagnosticsProfile);
			props["linuxProfile"] = Protobuf.ToProtobuf(args.LinuxProfile);
			props["location"] = Protobuf.ToProtobuf(args.Location);
			props["masterProfile"] = Protobuf.ToProtobuf(args.MasterProfile);
			props["name"] = Protobuf.ToProtobuf(args.Name);
			props["orchestrationPlatform"] = Protobuf.ToProtobuf(args.OrchestrationPlatform);
			props["resourceGroupName"] = Protobuf.ToProtobuf(args.ResourceGroupName);
			props["servicePrincipal"] = Protobuf.ToProtobuf(args.ServicePrincipal);
			props["tags"] = Protobuf.ToProtobuf(args.Tags);
			return props;
		} // SerialiseArgs

	} // Service
} // Pulumi.Azure.Containerservice
