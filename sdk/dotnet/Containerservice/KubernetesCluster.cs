// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Azure.Containerservice {

	public sealed class KubernetesClusterArgsAddonProfileArgsAciConnectorLinux : Pulumi.IIOProtobuf {
		public Pulumi.IO<bool> Enabled { get; set; }
		public Pulumi.IO<string> SubnetName { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("enabled", Protobuf.ToProtobuf(Enabled)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("subnet_name", Protobuf.ToProtobuf(SubnetName)));
		} // ToProtobuf

	} // KubernetesClusterArgsAddonProfileArgsAciConnectorLinux

	public sealed class KubernetesClusterArgsAddonProfileArgsHttpApplicationRouting : Pulumi.IIOProtobuf {
		public Pulumi.IO<bool> Enabled { get; set; }
		public Pulumi.IO<string> HttpApplicationRoutingZoneName { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("enabled", Protobuf.ToProtobuf(Enabled)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("http_application_routing_zone_name", Protobuf.ToProtobuf(HttpApplicationRoutingZoneName)));
		} // ToProtobuf

	} // KubernetesClusterArgsAddonProfileArgsHttpApplicationRouting

	public sealed class KubernetesClusterArgsAddonProfileArgsOmsAgent : Pulumi.IIOProtobuf {
		public Pulumi.IO<bool> Enabled { get; set; }
		public Pulumi.IO<string> LogAnalyticsWorkspaceId { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("enabled", Protobuf.ToProtobuf(Enabled)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("log_analytics_workspace_id", Protobuf.ToProtobuf(LogAnalyticsWorkspaceId)));
		} // ToProtobuf

	} // KubernetesClusterArgsAddonProfileArgsOmsAgent

	public sealed class KubernetesClusterArgsAddonProfile : Pulumi.IIOProtobuf {
		public Pulumi.IO<KubernetesClusterArgsAddonProfileArgsAciConnectorLinux> AciConnectorLinux { get; set; }
		public Pulumi.IO<KubernetesClusterArgsAddonProfileArgsHttpApplicationRouting> HttpApplicationRouting { get; set; }
		public Pulumi.IO<KubernetesClusterArgsAddonProfileArgsOmsAgent> OmsAgent { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("aci_connector_linux", Protobuf.ToProtobuf(AciConnectorLinux)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("http_application_routing", Protobuf.ToProtobuf(HttpApplicationRouting)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("oms_agent", Protobuf.ToProtobuf(OmsAgent)));
		} // ToProtobuf

	} // KubernetesClusterArgsAddonProfile

	public sealed class KubernetesClusterArgsAgentPoolProfile : Pulumi.IIOProtobuf {
		public Pulumi.IO<int> Count { get; set; }
		public Pulumi.IO<string> DnsPrefix { get; set; }
		public Pulumi.IO<string> Fqdn { get; set; }
		public Pulumi.IO<int> MaxPods { get; set; }
		public Pulumi.IO<string> Name { get; set; }
		public Pulumi.IO<int> OsDiskSizeGb { get; set; }
		public Pulumi.IO<string> OsType { get; set; }
		public Pulumi.IO<string> VmSize { get; set; }
		public Pulumi.IO<string> VnetSubnetId { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("count", Protobuf.ToProtobuf(Count)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("dns_prefix", Protobuf.ToProtobuf(DnsPrefix)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("fqdn", Protobuf.ToProtobuf(Fqdn)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("max_pods", Protobuf.ToProtobuf(MaxPods)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("name", Protobuf.ToProtobuf(Name)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("os_disk_size_gb", Protobuf.ToProtobuf(OsDiskSizeGb)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("os_type", Protobuf.ToProtobuf(OsType)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("vm_size", Protobuf.ToProtobuf(VmSize)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("vnet_subnet_id", Protobuf.ToProtobuf(VnetSubnetId)));
		} // ToProtobuf

	} // KubernetesClusterArgsAgentPoolProfile

	public sealed class KubernetesClusterArgsLinuxProfileArgsSshKey : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> KeyData { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("key_data", Protobuf.ToProtobuf(KeyData)));
		} // ToProtobuf

	} // KubernetesClusterArgsLinuxProfileArgsSshKey

	public sealed class KubernetesClusterArgsLinuxProfile : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> AdminUsername { get; set; }
		public Pulumi.IO<Pulumi.IO<KubernetesClusterArgsLinuxProfileArgsSshKey>[]> SshKey { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("admin_username", Protobuf.ToProtobuf(AdminUsername)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("ssh_key", Protobuf.ToProtobuf(SshKey, item => Protobuf.ToProtobuf(item))));
		} // ToProtobuf

	} // KubernetesClusterArgsLinuxProfile

	public sealed class KubernetesClusterArgsNetworkProfile : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> DnsServiceIp { get; set; }
		public Pulumi.IO<string> DockerBridgeCidr { get; set; }
		public Pulumi.IO<string> NetworkPlugin { get; set; }
		public Pulumi.IO<string> PodCidr { get; set; }
		public Pulumi.IO<string> ServiceCidr { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("dns_service_ip", Protobuf.ToProtobuf(DnsServiceIp)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("docker_bridge_cidr", Protobuf.ToProtobuf(DockerBridgeCidr)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("network_plugin", Protobuf.ToProtobuf(NetworkPlugin)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("pod_cidr", Protobuf.ToProtobuf(PodCidr)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("service_cidr", Protobuf.ToProtobuf(ServiceCidr)));
		} // ToProtobuf

	} // KubernetesClusterArgsNetworkProfile

	public sealed class KubernetesClusterArgsRoleBasedAccessControlArgsAzureActiveDirectory : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> ClientAppId { get; set; }
		public Pulumi.IO<string> ServerAppId { get; set; }
		public Pulumi.IO<string> ServerAppSecret { get; set; }
		public Pulumi.IO<string> TenantId { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("client_app_id", Protobuf.ToProtobuf(ClientAppId)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("server_app_id", Protobuf.ToProtobuf(ServerAppId)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("server_app_secret", Protobuf.ToProtobuf(ServerAppSecret)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("tenant_id", Protobuf.ToProtobuf(TenantId)));
		} // ToProtobuf

	} // KubernetesClusterArgsRoleBasedAccessControlArgsAzureActiveDirectory

	public sealed class KubernetesClusterArgsRoleBasedAccessControl : Pulumi.IIOProtobuf {
		public Pulumi.IO<KubernetesClusterArgsRoleBasedAccessControlArgsAzureActiveDirectory> AzureActiveDirectory { get; set; }
		public Pulumi.IO<bool> Enabled { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("azure_active_directory", Protobuf.ToProtobuf(AzureActiveDirectory)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("enabled", Protobuf.ToProtobuf(Enabled)));
		} // ToProtobuf

	} // KubernetesClusterArgsRoleBasedAccessControl

	public sealed class KubernetesClusterArgsServicePrincipal : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> ClientId { get; set; }
		public Pulumi.IO<string> ClientSecret { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("client_id", Protobuf.ToProtobuf(ClientId)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("client_secret", Protobuf.ToProtobuf(ClientSecret)));
		} // ToProtobuf

	} // KubernetesClusterArgsServicePrincipal

	public sealed class KubernetesClusterAddonProfileAciConnectorLinux : Pulumi.IIOProtobuf {
		public Pulumi.IO<bool> Enabled { get; set; }
		public Pulumi.IO<string> SubnetName { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("enabled", Protobuf.ToProtobuf(Enabled)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("subnet_name", Protobuf.ToProtobuf(SubnetName)));
		} // ToProtobuf

		public static KubernetesClusterAddonProfileAciConnectorLinux FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new KubernetesClusterAddonProfileAciConnectorLinux();
				if (obj.Fields.ContainsKey("enabled")) {
					result.Enabled = Protobuf.ToBool(obj.Fields["enabled"]);
				}
				if (obj.Fields.ContainsKey("subnet_name")) {
					result.SubnetName = Protobuf.ToString(obj.Fields["subnet_name"]);
				}
			return result;
		} // FromProtobuf

	} // KubernetesClusterAddonProfileAciConnectorLinux

	public sealed class KubernetesClusterAddonProfileHttpApplicationRouting : Pulumi.IIOProtobuf {
		public Pulumi.IO<bool> Enabled { get; set; }
		public Pulumi.IO<string> HttpApplicationRoutingZoneName { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("enabled", Protobuf.ToProtobuf(Enabled)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("http_application_routing_zone_name", Protobuf.ToProtobuf(HttpApplicationRoutingZoneName)));
		} // ToProtobuf

		public static KubernetesClusterAddonProfileHttpApplicationRouting FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new KubernetesClusterAddonProfileHttpApplicationRouting();
				if (obj.Fields.ContainsKey("enabled")) {
					result.Enabled = Protobuf.ToBool(obj.Fields["enabled"]);
				}
				if (obj.Fields.ContainsKey("http_application_routing_zone_name")) {
					result.HttpApplicationRoutingZoneName = Protobuf.ToString(obj.Fields["http_application_routing_zone_name"]);
				}
			return result;
		} // FromProtobuf

	} // KubernetesClusterAddonProfileHttpApplicationRouting

	public sealed class KubernetesClusterAddonProfileOmsAgent : Pulumi.IIOProtobuf {
		public Pulumi.IO<bool> Enabled { get; set; }
		public Pulumi.IO<string> LogAnalyticsWorkspaceId { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("enabled", Protobuf.ToProtobuf(Enabled)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("log_analytics_workspace_id", Protobuf.ToProtobuf(LogAnalyticsWorkspaceId)));
		} // ToProtobuf

		public static KubernetesClusterAddonProfileOmsAgent FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new KubernetesClusterAddonProfileOmsAgent();
				if (obj.Fields.ContainsKey("enabled")) {
					result.Enabled = Protobuf.ToBool(obj.Fields["enabled"]);
				}
				if (obj.Fields.ContainsKey("log_analytics_workspace_id")) {
					result.LogAnalyticsWorkspaceId = Protobuf.ToString(obj.Fields["log_analytics_workspace_id"]);
				}
			return result;
		} // FromProtobuf

	} // KubernetesClusterAddonProfileOmsAgent

	public sealed class KubernetesClusterAddonProfile : Pulumi.IIOProtobuf {
		public Pulumi.IO<KubernetesClusterAddonProfileAciConnectorLinux> AciConnectorLinux { get; set; }
		public Pulumi.IO<KubernetesClusterAddonProfileHttpApplicationRouting> HttpApplicationRouting { get; set; }
		public Pulumi.IO<KubernetesClusterAddonProfileOmsAgent> OmsAgent { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("aci_connector_linux", Protobuf.ToProtobuf(AciConnectorLinux)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("http_application_routing", Protobuf.ToProtobuf(HttpApplicationRouting)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("oms_agent", Protobuf.ToProtobuf(OmsAgent)));
		} // ToProtobuf

		public static KubernetesClusterAddonProfile FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new KubernetesClusterAddonProfile();
				if (obj.Fields.ContainsKey("aci_connector_linux")) {
					result.AciConnectorLinux = KubernetesClusterAddonProfileAciConnectorLinux.FromProtobuf(obj.Fields["aci_connector_linux"]);
				}
				if (obj.Fields.ContainsKey("http_application_routing")) {
					result.HttpApplicationRouting = KubernetesClusterAddonProfileHttpApplicationRouting.FromProtobuf(obj.Fields["http_application_routing"]);
				}
				if (obj.Fields.ContainsKey("oms_agent")) {
					result.OmsAgent = KubernetesClusterAddonProfileOmsAgent.FromProtobuf(obj.Fields["oms_agent"]);
				}
			return result;
		} // FromProtobuf

	} // KubernetesClusterAddonProfile

	public sealed class KubernetesClusterAgentPoolProfile : Pulumi.IIOProtobuf {
		public Pulumi.IO<int> Count { get; set; }
		public Pulumi.IO<string> DnsPrefix { get; set; }
		public Pulumi.IO<string> Fqdn { get; set; }
		public Pulumi.IO<int> MaxPods { get; set; }
		public Pulumi.IO<string> Name { get; set; }
		public Pulumi.IO<int> OsDiskSizeGb { get; set; }
		public Pulumi.IO<string> OsType { get; set; }
		public Pulumi.IO<string> VmSize { get; set; }
		public Pulumi.IO<string> VnetSubnetId { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("count", Protobuf.ToProtobuf(Count)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("dns_prefix", Protobuf.ToProtobuf(DnsPrefix)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("fqdn", Protobuf.ToProtobuf(Fqdn)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("max_pods", Protobuf.ToProtobuf(MaxPods)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("name", Protobuf.ToProtobuf(Name)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("os_disk_size_gb", Protobuf.ToProtobuf(OsDiskSizeGb)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("os_type", Protobuf.ToProtobuf(OsType)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("vm_size", Protobuf.ToProtobuf(VmSize)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("vnet_subnet_id", Protobuf.ToProtobuf(VnetSubnetId)));
		} // ToProtobuf

		public static KubernetesClusterAgentPoolProfile FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new KubernetesClusterAgentPoolProfile();
				if (obj.Fields.ContainsKey("count")) {
					result.Count = Protobuf.ToInt(obj.Fields["count"]);
				}
				if (obj.Fields.ContainsKey("dns_prefix")) {
					result.DnsPrefix = Protobuf.ToString(obj.Fields["dns_prefix"]);
				}
				if (obj.Fields.ContainsKey("fqdn")) {
					result.Fqdn = Protobuf.ToString(obj.Fields["fqdn"]);
				}
				if (obj.Fields.ContainsKey("max_pods")) {
					result.MaxPods = Protobuf.ToInt(obj.Fields["max_pods"]);
				}
				if (obj.Fields.ContainsKey("name")) {
					result.Name = Protobuf.ToString(obj.Fields["name"]);
				}
				if (obj.Fields.ContainsKey("os_disk_size_gb")) {
					result.OsDiskSizeGb = Protobuf.ToInt(obj.Fields["os_disk_size_gb"]);
				}
				if (obj.Fields.ContainsKey("os_type")) {
					result.OsType = Protobuf.ToString(obj.Fields["os_type"]);
				}
				if (obj.Fields.ContainsKey("vm_size")) {
					result.VmSize = Protobuf.ToString(obj.Fields["vm_size"]);
				}
				if (obj.Fields.ContainsKey("vnet_subnet_id")) {
					result.VnetSubnetId = Protobuf.ToString(obj.Fields["vnet_subnet_id"]);
				}
			return result;
		} // FromProtobuf

	} // KubernetesClusterAgentPoolProfile

	public sealed class KubernetesClusterKubeAdminConfig : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> ClientCertificate { get; set; }
		public Pulumi.IO<string> ClientKey { get; set; }
		public Pulumi.IO<string> ClusterCaCertificate { get; set; }
		public Pulumi.IO<string> Host { get; set; }
		public Pulumi.IO<string> Password { get; set; }
		public Pulumi.IO<string> Username { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("client_certificate", Protobuf.ToProtobuf(ClientCertificate)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("client_key", Protobuf.ToProtobuf(ClientKey)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("cluster_ca_certificate", Protobuf.ToProtobuf(ClusterCaCertificate)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("host", Protobuf.ToProtobuf(Host)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("password", Protobuf.ToProtobuf(Password)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("username", Protobuf.ToProtobuf(Username)));
		} // ToProtobuf

		public static KubernetesClusterKubeAdminConfig FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new KubernetesClusterKubeAdminConfig();
				if (obj.Fields.ContainsKey("client_certificate")) {
					result.ClientCertificate = Protobuf.ToString(obj.Fields["client_certificate"]);
				}
				if (obj.Fields.ContainsKey("client_key")) {
					result.ClientKey = Protobuf.ToString(obj.Fields["client_key"]);
				}
				if (obj.Fields.ContainsKey("cluster_ca_certificate")) {
					result.ClusterCaCertificate = Protobuf.ToString(obj.Fields["cluster_ca_certificate"]);
				}
				if (obj.Fields.ContainsKey("host")) {
					result.Host = Protobuf.ToString(obj.Fields["host"]);
				}
				if (obj.Fields.ContainsKey("password")) {
					result.Password = Protobuf.ToString(obj.Fields["password"]);
				}
				if (obj.Fields.ContainsKey("username")) {
					result.Username = Protobuf.ToString(obj.Fields["username"]);
				}
			return result;
		} // FromProtobuf

	} // KubernetesClusterKubeAdminConfig

	public sealed class KubernetesClusterKubeConfig : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> ClientCertificate { get; set; }
		public Pulumi.IO<string> ClientKey { get; set; }
		public Pulumi.IO<string> ClusterCaCertificate { get; set; }
		public Pulumi.IO<string> Host { get; set; }
		public Pulumi.IO<string> Password { get; set; }
		public Pulumi.IO<string> Username { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("client_certificate", Protobuf.ToProtobuf(ClientCertificate)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("client_key", Protobuf.ToProtobuf(ClientKey)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("cluster_ca_certificate", Protobuf.ToProtobuf(ClusterCaCertificate)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("host", Protobuf.ToProtobuf(Host)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("password", Protobuf.ToProtobuf(Password)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("username", Protobuf.ToProtobuf(Username)));
		} // ToProtobuf

		public static KubernetesClusterKubeConfig FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new KubernetesClusterKubeConfig();
				if (obj.Fields.ContainsKey("client_certificate")) {
					result.ClientCertificate = Protobuf.ToString(obj.Fields["client_certificate"]);
				}
				if (obj.Fields.ContainsKey("client_key")) {
					result.ClientKey = Protobuf.ToString(obj.Fields["client_key"]);
				}
				if (obj.Fields.ContainsKey("cluster_ca_certificate")) {
					result.ClusterCaCertificate = Protobuf.ToString(obj.Fields["cluster_ca_certificate"]);
				}
				if (obj.Fields.ContainsKey("host")) {
					result.Host = Protobuf.ToString(obj.Fields["host"]);
				}
				if (obj.Fields.ContainsKey("password")) {
					result.Password = Protobuf.ToString(obj.Fields["password"]);
				}
				if (obj.Fields.ContainsKey("username")) {
					result.Username = Protobuf.ToString(obj.Fields["username"]);
				}
			return result;
		} // FromProtobuf

	} // KubernetesClusterKubeConfig

	public sealed class KubernetesClusterLinuxProfileSshKey : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> KeyData { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("key_data", Protobuf.ToProtobuf(KeyData)));
		} // ToProtobuf

		public static KubernetesClusterLinuxProfileSshKey FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new KubernetesClusterLinuxProfileSshKey();
				if (obj.Fields.ContainsKey("key_data")) {
					result.KeyData = Protobuf.ToString(obj.Fields["key_data"]);
				}
			return result;
		} // FromProtobuf

	} // KubernetesClusterLinuxProfileSshKey

	public sealed class KubernetesClusterLinuxProfile : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> AdminUsername { get; set; }
		public Pulumi.IO<KubernetesClusterLinuxProfileSshKey[]> SshKey { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("admin_username", Protobuf.ToProtobuf(AdminUsername)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("ssh_key", Protobuf.ToProtobuf(SshKey, item => Protobuf.ToProtobuf(item))));
		} // ToProtobuf

		public static KubernetesClusterLinuxProfile FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new KubernetesClusterLinuxProfile();
				if (obj.Fields.ContainsKey("admin_username")) {
					result.AdminUsername = Protobuf.ToString(obj.Fields["admin_username"]);
				}
				if (obj.Fields.ContainsKey("ssh_key")) {
					result.SshKey = Protobuf.ToList(obj.Fields["ssh_key"], item => KubernetesClusterLinuxProfileSshKey.FromProtobuf(item));
				}
			return result;
		} // FromProtobuf

	} // KubernetesClusterLinuxProfile

	public sealed class KubernetesClusterNetworkProfile : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> DnsServiceIp { get; set; }
		public Pulumi.IO<string> DockerBridgeCidr { get; set; }
		public Pulumi.IO<string> NetworkPlugin { get; set; }
		public Pulumi.IO<string> PodCidr { get; set; }
		public Pulumi.IO<string> ServiceCidr { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("dns_service_ip", Protobuf.ToProtobuf(DnsServiceIp)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("docker_bridge_cidr", Protobuf.ToProtobuf(DockerBridgeCidr)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("network_plugin", Protobuf.ToProtobuf(NetworkPlugin)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("pod_cidr", Protobuf.ToProtobuf(PodCidr)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("service_cidr", Protobuf.ToProtobuf(ServiceCidr)));
		} // ToProtobuf

		public static KubernetesClusterNetworkProfile FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new KubernetesClusterNetworkProfile();
				if (obj.Fields.ContainsKey("dns_service_ip")) {
					result.DnsServiceIp = Protobuf.ToString(obj.Fields["dns_service_ip"]);
				}
				if (obj.Fields.ContainsKey("docker_bridge_cidr")) {
					result.DockerBridgeCidr = Protobuf.ToString(obj.Fields["docker_bridge_cidr"]);
				}
				if (obj.Fields.ContainsKey("network_plugin")) {
					result.NetworkPlugin = Protobuf.ToString(obj.Fields["network_plugin"]);
				}
				if (obj.Fields.ContainsKey("pod_cidr")) {
					result.PodCidr = Protobuf.ToString(obj.Fields["pod_cidr"]);
				}
				if (obj.Fields.ContainsKey("service_cidr")) {
					result.ServiceCidr = Protobuf.ToString(obj.Fields["service_cidr"]);
				}
			return result;
		} // FromProtobuf

	} // KubernetesClusterNetworkProfile

	public sealed class KubernetesClusterRoleBasedAccessControlAzureActiveDirectory : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> ClientAppId { get; set; }
		public Pulumi.IO<string> ServerAppId { get; set; }
		public Pulumi.IO<string> ServerAppSecret { get; set; }
		public Pulumi.IO<string> TenantId { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("client_app_id", Protobuf.ToProtobuf(ClientAppId)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("server_app_id", Protobuf.ToProtobuf(ServerAppId)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("server_app_secret", Protobuf.ToProtobuf(ServerAppSecret)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("tenant_id", Protobuf.ToProtobuf(TenantId)));
		} // ToProtobuf

		public static KubernetesClusterRoleBasedAccessControlAzureActiveDirectory FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new KubernetesClusterRoleBasedAccessControlAzureActiveDirectory();
				if (obj.Fields.ContainsKey("client_app_id")) {
					result.ClientAppId = Protobuf.ToString(obj.Fields["client_app_id"]);
				}
				if (obj.Fields.ContainsKey("server_app_id")) {
					result.ServerAppId = Protobuf.ToString(obj.Fields["server_app_id"]);
				}
				if (obj.Fields.ContainsKey("server_app_secret")) {
					result.ServerAppSecret = Protobuf.ToString(obj.Fields["server_app_secret"]);
				}
				if (obj.Fields.ContainsKey("tenant_id")) {
					result.TenantId = Protobuf.ToString(obj.Fields["tenant_id"]);
				}
			return result;
		} // FromProtobuf

	} // KubernetesClusterRoleBasedAccessControlAzureActiveDirectory

	public sealed class KubernetesClusterRoleBasedAccessControl : Pulumi.IIOProtobuf {
		public Pulumi.IO<KubernetesClusterRoleBasedAccessControlAzureActiveDirectory> AzureActiveDirectory { get; set; }
		public Pulumi.IO<bool> Enabled { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("azure_active_directory", Protobuf.ToProtobuf(AzureActiveDirectory)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("enabled", Protobuf.ToProtobuf(Enabled)));
		} // ToProtobuf

		public static KubernetesClusterRoleBasedAccessControl FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new KubernetesClusterRoleBasedAccessControl();
				if (obj.Fields.ContainsKey("azure_active_directory")) {
					result.AzureActiveDirectory = KubernetesClusterRoleBasedAccessControlAzureActiveDirectory.FromProtobuf(obj.Fields["azure_active_directory"]);
				}
				if (obj.Fields.ContainsKey("enabled")) {
					result.Enabled = Protobuf.ToBool(obj.Fields["enabled"]);
				}
			return result;
		} // FromProtobuf

	} // KubernetesClusterRoleBasedAccessControl

	public sealed class KubernetesClusterServicePrincipal : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> ClientId { get; set; }
		public Pulumi.IO<string> ClientSecret { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("client_id", Protobuf.ToProtobuf(ClientId)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("client_secret", Protobuf.ToProtobuf(ClientSecret)));
		} // ToProtobuf

		public static KubernetesClusterServicePrincipal FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new KubernetesClusterServicePrincipal();
				if (obj.Fields.ContainsKey("client_id")) {
					result.ClientId = Protobuf.ToString(obj.Fields["client_id"]);
				}
				if (obj.Fields.ContainsKey("client_secret")) {
					result.ClientSecret = Protobuf.ToString(obj.Fields["client_secret"]);
				}
			return result;
		} // FromProtobuf

	} // KubernetesClusterServicePrincipal

	/// <summary>
	/// The set of arguments for constructing a KubernetesCluster resource.
	/// </summary>
	public struct KubernetesClusterArgs {
		/// <summary>
		/// A `addon_profile` block.
		/// </summary>
		public Pulumi.IO<KubernetesClusterArgsAddonProfile> AddonProfile { get; set; }

		/// <summary>
		/// One or more `agent_pool_profile` blocks as documented below.
		/// </summary>
		public Pulumi.IO<KubernetesClusterArgsAgentPoolProfile> AgentPoolProfile { get; set; }

		/// <summary>
		/// DNS prefix specified when creating the managed cluster. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> DnsPrefix { get; set; }

		/// <summary>
		/// Version of Kubernetes specified when creating the AKS managed cluster. If not specified, the latest recommended version will be used at provisioning time (but won't auto-upgrade).
		/// </summary>
		public Pulumi.IO<string> KubernetesVersion { get; set; }

		/// <summary>
		/// A `linux_profile` block.
		/// </summary>
		public Pulumi.IO<KubernetesClusterArgsLinuxProfile> LinuxProfile { get; set; }

		/// <summary>
		/// The location where the Managed Kubernetes Cluster should be created. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Location { get; set; }

		/// <summary>
		/// The name of the Managed Kubernetes Cluster to create. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// A `network_profile` block.
		/// </summary>
		public Pulumi.IO<KubernetesClusterArgsNetworkProfile> NetworkProfile { get; set; }

		/// <summary>
		/// Specifies the Resource Group where the Managed Kubernetes Cluster should exist. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ResourceGroupName { get; set; }

		/// <summary>
		/// A `role_based_access_control` block. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<KubernetesClusterArgsRoleBasedAccessControl> RoleBasedAccessControl { get; set; }

		/// <summary>
		/// A `service_principal` block as documented below.
		/// </summary>
		public Pulumi.IO<KubernetesClusterArgsServicePrincipal> ServicePrincipal { get; set; }

		/// <summary>
		/// A mapping of tags to assign to the resource.
		/// </summary>
		public Pulumi.IO<System.Collections.Generic.Dictionary<string, string>> Tags { get; set; }

	} // KubernetesClusterArgs

	/// <summary>
	/// Manages a Managed Kubernetes Cluster (also known as AKS / Azure Kubernetes Service)
	/// 
	/// > **Note:** All arguments including the client secret will be stored in the raw state as plain-text. [Read more about sensitive data in state](https://www.terraform.io/docs/state/sensitive-data.html).
	/// </summary>
	public class KubernetesCluster : Pulumi.CustomResource {
		/// <summary>
		/// A `addon_profile` block.
		/// </summary>
		public Pulumi.IO<KubernetesClusterAddonProfile> AddonProfile { get; set; }

		/// <summary>
		/// One or more `agent_pool_profile` blocks as documented below.
		/// </summary>
		public Pulumi.IO<KubernetesClusterAgentPoolProfile> AgentPoolProfile { get; set; }

		/// <summary>
		/// DNS prefix specified when creating the managed cluster. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> DnsPrefix { get; set; }

		/// <summary>
		/// The FQDN of the Azure Kubernetes Managed Cluster.
		/// </summary>
		public Pulumi.IO<string> Fqdn { get; set; }

		/// <summary>
		/// A `kube_admin_config` block as defined below. This is only available when Role Based Access Control with Azure Active Directory is enabled.
		/// </summary>
		public Pulumi.IO<KubernetesClusterKubeAdminConfig> KubeAdminConfig { get; set; }

		/// <summary>
		/// Raw Kubernetes config for the admin account to be used by [kubectl](https://kubernetes.io/docs/reference/kubectl/overview/) and other compatible tools. This is only available when Role Based Access Control with Azure Active Directory is enabled.
		/// </summary>
		public Pulumi.IO<string> KubeAdminConfigRaw { get; set; }

		/// <summary>
		/// A `kube_config` block as defined below.
		/// </summary>
		public Pulumi.IO<KubernetesClusterKubeConfig> KubeConfig { get; set; }

		/// <summary>
		/// Raw Kubernetes config to be used by [kubectl](https://kubernetes.io/docs/reference/kubectl/overview/) and other compatible tools
		/// </summary>
		public Pulumi.IO<string> KubeConfigRaw { get; set; }

		/// <summary>
		/// Version of Kubernetes specified when creating the AKS managed cluster. If not specified, the latest recommended version will be used at provisioning time (but won't auto-upgrade).
		/// </summary>
		public Pulumi.IO<string> KubernetesVersion { get; set; }

		/// <summary>
		/// A `linux_profile` block.
		/// </summary>
		public Pulumi.IO<KubernetesClusterLinuxProfile> LinuxProfile { get; set; }

		/// <summary>
		/// The location where the Managed Kubernetes Cluster should be created. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Location { get; set; }

		/// <summary>
		/// The name of the Managed Kubernetes Cluster to create. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// A `network_profile` block.
		/// </summary>
		public Pulumi.IO<KubernetesClusterNetworkProfile> NetworkProfile { get; set; }

		/// <summary>
		/// The auto-generated Resource Group which contains the resources for this Managed Kubernetes Cluster.
		/// </summary>
		public Pulumi.IO<string> NodeResourceGroup { get; set; }

		/// <summary>
		/// Specifies the Resource Group where the Managed Kubernetes Cluster should exist. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ResourceGroupName { get; set; }

		/// <summary>
		/// A `role_based_access_control` block. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<KubernetesClusterRoleBasedAccessControl> RoleBasedAccessControl { get; set; }

		/// <summary>
		/// A `service_principal` block as documented below.
		/// </summary>
		public Pulumi.IO<KubernetesClusterServicePrincipal> ServicePrincipal { get; set; }

		/// <summary>
		/// A mapping of tags to assign to the resource.
		/// </summary>
		public Pulumi.IO<System.Collections.Generic.Dictionary<string, string>> Tags { get; set; }

		public KubernetesCluster(string name, KubernetesClusterArgs args, Pulumi.ResourceOptions opts = default(Pulumi.ResourceOptions))
			: base("azure:containerservice/kubernetesCluster:KubernetesCluster", name, SerialiseArgs(args), opts) {
			AddonProfile = base.Outputs["addonProfile"].Select(item => KubernetesClusterAddonProfile.FromProtobuf(item));
			AgentPoolProfile = base.Outputs["agentPoolProfile"].Select(item => KubernetesClusterAgentPoolProfile.FromProtobuf(item));
			DnsPrefix = base.Outputs["dnsPrefix"].Select(item => Protobuf.ToString(item));
			Fqdn = base.Outputs["fqdn"].Select(item => Protobuf.ToString(item));
			KubeAdminConfig = base.Outputs["kubeAdminConfig"].Select(item => KubernetesClusterKubeAdminConfig.FromProtobuf(item));
			KubeAdminConfigRaw = base.Outputs["kubeAdminConfigRaw"].Select(item => Protobuf.ToString(item));
			KubeConfig = base.Outputs["kubeConfig"].Select(item => KubernetesClusterKubeConfig.FromProtobuf(item));
			KubeConfigRaw = base.Outputs["kubeConfigRaw"].Select(item => Protobuf.ToString(item));
			KubernetesVersion = base.Outputs["kubernetesVersion"].Select(item => Protobuf.ToString(item));
			LinuxProfile = base.Outputs["linuxProfile"].Select(item => KubernetesClusterLinuxProfile.FromProtobuf(item));
			Location = base.Outputs["location"].Select(item => Protobuf.ToString(item));
			Name = base.Outputs["name"].Select(item => Protobuf.ToString(item));
			NetworkProfile = base.Outputs["networkProfile"].Select(item => KubernetesClusterNetworkProfile.FromProtobuf(item));
			NodeResourceGroup = base.Outputs["nodeResourceGroup"].Select(item => Protobuf.ToString(item));
			ResourceGroupName = base.Outputs["resourceGroupName"].Select(item => Protobuf.ToString(item));
			RoleBasedAccessControl = base.Outputs["roleBasedAccessControl"].Select(item => KubernetesClusterRoleBasedAccessControl.FromProtobuf(item));
			ServicePrincipal = base.Outputs["servicePrincipal"].Select(item => KubernetesClusterServicePrincipal.FromProtobuf(item));
			Tags = base.Outputs["tags"].Select(item => Protobuf.ToMap(item));
		} // ctor

		private static Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>> SerialiseArgs(KubernetesClusterArgs args) {
			var props = new Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>();
			props["addonProfile"] = Protobuf.ToProtobuf(args.AddonProfile);
			props["agentPoolProfile"] = Protobuf.ToProtobuf(args.AgentPoolProfile);
			props["dnsPrefix"] = Protobuf.ToProtobuf(args.DnsPrefix);
			props["kubernetesVersion"] = Protobuf.ToProtobuf(args.KubernetesVersion);
			props["linuxProfile"] = Protobuf.ToProtobuf(args.LinuxProfile);
			props["location"] = Protobuf.ToProtobuf(args.Location);
			props["name"] = Protobuf.ToProtobuf(args.Name);
			props["networkProfile"] = Protobuf.ToProtobuf(args.NetworkProfile);
			props["resourceGroupName"] = Protobuf.ToProtobuf(args.ResourceGroupName);
			props["roleBasedAccessControl"] = Protobuf.ToProtobuf(args.RoleBasedAccessControl);
			props["servicePrincipal"] = Protobuf.ToProtobuf(args.ServicePrincipal);
			props["tags"] = Protobuf.ToProtobuf(args.Tags);
			props["fqdn"] = null; //out
			props["kubeAdminConfig"] = null; //out
			props["kubeAdminConfigRaw"] = null; //out
			props["kubeConfig"] = null; //out
			props["kubeConfigRaw"] = null; //out
			props["nodeResourceGroup"] = null; //out
			return props;
		} // SerialiseArgs

	} // KubernetesCluster
} // Pulumi.Azure.Containerservice
