// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Azure.Signalr {

	public sealed class ServiceArgsSku : Pulumi.IIOProtobuf {
		public Pulumi.IO<int> Capacity { get; set; }
		public Pulumi.IO<string> Name { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("capacity", Protobuf.ToProtobuf(Capacity)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("name", Protobuf.ToProtobuf(Name)));
		} // ToProtobuf

	} // ServiceArgsSku

	public sealed class ServiceSku : Pulumi.IIOProtobuf {
		public Pulumi.IO<int> Capacity { get; set; }
		public Pulumi.IO<string> Name { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("capacity", Protobuf.ToProtobuf(Capacity)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("name", Protobuf.ToProtobuf(Name)));
		} // ToProtobuf

		public static ServiceSku FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new ServiceSku();
				if (obj.Fields.ContainsKey("capacity")) {
					result.Capacity = Protobuf.ToInt(obj.Fields["capacity"]);
				}
				if (obj.Fields.ContainsKey("name")) {
					result.Name = Protobuf.ToString(obj.Fields["name"]);
				}
			return result;
		} // FromProtobuf

	} // ServiceSku

	/// <summary>
	/// The set of arguments for constructing a Service resource.
	/// </summary>
	public struct ServiceArgs {
		public Pulumi.IO<string> Location { get; set; }

		public Pulumi.IO<string> Name { get; set; }

		public Pulumi.IO<string> ResourceGroupName { get; set; }

		public Pulumi.IO<ServiceArgsSku> Sku { get; set; }

		public Pulumi.IO<System.Collections.Generic.Dictionary<string, string>> Tags { get; set; }

	} // ServiceArgs

	public class Service : Pulumi.CustomResource {
		public Pulumi.IO<string> Hostname { get; set; }

		public Pulumi.IO<string> IpAddress { get; set; }

		public Pulumi.IO<string> Location { get; set; }

		public Pulumi.IO<string> Name { get; set; }

		public Pulumi.IO<int> PublicPort { get; set; }

		public Pulumi.IO<string> ResourceGroupName { get; set; }

		public Pulumi.IO<int> ServerPort { get; set; }

		public Pulumi.IO<ServiceSku> Sku { get; set; }

		public Pulumi.IO<System.Collections.Generic.Dictionary<string, string>> Tags { get; set; }

		public Service(string name, ServiceArgs args, Pulumi.ResourceOptions opts = default(Pulumi.ResourceOptions))
			: base("azure:signalr/service:Service", name, SerialiseArgs(args), opts) {
			Hostname = base.Outputs["hostname"].Select(item => Protobuf.ToString(item));
			IpAddress = base.Outputs["ipAddress"].Select(item => Protobuf.ToString(item));
			Location = base.Outputs["location"].Select(item => Protobuf.ToString(item));
			Name = base.Outputs["name"].Select(item => Protobuf.ToString(item));
			PublicPort = base.Outputs["publicPort"].Select(item => Protobuf.ToInt(item));
			ResourceGroupName = base.Outputs["resourceGroupName"].Select(item => Protobuf.ToString(item));
			ServerPort = base.Outputs["serverPort"].Select(item => Protobuf.ToInt(item));
			Sku = base.Outputs["sku"].Select(item => ServiceSku.FromProtobuf(item));
			Tags = base.Outputs["tags"].Select(item => Protobuf.ToMap(item));
		} // ctor

		private static Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>> SerialiseArgs(ServiceArgs args) {
			var props = new Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>();
			props["location"] = Protobuf.ToProtobuf(args.Location);
			props["name"] = Protobuf.ToProtobuf(args.Name);
			props["resourceGroupName"] = Protobuf.ToProtobuf(args.ResourceGroupName);
			props["sku"] = Protobuf.ToProtobuf(args.Sku);
			props["tags"] = Protobuf.ToProtobuf(args.Tags);
			props["hostname"] = null; //out
			props["ipAddress"] = null; //out
			props["publicPort"] = null; //out
			props["serverPort"] = null; //out
			return props;
		} // SerialiseArgs

	} // Service
} // Pulumi.Azure.Signalr
