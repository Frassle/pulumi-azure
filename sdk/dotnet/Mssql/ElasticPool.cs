// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Azure.Mssql {

	public sealed class ElasticPoolArgsPerDatabaseSetting : Pulumi.IIOProtobuf {
		public Pulumi.IO<double> MaxCapacity { get; set; }
		public Pulumi.IO<double> MinCapacity { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("max_capacity", Protobuf.ToProtobuf(MaxCapacity)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("min_capacity", Protobuf.ToProtobuf(MinCapacity)));
		} // ToProtobuf

	} // ElasticPoolArgsPerDatabaseSetting

	public sealed class ElasticPoolArgsSku : Pulumi.IIOProtobuf {
		public Pulumi.IO<int> Capacity { get; set; }
		public Pulumi.IO<string> Family { get; set; }
		public Pulumi.IO<string> Name { get; set; }
		public Pulumi.IO<string> Tier { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("capacity", Protobuf.ToProtobuf(Capacity)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("family", Protobuf.ToProtobuf(Family)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("name", Protobuf.ToProtobuf(Name)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("tier", Protobuf.ToProtobuf(Tier)));
		} // ToProtobuf

	} // ElasticPoolArgsSku

	public sealed class ElasticPoolElasticPoolProperty : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> CreationDate { get; set; }
		public Pulumi.IO<string> LicenseType { get; set; }
		public Pulumi.IO<int> MaxSizeBytes { get; set; }
		public Pulumi.IO<string> State { get; set; }
		public Pulumi.IO<bool> ZoneRedundant { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("creation_date", Protobuf.ToProtobuf(CreationDate)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("license_type", Protobuf.ToProtobuf(LicenseType)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("max_size_bytes", Protobuf.ToProtobuf(MaxSizeBytes)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("state", Protobuf.ToProtobuf(State)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("zone_redundant", Protobuf.ToProtobuf(ZoneRedundant)));
		} // ToProtobuf

		public static ElasticPoolElasticPoolProperty FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new ElasticPoolElasticPoolProperty();
				if (obj.Fields.ContainsKey("creation_date")) {
					result.CreationDate = Protobuf.ToString(obj.Fields["creation_date"]);
				}
				if (obj.Fields.ContainsKey("license_type")) {
					result.LicenseType = Protobuf.ToString(obj.Fields["license_type"]);
				}
				if (obj.Fields.ContainsKey("max_size_bytes")) {
					result.MaxSizeBytes = Protobuf.ToInt(obj.Fields["max_size_bytes"]);
				}
				if (obj.Fields.ContainsKey("state")) {
					result.State = Protobuf.ToString(obj.Fields["state"]);
				}
				if (obj.Fields.ContainsKey("zone_redundant")) {
					result.ZoneRedundant = Protobuf.ToBool(obj.Fields["zone_redundant"]);
				}
			return result;
		} // FromProtobuf

	} // ElasticPoolElasticPoolProperty

	public sealed class ElasticPoolPerDatabaseSetting : Pulumi.IIOProtobuf {
		public Pulumi.IO<double> MaxCapacity { get; set; }
		public Pulumi.IO<double> MinCapacity { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("max_capacity", Protobuf.ToProtobuf(MaxCapacity)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("min_capacity", Protobuf.ToProtobuf(MinCapacity)));
		} // ToProtobuf

		public static ElasticPoolPerDatabaseSetting FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new ElasticPoolPerDatabaseSetting();
				if (obj.Fields.ContainsKey("max_capacity")) {
					result.MaxCapacity = Protobuf.ToDouble(obj.Fields["max_capacity"]);
				}
				if (obj.Fields.ContainsKey("min_capacity")) {
					result.MinCapacity = Protobuf.ToDouble(obj.Fields["min_capacity"]);
				}
			return result;
		} // FromProtobuf

	} // ElasticPoolPerDatabaseSetting

	public sealed class ElasticPoolSku : Pulumi.IIOProtobuf {
		public Pulumi.IO<int> Capacity { get; set; }
		public Pulumi.IO<string> Family { get; set; }
		public Pulumi.IO<string> Name { get; set; }
		public Pulumi.IO<string> Tier { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("capacity", Protobuf.ToProtobuf(Capacity)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("family", Protobuf.ToProtobuf(Family)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("name", Protobuf.ToProtobuf(Name)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("tier", Protobuf.ToProtobuf(Tier)));
		} // ToProtobuf

		public static ElasticPoolSku FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new ElasticPoolSku();
				if (obj.Fields.ContainsKey("capacity")) {
					result.Capacity = Protobuf.ToInt(obj.Fields["capacity"]);
				}
				if (obj.Fields.ContainsKey("family")) {
					result.Family = Protobuf.ToString(obj.Fields["family"]);
				}
				if (obj.Fields.ContainsKey("name")) {
					result.Name = Protobuf.ToString(obj.Fields["name"]);
				}
				if (obj.Fields.ContainsKey("tier")) {
					result.Tier = Protobuf.ToString(obj.Fields["tier"]);
				}
			return result;
		} // FromProtobuf

	} // ElasticPoolSku

	/// <summary>
	/// The set of arguments for constructing a ElasticPool resource.
	/// </summary>
	public struct ElasticPoolArgs {
		/// <summary>
		/// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Location { get; set; }

		/// <summary>
		/// Specifies the SKU Name for this Elasticpool. The name of the SKU, will be either `vCore` based `tier` + `family` pattern (e.g. GP_Gen4, BC_Gen5) or the `DTU` based `BasicPool`, `StandardPool`, or `PremiumPool` pattern. 
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// A `per_database_settings` block as defined below.
		/// </summary>
		public Pulumi.IO<ElasticPoolArgsPerDatabaseSetting> PerDatabaseSettings { get; set; }

		/// <summary>
		/// The name of the resource group in which to create the elastic pool. This must be the same as the resource group of the underlying SQL server.
		/// </summary>
		public Pulumi.IO<string> ResourceGroupName { get; set; }

		/// <summary>
		/// The name of the SQL Server on which to create the elastic pool. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ServerName { get; set; }

		/// <summary>
		/// A `sku` block as defined below.
		/// </summary>
		public Pulumi.IO<ElasticPoolArgsSku> Sku { get; set; }

		/// <summary>
		/// A mapping of tags to assign to the resource.
		/// </summary>
		public Pulumi.IO<System.Collections.Generic.Dictionary<string, string>> Tags { get; set; }

	} // ElasticPoolArgs

	/// <summary>
	/// Allows you to manage an Azure SQL Elastic Pool via the `2017-10-01-preview` API which allows for `vCore` and `DTU` based configurations.
	/// </summary>
	public class ElasticPool : Pulumi.CustomResource {
		public Pulumi.IO<ElasticPoolElasticPoolProperty> ElasticPoolProperties { get; set; }

		/// <summary>
		/// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Location { get; set; }

		/// <summary>
		/// The storage limit for the database elastic pool in bytes.
		/// </summary>
		public Pulumi.IO<int> MaxSizeBytes { get; set; }

		/// <summary>
		/// Specifies the SKU Name for this Elasticpool. The name of the SKU, will be either `vCore` based `tier` + `family` pattern (e.g. GP_Gen4, BC_Gen5) or the `DTU` based `BasicPool`, `StandardPool`, or `PremiumPool` pattern. 
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// A `per_database_settings` block as defined below.
		/// </summary>
		public Pulumi.IO<ElasticPoolPerDatabaseSetting> PerDatabaseSettings { get; set; }

		/// <summary>
		/// The name of the resource group in which to create the elastic pool. This must be the same as the resource group of the underlying SQL server.
		/// </summary>
		public Pulumi.IO<string> ResourceGroupName { get; set; }

		/// <summary>
		/// The name of the SQL Server on which to create the elastic pool. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ServerName { get; set; }

		/// <summary>
		/// A `sku` block as defined below.
		/// </summary>
		public Pulumi.IO<ElasticPoolSku> Sku { get; set; }

		/// <summary>
		/// A mapping of tags to assign to the resource.
		/// </summary>
		public Pulumi.IO<System.Collections.Generic.Dictionary<string, string>> Tags { get; set; }

		/// <summary>
		/// Whether or not this elastic pool is zone redundant.
		/// </summary>
		public Pulumi.IO<bool> ZoneRedundant { get; set; }

		public ElasticPool(string name, ElasticPoolArgs args, Pulumi.ResourceOptions opts = default(Pulumi.ResourceOptions))
			: base("azure:mssql/elasticPool:ElasticPool", name, SerialiseArgs(args), opts) {
			ElasticPoolProperties = base.Outputs["elasticPoolProperties"].Select(item => ElasticPoolElasticPoolProperty.FromProtobuf(item));
			Location = base.Outputs["location"].Select(item => Protobuf.ToString(item));
			MaxSizeBytes = base.Outputs["maxSizeBytes"].Select(item => Protobuf.ToInt(item));
			Name = base.Outputs["name"].Select(item => Protobuf.ToString(item));
			PerDatabaseSettings = base.Outputs["perDatabaseSettings"].Select(item => ElasticPoolPerDatabaseSetting.FromProtobuf(item));
			ResourceGroupName = base.Outputs["resourceGroupName"].Select(item => Protobuf.ToString(item));
			ServerName = base.Outputs["serverName"].Select(item => Protobuf.ToString(item));
			Sku = base.Outputs["sku"].Select(item => ElasticPoolSku.FromProtobuf(item));
			Tags = base.Outputs["tags"].Select(item => Protobuf.ToMap(item));
			ZoneRedundant = base.Outputs["zoneRedundant"].Select(item => Protobuf.ToBool(item));
		} // ctor

		private static Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>> SerialiseArgs(ElasticPoolArgs args) {
			var props = new Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>();
			props["location"] = Protobuf.ToProtobuf(args.Location);
			props["name"] = Protobuf.ToProtobuf(args.Name);
			props["perDatabaseSettings"] = Protobuf.ToProtobuf(args.PerDatabaseSettings);
			props["resourceGroupName"] = Protobuf.ToProtobuf(args.ResourceGroupName);
			props["serverName"] = Protobuf.ToProtobuf(args.ServerName);
			props["sku"] = Protobuf.ToProtobuf(args.Sku);
			props["tags"] = Protobuf.ToProtobuf(args.Tags);
			props["elasticPoolProperties"] = null; //out
			props["maxSizeBytes"] = null; //out
			props["zoneRedundant"] = null; //out
			return props;
		} // SerialiseArgs

	} // ElasticPool
} // Pulumi.Azure.Mssql
