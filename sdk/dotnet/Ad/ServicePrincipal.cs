// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Azure.Ad {

	/// <summary>
	/// The set of arguments for constructing a ServicePrincipal resource.
	/// </summary>
	public struct ServicePrincipalArgs {
		/// <summary>
		/// The ID of the Azure AD Application for which to create a Service Principal.
		/// </summary>
		public Pulumi.IO<string> ApplicationId { get; set; }

	} // ServicePrincipalArgs

	/// <summary>
	/// Manages a Service Principal associated with an Application within Azure Active Directory.
	/// 
	/// > **NOTE:** The Azure Active Directory resources have been split out into [a new AzureAD Provider](http://terraform.io/docs/providers/azuread/index.html) - as such the AzureAD resources within the AzureRM Provider are deprecated and will be removed in the next major version (2.0). Information on how to migrate from the existing resources to the new AzureAD Provider can be found here.
	/// 
	/// -> **NOTE:** If you're authenticating using a Service Principal then it must have permissions to both `Read and write all applications` and `Sign in and read user profile` within the `Windows Azure Active Directory` API.
	/// </summary>
	public class ServicePrincipal : Pulumi.CustomResource {
		/// <summary>
		/// The ID of the Azure AD Application for which to create a Service Principal.
		/// </summary>
		public Pulumi.IO<string> ApplicationId { get; set; }

		/// <summary>
		/// The Display Name of the Azure Active Directory Application associated with this Service Principal.
		/// </summary>
		public Pulumi.IO<string> DisplayName { get; set; }

		public ServicePrincipal(string name, ServicePrincipalArgs args, Pulumi.ResourceOptions opts = default(Pulumi.ResourceOptions))
			: base("azure:ad/servicePrincipal:ServicePrincipal", name, SerialiseArgs(args), opts) {
			ApplicationId = base.Outputs["applicationId"].Select(item => Protobuf.ToString(item));
			DisplayName = base.Outputs["displayName"].Select(item => Protobuf.ToString(item));
		} // ctor

		private static Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>> SerialiseArgs(ServicePrincipalArgs args) {
			var props = new Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>();
			props["applicationId"] = Protobuf.ToProtobuf(args.ApplicationId);
			props["displayName"] = null; //out
			return props;
		} // SerialiseArgs

	} // ServicePrincipal
} // Pulumi.Azure.Ad
