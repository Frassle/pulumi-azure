// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Azure.Ad {

	/// <summary>
	/// The set of arguments for constructing a ServicePrincipalPassword resource.
	/// </summary>
	public struct ServicePrincipalPasswordArgs {
		/// <summary>
		/// The End Date which the Password is valid until, formatted as a RFC3339 date string (e.g. `2018-01-01T01:02:03Z`). Changing this field forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> EndDate { get; set; }

		/// <summary>
		/// A GUID used to uniquely identify this Key. If not specified a GUID will be created. Changing this field forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> KeyId { get; set; }

		/// <summary>
		/// The ID of the Service Principal for which this password should be created. Changing this field forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ServicePrincipalId { get; set; }

		/// <summary>
		/// The Start Date which the Password is valid from, formatted as a RFC3339 date string (e.g. `2018-01-01T01:02:03Z`). If this isn't specified, the current date is used.  Changing this field forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> StartDate { get; set; }

		/// <summary>
		/// The Password for this Service Principal.
		/// </summary>
		public Pulumi.IO<string> Value { get; set; }

	} // ServicePrincipalPasswordArgs

	/// <summary>
	/// Manages a Password associated with a Service Principal within Azure Active Directory.
	/// 
	/// > **NOTE:** The Azure Active Directory resources have been split out into [a new AzureAD Provider](http://terraform.io/docs/providers/azuread/index.html) - as such the AzureAD resources within the AzureRM Provider are deprecated and will be removed in the next major version (2.0). Information on how to migrate from the existing resources to the new AzureAD Provider can be found here.
	/// 
	/// -> **NOTE:** If you're authenticating using a Service Principal then it must have permissions to both `Read and write all applications` and `Sign in and read user profile` within the `Windows Azure Active Directory` API.
	/// </summary>
	public class ServicePrincipalPassword : Pulumi.CustomResource {
		/// <summary>
		/// The End Date which the Password is valid until, formatted as a RFC3339 date string (e.g. `2018-01-01T01:02:03Z`). Changing this field forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> EndDate { get; set; }

		/// <summary>
		/// A GUID used to uniquely identify this Key. If not specified a GUID will be created. Changing this field forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> KeyId { get; set; }

		/// <summary>
		/// The ID of the Service Principal for which this password should be created. Changing this field forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ServicePrincipalId { get; set; }

		/// <summary>
		/// The Start Date which the Password is valid from, formatted as a RFC3339 date string (e.g. `2018-01-01T01:02:03Z`). If this isn't specified, the current date is used.  Changing this field forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> StartDate { get; set; }

		/// <summary>
		/// The Password for this Service Principal.
		/// </summary>
		public Pulumi.IO<string> Value { get; set; }

		public ServicePrincipalPassword(string name, ServicePrincipalPasswordArgs args, Pulumi.ResourceOptions opts = default(Pulumi.ResourceOptions))
			: base("azure:ad/servicePrincipalPassword:ServicePrincipalPassword", name, SerialiseArgs(args), opts) {
			EndDate = base.Outputs["endDate"].Select(item => Protobuf.ToString(item));
			KeyId = base.Outputs["keyId"].Select(item => Protobuf.ToString(item));
			ServicePrincipalId = base.Outputs["servicePrincipalId"].Select(item => Protobuf.ToString(item));
			StartDate = base.Outputs["startDate"].Select(item => Protobuf.ToString(item));
			Value = base.Outputs["value"].Select(item => Protobuf.ToString(item));
		} // ctor

		private static Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>> SerialiseArgs(ServicePrincipalPasswordArgs args) {
			var props = new Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>();
			props["endDate"] = Protobuf.ToProtobuf(args.EndDate);
			props["keyId"] = Protobuf.ToProtobuf(args.KeyId);
			props["servicePrincipalId"] = Protobuf.ToProtobuf(args.ServicePrincipalId);
			props["startDate"] = Protobuf.ToProtobuf(args.StartDate);
			props["value"] = Protobuf.ToProtobuf(args.Value);
			return props;
		} // SerialiseArgs

	} // ServicePrincipalPassword
} // Pulumi.Azure.Ad
