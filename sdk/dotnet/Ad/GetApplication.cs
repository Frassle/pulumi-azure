// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Azure.Ad {

	/// <summary>
	/// A collection of arguments for invoking getApplication.
	/// </summary>
	public struct GetApplicationArgs {
		/// <summary>
		/// Specifies the name of the Application within Azure Active Directory.
		/// </summary>
		public string Name { get; set; }

		/// <summary>
		/// Specifies the Object ID of the Application within Azure Active Directory.
		/// </summary>
		public string ObjectId { get; set; }

	} // GetApplicationArgs

	/// <summary>
	/// A collection of values returned by getApplication.
	/// </summary>
	public struct GetApplicationResult {
		/// <summary>
		/// the Application ID of the Azure Active Directory Application.
		/// </summary>
		public string ApplicationId { get; set; }

		/// <summary>
		/// Is this Azure AD Application available to other tenants?
		/// </summary>
		public bool AvailableToOtherTenants { get; set; }

		public string Homepage { get; set; }

		/// <summary>
		/// A list of user-defined URI(s) that uniquely identify a Web application within it's Azure AD tenant, or within a verified custom domain if the application is multi-tenant.
		/// </summary>
		public string[] IdentifierUris { get; set; }

		public string Name { get; set; }

		/// <summary>
		/// Does this Azure AD Application allow OAuth2.0 implicit flow tokens?
		/// </summary>
		public bool Oauth2AllowImplicitFlow { get; set; }

		/// <summary>
		/// the Object ID of the Azure Active Directory Application.
		/// </summary>
		public string ObjectId { get; set; }

		/// <summary>
		/// A list of URLs that user tokens are sent to for sign in, or the redirect URIs that OAuth 2.0 authorization codes and access tokens are sent to.
		/// </summary>
		public string[] ReplyUrls { get; set; }

		/// <summary>
		/// id is the provider-assigned unique ID for this managed resource.
		/// </summary>
		public string Id { get; set; }

	} // GetApplicationResult

	public static partial class AdModule {
		/// <summary>
		/// Use this data source to access information about an existing Application within Azure Active Directory.
		/// 
		/// > **NOTE:** The Azure Active Directory resources have been split out into [a new AzureAD Provider](http://terraform.io/docs/providers/azuread/index.html) - as such the AzureAD resources within the AzureRM Provider are deprecated and will be removed in the next major version (2.0). Information on how to migrate from the existing resources to the new AzureAD Provider can be found here.
		/// 
		/// -> **NOTE:** If you're authenticating using a Service Principal then it must have permissions to both `Read and write all applications` and `Sign in and read user profile` within the `Windows Azure Active Directory` API.
		/// </summary>
		public static System.Threading.Tasks.Task<GetApplicationResult> GetApplication(GetApplicationArgs args, Pulumi.InvokeOptions opts = default(Pulumi.InvokeOptions)) {
			var invokeArgs = new Google.Protobuf.WellKnownTypes.Struct();
			invokeArgs.Fields["name"] = Protobuf.ToProtobuf(args.Name);
			invokeArgs.Fields["objectId"] = Protobuf.ToProtobuf(args.ObjectId);

			var task = Pulumi.Runtime.InvokeAsync("azure:ad/getApplication:getApplication", invokeArgs, opts);

			return task.ContinueWith(response => {
				var protobuf = response.Result;
				var result = new GetApplicationResult();
				if (protobuf.Fields.ContainsKey("applicationId")) {
					result.ApplicationId = Protobuf.ToString(protobuf.Fields["applicationId"]);
				}
				if (protobuf.Fields.ContainsKey("availableToOtherTenants")) {
					result.AvailableToOtherTenants = Protobuf.ToBool(protobuf.Fields["availableToOtherTenants"]);
				}
				if (protobuf.Fields.ContainsKey("homepage")) {
					result.Homepage = Protobuf.ToString(protobuf.Fields["homepage"]);
				}
				if (protobuf.Fields.ContainsKey("identifierUris")) {
					result.IdentifierUris = Protobuf.ToList(protobuf.Fields["identifierUris"], item => Protobuf.ToString(item));
				}
				if (protobuf.Fields.ContainsKey("name")) {
					result.Name = Protobuf.ToString(protobuf.Fields["name"]);
				}
				if (protobuf.Fields.ContainsKey("oauth2AllowImplicitFlow")) {
					result.Oauth2AllowImplicitFlow = Protobuf.ToBool(protobuf.Fields["oauth2AllowImplicitFlow"]);
				}
				if (protobuf.Fields.ContainsKey("objectId")) {
					result.ObjectId = Protobuf.ToString(protobuf.Fields["objectId"]);
				}
				if (protobuf.Fields.ContainsKey("replyUrls")) {
					result.ReplyUrls = Protobuf.ToList(protobuf.Fields["replyUrls"], item => Protobuf.ToString(item));
				}
				if (protobuf.Fields.ContainsKey("id")) {
					result.Id = Protobuf.ToString(protobuf.Fields["id"]);
				}
				return result;
			});
		} // GetApplication

	} // AdModule
} // Pulumi.Azure.Ad
