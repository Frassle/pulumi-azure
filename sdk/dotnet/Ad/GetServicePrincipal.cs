// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Azure.Ad {

	/// <summary>
	/// A collection of arguments for invoking getServicePrincipal.
	/// </summary>
	public struct GetServicePrincipalArgs {
		/// <summary>
		/// The ID of the Azure AD Application for which to create a Service Principal.
		/// </summary>
		public string ApplicationId { get; set; }

		/// <summary>
		/// The Display Name of the Azure AD Application associated with this Service Principal.
		/// </summary>
		public string DisplayName { get; set; }

		/// <summary>
		/// The ID of the Azure AD Service Principal.
		/// </summary>
		public string ObjectId { get; set; }

	} // GetServicePrincipalArgs

	/// <summary>
	/// A collection of values returned by getServicePrincipal.
	/// </summary>
	public struct GetServicePrincipalResult {
		public string ApplicationId { get; set; }

		public string DisplayName { get; set; }

		public string ObjectId { get; set; }

		/// <summary>
		/// id is the provider-assigned unique ID for this managed resource.
		/// </summary>
		public string Id { get; set; }

	} // GetServicePrincipalResult

	public static partial class AdModule {
		/// <summary>
		/// Gets information about an existing Service Principal associated with an Application within Azure Active Directory.
		/// 
		/// > **NOTE:** The Azure Active Directory resources have been split out into [a new AzureAD Provider](http://terraform.io/docs/providers/azuread/index.html) - as such the AzureAD resources within the AzureRM Provider are deprecated and will be removed in the next major version (2.0). Information on how to migrate from the existing resources to the new AzureAD Provider can be found here.
		/// 
		/// -> **NOTE:** If you're authenticating using a Service Principal then it must have permissions to both `Read and write all applications` and `Sign in and read user profile` within the `Windows Azure Active Directory` API.
		/// </summary>
		public static System.Threading.Tasks.Task<GetServicePrincipalResult> GetServicePrincipal(GetServicePrincipalArgs args, Pulumi.InvokeOptions opts = default(Pulumi.InvokeOptions)) {
			var invokeArgs = new Google.Protobuf.WellKnownTypes.Struct();
			invokeArgs.Fields["applicationId"] = Protobuf.ToProtobuf(args.ApplicationId);
			invokeArgs.Fields["displayName"] = Protobuf.ToProtobuf(args.DisplayName);
			invokeArgs.Fields["objectId"] = Protobuf.ToProtobuf(args.ObjectId);

			var task = Pulumi.Runtime.InvokeAsync("azure:ad/getServicePrincipal:getServicePrincipal", invokeArgs, opts);

			return task.ContinueWith(response => {
				var protobuf = response.Result;
				var result = new GetServicePrincipalResult();
				if (protobuf.Fields.ContainsKey("applicationId")) {
					result.ApplicationId = Protobuf.ToString(protobuf.Fields["applicationId"]);
				}
				if (protobuf.Fields.ContainsKey("displayName")) {
					result.DisplayName = Protobuf.ToString(protobuf.Fields["displayName"]);
				}
				if (protobuf.Fields.ContainsKey("objectId")) {
					result.ObjectId = Protobuf.ToString(protobuf.Fields["objectId"]);
				}
				if (protobuf.Fields.ContainsKey("id")) {
					result.Id = Protobuf.ToString(protobuf.Fields["id"]);
				}
				return result;
			});
		} // GetServicePrincipal

	} // AdModule
} // Pulumi.Azure.Ad
