// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Azure.Appservice {

	public sealed class FunctionAppArgsConnectionString : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> Name { get; set; }
		public Pulumi.IO<string> Type { get; set; }
		public Pulumi.IO<string> Value { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("name", Protobuf.ToProtobuf(Name)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("type", Protobuf.ToProtobuf(Type)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("value", Protobuf.ToProtobuf(Value)));
		} // ToProtobuf

	} // FunctionAppArgsConnectionString

	public sealed class FunctionAppArgsIdentity : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> PrincipalId { get; set; }
		public Pulumi.IO<string> TenantId { get; set; }
		public Pulumi.IO<string> Type { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("principal_id", Protobuf.ToProtobuf(PrincipalId)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("tenant_id", Protobuf.ToProtobuf(TenantId)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("type", Protobuf.ToProtobuf(Type)));
		} // ToProtobuf

	} // FunctionAppArgsIdentity

	public sealed class FunctionAppArgsSiteConfig : Pulumi.IIOProtobuf {
		public Pulumi.IO<bool> AlwaysOn { get; set; }
		public Pulumi.IO<bool> Use32BitWorkerProcess { get; set; }
		public Pulumi.IO<bool> WebsocketsEnabled { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("always_on", Protobuf.ToProtobuf(AlwaysOn)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("use_32_bit_worker_process", Protobuf.ToProtobuf(Use32BitWorkerProcess)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("websockets_enabled", Protobuf.ToProtobuf(WebsocketsEnabled)));
		} // ToProtobuf

	} // FunctionAppArgsSiteConfig

	public sealed class FunctionAppConnectionString : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> Name { get; set; }
		public Pulumi.IO<string> Type { get; set; }
		public Pulumi.IO<string> Value { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("name", Protobuf.ToProtobuf(Name)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("type", Protobuf.ToProtobuf(Type)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("value", Protobuf.ToProtobuf(Value)));
		} // ToProtobuf

		public static FunctionAppConnectionString FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new FunctionAppConnectionString();
				if (obj.Fields.ContainsKey("name")) {
					result.Name = Protobuf.ToString(obj.Fields["name"]);
				}
				if (obj.Fields.ContainsKey("type")) {
					result.Type = Protobuf.ToString(obj.Fields["type"]);
				}
				if (obj.Fields.ContainsKey("value")) {
					result.Value = Protobuf.ToString(obj.Fields["value"]);
				}
			return result;
		} // FromProtobuf

	} // FunctionAppConnectionString

	public sealed class FunctionAppIdentity : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> PrincipalId { get; set; }
		public Pulumi.IO<string> TenantId { get; set; }
		public Pulumi.IO<string> Type { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("principal_id", Protobuf.ToProtobuf(PrincipalId)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("tenant_id", Protobuf.ToProtobuf(TenantId)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("type", Protobuf.ToProtobuf(Type)));
		} // ToProtobuf

		public static FunctionAppIdentity FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new FunctionAppIdentity();
				if (obj.Fields.ContainsKey("principal_id")) {
					result.PrincipalId = Protobuf.ToString(obj.Fields["principal_id"]);
				}
				if (obj.Fields.ContainsKey("tenant_id")) {
					result.TenantId = Protobuf.ToString(obj.Fields["tenant_id"]);
				}
				if (obj.Fields.ContainsKey("type")) {
					result.Type = Protobuf.ToString(obj.Fields["type"]);
				}
			return result;
		} // FromProtobuf

	} // FunctionAppIdentity

	public sealed class FunctionAppSiteConfig : Pulumi.IIOProtobuf {
		public Pulumi.IO<bool> AlwaysOn { get; set; }
		public Pulumi.IO<bool> Use32BitWorkerProcess { get; set; }
		public Pulumi.IO<bool> WebsocketsEnabled { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("always_on", Protobuf.ToProtobuf(AlwaysOn)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("use_32_bit_worker_process", Protobuf.ToProtobuf(Use32BitWorkerProcess)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("websockets_enabled", Protobuf.ToProtobuf(WebsocketsEnabled)));
		} // ToProtobuf

		public static FunctionAppSiteConfig FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new FunctionAppSiteConfig();
				if (obj.Fields.ContainsKey("always_on")) {
					result.AlwaysOn = Protobuf.ToBool(obj.Fields["always_on"]);
				}
				if (obj.Fields.ContainsKey("use_32_bit_worker_process")) {
					result.Use32BitWorkerProcess = Protobuf.ToBool(obj.Fields["use_32_bit_worker_process"]);
				}
				if (obj.Fields.ContainsKey("websockets_enabled")) {
					result.WebsocketsEnabled = Protobuf.ToBool(obj.Fields["websockets_enabled"]);
				}
			return result;
		} // FromProtobuf

	} // FunctionAppSiteConfig

	public sealed class FunctionAppSiteCredential : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> Password { get; set; }
		public Pulumi.IO<string> Username { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("password", Protobuf.ToProtobuf(Password)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("username", Protobuf.ToProtobuf(Username)));
		} // ToProtobuf

		public static FunctionAppSiteCredential FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new FunctionAppSiteCredential();
				if (obj.Fields.ContainsKey("password")) {
					result.Password = Protobuf.ToString(obj.Fields["password"]);
				}
				if (obj.Fields.ContainsKey("username")) {
					result.Username = Protobuf.ToString(obj.Fields["username"]);
				}
			return result;
		} // FromProtobuf

	} // FunctionAppSiteCredential

	/// <summary>
	/// The set of arguments for constructing a FunctionApp resource.
	/// </summary>
	public struct FunctionAppArgs {
		/// <summary>
		/// The ID of the App Service Plan within which to create this Function App. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> AppServicePlanId { get; set; }

		/// <summary>
		/// A key-value pair of App Settings.
		/// </summary>
		public Pulumi.IO<System.Collections.Generic.Dictionary<string, string>> AppSettings { get; set; }

		/// <summary>
		/// Should the Function App send session affinity cookies, which route client requests in the same session to the same instance?
		/// </summary>
		public Pulumi.IO<bool> ClientAffinityEnabled { get; set; }

		/// <summary>
		/// An `connection_string` block as defined below.
		/// </summary>
		public Pulumi.IO<Pulumi.IO<FunctionAppArgsConnectionString>[]> ConnectionStrings { get; set; }

		/// <summary>
		/// Should the built-in logging of this Function App be enabled? Defaults to `true`.
		/// </summary>
		public Pulumi.IO<bool> EnableBuiltinLogging { get; set; }

		/// <summary>
		/// Is the Function App enabled?
		/// </summary>
		public Pulumi.IO<bool> Enabled { get; set; }

		/// <summary>
		/// Can the Function App only be accessed via HTTPS? Defaults to `false`.
		/// </summary>
		public Pulumi.IO<bool> HttpsOnly { get; set; }

		/// <summary>
		/// An `identity` block as defined below.
		/// </summary>
		public Pulumi.IO<FunctionAppArgsIdentity> Identity { get; set; }

		/// <summary>
		/// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Location { get; set; }

		/// <summary>
		/// The name of the Connection String.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// The name of the resource group in which to create the Function App.
		/// </summary>
		public Pulumi.IO<string> ResourceGroupName { get; set; }

		/// <summary>
		/// A `site_config` object as defined below.
		/// </summary>
		public Pulumi.IO<FunctionAppArgsSiteConfig> SiteConfig { get; set; }

		/// <summary>
		/// The connection string of the backend storage account which will be used by this Function App (such as the dashboard, logs).
		/// </summary>
		public Pulumi.IO<string> StorageConnectionString { get; set; }

		/// <summary>
		/// A mapping of tags to assign to the resource.
		/// </summary>
		public Pulumi.IO<System.Collections.Generic.Dictionary<string, string>> Tags { get; set; }

		/// <summary>
		/// The runtime version associated with the Function App. Defaults to `~1`.
		/// </summary>
		public Pulumi.IO<string> Version { get; set; }

	} // FunctionAppArgs

	/// <summary>
	/// Manages a Function App.
	/// </summary>
	public class FunctionApp : Pulumi.CustomResource {
		/// <summary>
		/// The ID of the App Service Plan within which to create this Function App. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> AppServicePlanId { get; set; }

		/// <summary>
		/// A key-value pair of App Settings.
		/// </summary>
		public Pulumi.IO<System.Collections.Generic.Dictionary<string, string>> AppSettings { get; set; }

		/// <summary>
		/// Should the Function App send session affinity cookies, which route client requests in the same session to the same instance?
		/// </summary>
		public Pulumi.IO<bool> ClientAffinityEnabled { get; set; }

		/// <summary>
		/// An `connection_string` block as defined below.
		/// </summary>
		public Pulumi.IO<FunctionAppConnectionString[]> ConnectionStrings { get; set; }

		/// <summary>
		/// The default hostname associated with the Function App - such as `mysite.azurewebsites.net`
		/// </summary>
		public Pulumi.IO<string> DefaultHostname { get; set; }

		/// <summary>
		/// Should the built-in logging of this Function App be enabled? Defaults to `true`.
		/// </summary>
		public Pulumi.IO<bool> EnableBuiltinLogging { get; set; }

		/// <summary>
		/// Is the Function App enabled?
		/// </summary>
		public Pulumi.IO<bool> Enabled { get; set; }

		/// <summary>
		/// Can the Function App only be accessed via HTTPS? Defaults to `false`.
		/// </summary>
		public Pulumi.IO<bool> HttpsOnly { get; set; }

		/// <summary>
		/// An `identity` block as defined below.
		/// </summary>
		public Pulumi.IO<FunctionAppIdentity> Identity { get; set; }

		/// <summary>
		/// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Location { get; set; }

		/// <summary>
		/// The name of the Connection String.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// A comma separated list of outbound IP addresses - such as `52.23.25.3,52.143.43.12`
		/// </summary>
		public Pulumi.IO<string> OutboundIpAddresses { get; set; }

		/// <summary>
		/// The name of the resource group in which to create the Function App.
		/// </summary>
		public Pulumi.IO<string> ResourceGroupName { get; set; }

		/// <summary>
		/// A `site_config` object as defined below.
		/// </summary>
		public Pulumi.IO<FunctionAppSiteConfig> SiteConfig { get; set; }

		/// <summary>
		/// A `site_credential` block as defined below, which contains the site-level credentials used to publish to this App Service.
		/// </summary>
		public Pulumi.IO<FunctionAppSiteCredential> SiteCredential { get; set; }

		/// <summary>
		/// The connection string of the backend storage account which will be used by this Function App (such as the dashboard, logs).
		/// </summary>
		public Pulumi.IO<string> StorageConnectionString { get; set; }

		/// <summary>
		/// A mapping of tags to assign to the resource.
		/// </summary>
		public Pulumi.IO<System.Collections.Generic.Dictionary<string, string>> Tags { get; set; }

		/// <summary>
		/// The runtime version associated with the Function App. Defaults to `~1`.
		/// </summary>
		public Pulumi.IO<string> Version { get; set; }

		public FunctionApp(string name, FunctionAppArgs args, Pulumi.ResourceOptions opts = default(Pulumi.ResourceOptions))
			: base("azure:appservice/functionApp:FunctionApp", name, SerialiseArgs(args), opts) {
			AppServicePlanId = base.Outputs["appServicePlanId"].Select(item => Protobuf.ToString(item));
			AppSettings = base.Outputs["appSettings"].Select(item => Protobuf.ToMap(item));
			ClientAffinityEnabled = base.Outputs["clientAffinityEnabled"].Select(item => Protobuf.ToBool(item));
			ConnectionStrings = base.Outputs["connectionStrings"].Select(item => Protobuf.ToList(item, item1 => FunctionAppConnectionString.FromProtobuf(item1)));
			DefaultHostname = base.Outputs["defaultHostname"].Select(item => Protobuf.ToString(item));
			EnableBuiltinLogging = base.Outputs["enableBuiltinLogging"].Select(item => Protobuf.ToBool(item));
			Enabled = base.Outputs["enabled"].Select(item => Protobuf.ToBool(item));
			HttpsOnly = base.Outputs["httpsOnly"].Select(item => Protobuf.ToBool(item));
			Identity = base.Outputs["identity"].Select(item => FunctionAppIdentity.FromProtobuf(item));
			Location = base.Outputs["location"].Select(item => Protobuf.ToString(item));
			Name = base.Outputs["name"].Select(item => Protobuf.ToString(item));
			OutboundIpAddresses = base.Outputs["outboundIpAddresses"].Select(item => Protobuf.ToString(item));
			ResourceGroupName = base.Outputs["resourceGroupName"].Select(item => Protobuf.ToString(item));
			SiteConfig = base.Outputs["siteConfig"].Select(item => FunctionAppSiteConfig.FromProtobuf(item));
			SiteCredential = base.Outputs["siteCredential"].Select(item => FunctionAppSiteCredential.FromProtobuf(item));
			StorageConnectionString = base.Outputs["storageConnectionString"].Select(item => Protobuf.ToString(item));
			Tags = base.Outputs["tags"].Select(item => Protobuf.ToMap(item));
			Version = base.Outputs["version"].Select(item => Protobuf.ToString(item));
		} // ctor

		private static Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>> SerialiseArgs(FunctionAppArgs args) {
			var props = new Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>();
			props["appServicePlanId"] = Protobuf.ToProtobuf(args.AppServicePlanId);
			props["appSettings"] = Protobuf.ToProtobuf(args.AppSettings);
			props["clientAffinityEnabled"] = Protobuf.ToProtobuf(args.ClientAffinityEnabled);
			props["connectionStrings"] = Protobuf.ToProtobuf(args.ConnectionStrings, item => Protobuf.ToProtobuf(item));
			props["enableBuiltinLogging"] = Protobuf.ToProtobuf(args.EnableBuiltinLogging);
			props["enabled"] = Protobuf.ToProtobuf(args.Enabled);
			props["httpsOnly"] = Protobuf.ToProtobuf(args.HttpsOnly);
			props["identity"] = Protobuf.ToProtobuf(args.Identity);
			props["location"] = Protobuf.ToProtobuf(args.Location);
			props["name"] = Protobuf.ToProtobuf(args.Name);
			props["resourceGroupName"] = Protobuf.ToProtobuf(args.ResourceGroupName);
			props["siteConfig"] = Protobuf.ToProtobuf(args.SiteConfig);
			props["storageConnectionString"] = Protobuf.ToProtobuf(args.StorageConnectionString);
			props["tags"] = Protobuf.ToProtobuf(args.Tags);
			props["version"] = Protobuf.ToProtobuf(args.Version);
			props["defaultHostname"] = null; //out
			props["outboundIpAddresses"] = null; //out
			props["siteCredential"] = null; //out
			return props;
		} // SerialiseArgs

	} // FunctionApp
} // Pulumi.Azure.Appservice
