// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Azure.Appservice {

	public sealed class PlanArgsProperty : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> AppServiceEnvironmentId { get; set; }
		public Pulumi.IO<bool> PerSiteScaling { get; set; }
		public Pulumi.IO<bool> Reserved { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("app_service_environment_id", Protobuf.ToProtobuf(AppServiceEnvironmentId)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("per_site_scaling", Protobuf.ToProtobuf(PerSiteScaling)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("reserved", Protobuf.ToProtobuf(Reserved)));
		} // ToProtobuf

	} // PlanArgsProperty

	public sealed class PlanArgsSku : Pulumi.IIOProtobuf {
		public Pulumi.IO<int> Capacity { get; set; }
		public Pulumi.IO<string> Size { get; set; }
		public Pulumi.IO<string> Tier { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("capacity", Protobuf.ToProtobuf(Capacity)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("size", Protobuf.ToProtobuf(Size)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("tier", Protobuf.ToProtobuf(Tier)));
		} // ToProtobuf

	} // PlanArgsSku

	public sealed class PlanProperty : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> AppServiceEnvironmentId { get; set; }
		public Pulumi.IO<bool> PerSiteScaling { get; set; }
		public Pulumi.IO<bool> Reserved { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("app_service_environment_id", Protobuf.ToProtobuf(AppServiceEnvironmentId)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("per_site_scaling", Protobuf.ToProtobuf(PerSiteScaling)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("reserved", Protobuf.ToProtobuf(Reserved)));
		} // ToProtobuf

		public static PlanProperty FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new PlanProperty();
				if (obj.Fields.ContainsKey("app_service_environment_id")) {
					result.AppServiceEnvironmentId = Protobuf.ToString(obj.Fields["app_service_environment_id"]);
				}
				if (obj.Fields.ContainsKey("per_site_scaling")) {
					result.PerSiteScaling = Protobuf.ToBool(obj.Fields["per_site_scaling"]);
				}
				if (obj.Fields.ContainsKey("reserved")) {
					result.Reserved = Protobuf.ToBool(obj.Fields["reserved"]);
				}
			return result;
		} // FromProtobuf

	} // PlanProperty

	public sealed class PlanSku : Pulumi.IIOProtobuf {
		public Pulumi.IO<int> Capacity { get; set; }
		public Pulumi.IO<string> Size { get; set; }
		public Pulumi.IO<string> Tier { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("capacity", Protobuf.ToProtobuf(Capacity)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("size", Protobuf.ToProtobuf(Size)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("tier", Protobuf.ToProtobuf(Tier)));
		} // ToProtobuf

		public static PlanSku FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new PlanSku();
				if (obj.Fields.ContainsKey("capacity")) {
					result.Capacity = Protobuf.ToInt(obj.Fields["capacity"]);
				}
				if (obj.Fields.ContainsKey("size")) {
					result.Size = Protobuf.ToString(obj.Fields["size"]);
				}
				if (obj.Fields.ContainsKey("tier")) {
					result.Tier = Protobuf.ToString(obj.Fields["tier"]);
				}
			return result;
		} // FromProtobuf

	} // PlanSku

	/// <summary>
	/// The set of arguments for constructing a Plan resource.
	/// </summary>
	public struct PlanArgs {
		/// <summary>
		/// The ID of the App Service Environment where the App Service Plan should be located. Changing forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> AppServiceEnvironmentId { get; set; }

		/// <summary>
		/// The kind of the App Service Plan to create. Possible values are `Windows` (also available as `App`), `Linux` and `FunctionApp` (for a Consumption Plan). Defaults to `Windows`. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Kind { get; set; }

		/// <summary>
		/// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Location { get; set; }

		/// <summary>
		/// Specifies the name of the App Service Plan component. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// Can Apps assigned to this App Service Plan be scaled independently? If set to `false` apps assigned to this plan will scale to all instances of the plan.  Defaults to `false`.
		/// </summary>
		public Pulumi.IO<bool> PerSiteScaling { get; set; }

		public Pulumi.IO<PlanArgsProperty> Properties { get; set; }

		/// <summary>
		/// Is this App Service Plan `Reserved`. Defaults to `false`.
		/// </summary>
		public Pulumi.IO<bool> Reserved { get; set; }

		/// <summary>
		/// The name of the resource group in which to create the App Service Plan component.
		/// </summary>
		public Pulumi.IO<string> ResourceGroupName { get; set; }

		/// <summary>
		/// A `sku` block as documented below.
		/// </summary>
		public Pulumi.IO<PlanArgsSku> Sku { get; set; }

		/// <summary>
		/// A mapping of tags to assign to the resource.
		/// </summary>
		public Pulumi.IO<System.Collections.Generic.Dictionary<string, string>> Tags { get; set; }

	} // PlanArgs

	/// <summary>
	/// Manage an App Service Plan component.
	/// </summary>
	public class Plan : Pulumi.CustomResource {
		/// <summary>
		/// The ID of the App Service Environment where the App Service Plan should be located. Changing forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> AppServiceEnvironmentId { get; set; }

		/// <summary>
		/// The kind of the App Service Plan to create. Possible values are `Windows` (also available as `App`), `Linux` and `FunctionApp` (for a Consumption Plan). Defaults to `Windows`. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Kind { get; set; }

		/// <summary>
		/// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Location { get; set; }

		/// <summary>
		/// The maximum number of workers supported with the App Service Plan's sku.
		/// </summary>
		public Pulumi.IO<int> MaximumNumberOfWorkers { get; set; }

		/// <summary>
		/// Specifies the name of the App Service Plan component. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// Can Apps assigned to this App Service Plan be scaled independently? If set to `false` apps assigned to this plan will scale to all instances of the plan.  Defaults to `false`.
		/// </summary>
		public Pulumi.IO<bool> PerSiteScaling { get; set; }

		public Pulumi.IO<PlanProperty> Properties { get; set; }

		/// <summary>
		/// Is this App Service Plan `Reserved`. Defaults to `false`.
		/// </summary>
		public Pulumi.IO<bool> Reserved { get; set; }

		/// <summary>
		/// The name of the resource group in which to create the App Service Plan component.
		/// </summary>
		public Pulumi.IO<string> ResourceGroupName { get; set; }

		/// <summary>
		/// A `sku` block as documented below.
		/// </summary>
		public Pulumi.IO<PlanSku> Sku { get; set; }

		/// <summary>
		/// A mapping of tags to assign to the resource.
		/// </summary>
		public Pulumi.IO<System.Collections.Generic.Dictionary<string, string>> Tags { get; set; }

		public Plan(string name, PlanArgs args, Pulumi.ResourceOptions opts = default(Pulumi.ResourceOptions))
			: base("azure:appservice/plan:Plan", name, SerialiseArgs(args), opts) {
			AppServiceEnvironmentId = base.Outputs["appServiceEnvironmentId"].Select(item => Protobuf.ToString(item));
			Kind = base.Outputs["kind"].Select(item => Protobuf.ToString(item));
			Location = base.Outputs["location"].Select(item => Protobuf.ToString(item));
			MaximumNumberOfWorkers = base.Outputs["maximumNumberOfWorkers"].Select(item => Protobuf.ToInt(item));
			Name = base.Outputs["name"].Select(item => Protobuf.ToString(item));
			PerSiteScaling = base.Outputs["perSiteScaling"].Select(item => Protobuf.ToBool(item));
			Properties = base.Outputs["properties"].Select(item => PlanProperty.FromProtobuf(item));
			Reserved = base.Outputs["reserved"].Select(item => Protobuf.ToBool(item));
			ResourceGroupName = base.Outputs["resourceGroupName"].Select(item => Protobuf.ToString(item));
			Sku = base.Outputs["sku"].Select(item => PlanSku.FromProtobuf(item));
			Tags = base.Outputs["tags"].Select(item => Protobuf.ToMap(item));
		} // ctor

		private static Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>> SerialiseArgs(PlanArgs args) {
			var props = new Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>();
			props["appServiceEnvironmentId"] = Protobuf.ToProtobuf(args.AppServiceEnvironmentId);
			props["kind"] = Protobuf.ToProtobuf(args.Kind);
			props["location"] = Protobuf.ToProtobuf(args.Location);
			props["name"] = Protobuf.ToProtobuf(args.Name);
			props["perSiteScaling"] = Protobuf.ToProtobuf(args.PerSiteScaling);
			props["properties"] = Protobuf.ToProtobuf(args.Properties);
			props["reserved"] = Protobuf.ToProtobuf(args.Reserved);
			props["resourceGroupName"] = Protobuf.ToProtobuf(args.ResourceGroupName);
			props["sku"] = Protobuf.ToProtobuf(args.Sku);
			props["tags"] = Protobuf.ToProtobuf(args.Tags);
			props["maximumNumberOfWorkers"] = null; //out
			return props;
		} // SerialiseArgs

	} // Plan
} // Pulumi.Azure.Appservice
