// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Azure.Appinsights {

	/// <summary>
	/// The set of arguments for constructing a Insights resource.
	/// </summary>
	public struct InsightsArgs {
		/// <summary>
		/// Specifies the type of Application Insights to create. Valid values are `Java`, `iOS`, `MobileCenter`, `Other`, `Phone`, `Store`, `Web` and `Node.JS`.
		/// </summary>
		public Pulumi.IO<string> ApplicationType { get; set; }

		/// <summary>
		/// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Location { get; set; }

		/// <summary>
		/// Specifies the name of the Application Insights component. Changing this forces a
		/// new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// The name of the resource group in which to
		/// create the Application Insights component.
		/// </summary>
		public Pulumi.IO<string> ResourceGroupName { get; set; }

		/// <summary>
		/// A mapping of tags to assign to the resource.
		/// </summary>
		public Pulumi.IO<System.Collections.Generic.Dictionary<string, string>> Tags { get; set; }

	} // InsightsArgs

	/// <summary>
	/// Manage an Application Insights component.
	/// </summary>
	public class Insights : Pulumi.CustomResource {
		/// <summary>
		/// The App ID associated with this Application Insights component.
		/// </summary>
		public Pulumi.IO<string> AppId { get; set; }

		/// <summary>
		/// Specifies the type of Application Insights to create. Valid values are `Java`, `iOS`, `MobileCenter`, `Other`, `Phone`, `Store`, `Web` and `Node.JS`.
		/// </summary>
		public Pulumi.IO<string> ApplicationType { get; set; }

		/// <summary>
		/// The Instrumentation Key for this Application Insights component.
		/// </summary>
		public Pulumi.IO<string> InstrumentationKey { get; set; }

		/// <summary>
		/// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Location { get; set; }

		/// <summary>
		/// Specifies the name of the Application Insights component. Changing this forces a
		/// new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// The name of the resource group in which to
		/// create the Application Insights component.
		/// </summary>
		public Pulumi.IO<string> ResourceGroupName { get; set; }

		/// <summary>
		/// A mapping of tags to assign to the resource.
		/// </summary>
		public Pulumi.IO<System.Collections.Generic.Dictionary<string, string>> Tags { get; set; }

		public Insights(string name, InsightsArgs args, Pulumi.ResourceOptions opts = default(Pulumi.ResourceOptions))
			: base("azure:appinsights/insights:Insights", name, SerialiseArgs(args), opts) {
			AppId = base.Outputs["appId"].Select(item => Protobuf.ToString(item));
			ApplicationType = base.Outputs["applicationType"].Select(item => Protobuf.ToString(item));
			InstrumentationKey = base.Outputs["instrumentationKey"].Select(item => Protobuf.ToString(item));
			Location = base.Outputs["location"].Select(item => Protobuf.ToString(item));
			Name = base.Outputs["name"].Select(item => Protobuf.ToString(item));
			ResourceGroupName = base.Outputs["resourceGroupName"].Select(item => Protobuf.ToString(item));
			Tags = base.Outputs["tags"].Select(item => Protobuf.ToMap(item));
		} // ctor

		private static Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>> SerialiseArgs(InsightsArgs args) {
			var props = new Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>();
			props["applicationType"] = Protobuf.ToProtobuf(args.ApplicationType);
			props["location"] = Protobuf.ToProtobuf(args.Location);
			props["name"] = Protobuf.ToProtobuf(args.Name);
			props["resourceGroupName"] = Protobuf.ToProtobuf(args.ResourceGroupName);
			props["tags"] = Protobuf.ToProtobuf(args.Tags);
			props["appId"] = null; //out
			props["instrumentationKey"] = null; //out
			return props;
		} // SerialiseArgs

	} // Insights
} // Pulumi.Azure.Appinsights
