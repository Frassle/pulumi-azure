// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Azure.Trafficmanager {

	/// <summary>
	/// A collection of arguments for invoking getGeographicalLocation.
	/// </summary>
	public struct GetGeographicalLocationArgs {
		/// <summary>
		/// Specifies the name of the Location, for example `World`, `Europe` or `Germany`.
		/// </summary>
		public string Name { get; set; }

	} // GetGeographicalLocationArgs

	/// <summary>
	/// A collection of values returned by getGeographicalLocation.
	/// </summary>
	public struct GetGeographicalLocationResult {
		/// <summary>
		/// id is the provider-assigned unique ID for this managed resource.
		/// </summary>
		public string Id { get; set; }

	} // GetGeographicalLocationResult

	public static partial class TrafficmanagerModule {
		/// <summary>
		/// Use this data source to access the ID of a specified Traffic Manager Geographical Location within the Geographical Hierarchy.
		/// </summary>
		public static System.Threading.Tasks.Task<GetGeographicalLocationResult> GetGeographicalLocation(GetGeographicalLocationArgs args, Pulumi.InvokeOptions opts = default(Pulumi.InvokeOptions)) {
			var invokeArgs = new Google.Protobuf.WellKnownTypes.Struct();
			invokeArgs.Fields["name"] = Protobuf.ToProtobuf(args.Name);

			var task = Pulumi.Runtime.InvokeAsync("azure:trafficmanager/getGeographicalLocation:getGeographicalLocation", invokeArgs, opts);

			return task.ContinueWith(response => {
				var protobuf = response.Result;
				var result = new GetGeographicalLocationResult();
				if (protobuf.Fields.ContainsKey("id")) {
					result.Id = Protobuf.ToString(protobuf.Fields["id"]);
				}
				return result;
			});
		} // GetGeographicalLocation

	} // TrafficmanagerModule
} // Pulumi.Azure.Trafficmanager
