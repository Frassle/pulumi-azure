// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Azure.Managementresource {

	/// <summary>
	/// The set of arguments for constructing a ManangementLock resource.
	/// </summary>
	public struct ManangementLockArgs {
		/// <summary>
		/// Specifies the Level to be used for this Lock. Possible values are `CanNotDelete` and `ReadOnly`. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> LockLevel { get; set; }

		/// <summary>
		/// Specifies the name of the Management Lock. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// Specifies some notes about the lock. Maximum of 512 characters. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Notes { get; set; }

		/// <summary>
		/// Specifies the scope at which the Management Lock should be created. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Scope { get; set; }

	} // ManangementLockArgs

	/// <summary>
	/// Manages a Management Lock which is scoped to a Subscription, Resource Group or Resource.
	/// </summary>
	public class ManangementLock : Pulumi.CustomResource {
		/// <summary>
		/// Specifies the Level to be used for this Lock. Possible values are `CanNotDelete` and `ReadOnly`. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> LockLevel { get; set; }

		/// <summary>
		/// Specifies the name of the Management Lock. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// Specifies some notes about the lock. Maximum of 512 characters. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Notes { get; set; }

		/// <summary>
		/// Specifies the scope at which the Management Lock should be created. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Scope { get; set; }

		public ManangementLock(string name, ManangementLockArgs args, Pulumi.ResourceOptions opts = default(Pulumi.ResourceOptions))
			: base("azure:managementresource/manangementLock:ManangementLock", name, SerialiseArgs(args), opts) {
			LockLevel = base.Outputs["lockLevel"].Select(item => Protobuf.ToString(item));
			Name = base.Outputs["name"].Select(item => Protobuf.ToString(item));
			Notes = base.Outputs["notes"].Select(item => Protobuf.ToString(item));
			Scope = base.Outputs["scope"].Select(item => Protobuf.ToString(item));
		} // ctor

		private static Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>> SerialiseArgs(ManangementLockArgs args) {
			var props = new Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>();
			props["lockLevel"] = Protobuf.ToProtobuf(args.LockLevel);
			props["name"] = Protobuf.ToProtobuf(args.Name);
			props["notes"] = Protobuf.ToProtobuf(args.Notes);
			props["scope"] = Protobuf.ToProtobuf(args.Scope);
			return props;
		} // SerialiseArgs

	} // ManangementLock
} // Pulumi.Azure.Managementresource
