// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Azure.Dns {

	public sealed class NsRecordArgsRecord : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> Nsdname { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("nsdname", Protobuf.ToProtobuf(Nsdname)));
		} // ToProtobuf

	} // NsRecordArgsRecord

	public sealed class NsRecordRecord : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> Nsdname { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("nsdname", Protobuf.ToProtobuf(Nsdname)));
		} // ToProtobuf

		public static NsRecordRecord FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new NsRecordRecord();
				if (obj.Fields.ContainsKey("nsdname")) {
					result.Nsdname = Protobuf.ToString(obj.Fields["nsdname"]);
				}
			return result;
		} // FromProtobuf

	} // NsRecordRecord

	/// <summary>
	/// The set of arguments for constructing a NsRecord resource.
	/// </summary>
	public struct NsRecordArgs {
		/// <summary>
		/// The name of the DNS NS Record.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// A list of values that make up the NS record. Each `record` block supports fields documented below. This field has been deprecated and will be removed in a future release.
		/// </summary>
		public Pulumi.IO<Pulumi.IO<NsRecordArgsRecord>[]> Record { get; set; }

		/// <summary>
		/// A list of values that make up the NS record. *WARNING*: Either `records` or `record` is required.
		/// </summary>
		public Pulumi.IO<Pulumi.IO<string>[]> Records { get; set; }

		/// <summary>
		/// Specifies the resource group where the resource exists. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ResourceGroupName { get; set; }

		/// <summary>
		/// A mapping of tags to assign to the resource.
		/// </summary>
		public Pulumi.IO<System.Collections.Generic.Dictionary<string, string>> Tags { get; set; }

		/// <summary>
		/// The Time To Live (TTL) of the DNS record in seconds.
		/// </summary>
		public Pulumi.IO<int> Ttl { get; set; }

		/// <summary>
		/// Specifies the DNS Zone where the resource exists. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ZoneName { get; set; }

	} // NsRecordArgs

	/// <summary>
	/// Enables you to manage DNS NS Records within Azure DNS.
	/// </summary>
	public class NsRecord : Pulumi.CustomResource {
		/// <summary>
		/// The name of the DNS NS Record.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// A list of values that make up the NS record. Each `record` block supports fields documented below. This field has been deprecated and will be removed in a future release.
		/// </summary>
		public Pulumi.IO<NsRecordRecord[]> Record { get; set; }

		/// <summary>
		/// A list of values that make up the NS record. *WARNING*: Either `records` or `record` is required.
		/// </summary>
		public Pulumi.IO<string[]> Records { get; set; }

		/// <summary>
		/// Specifies the resource group where the resource exists. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ResourceGroupName { get; set; }

		/// <summary>
		/// A mapping of tags to assign to the resource.
		/// </summary>
		public Pulumi.IO<System.Collections.Generic.Dictionary<string, string>> Tags { get; set; }

		/// <summary>
		/// The Time To Live (TTL) of the DNS record in seconds.
		/// </summary>
		public Pulumi.IO<int> Ttl { get; set; }

		/// <summary>
		/// Specifies the DNS Zone where the resource exists. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ZoneName { get; set; }

		public NsRecord(string name, NsRecordArgs args, Pulumi.ResourceOptions opts = default(Pulumi.ResourceOptions))
			: base("azure:dns/nsRecord:NsRecord", name, SerialiseArgs(args), opts) {
			Name = base.Outputs["name"].Select(item => Protobuf.ToString(item));
			Record = base.Outputs["record"].Select(item => Protobuf.ToList(item, item1 => NsRecordRecord.FromProtobuf(item1)));
			Records = base.Outputs["records"].Select(item => Protobuf.ToList(item, item1 => Protobuf.ToString(item1)));
			ResourceGroupName = base.Outputs["resourceGroupName"].Select(item => Protobuf.ToString(item));
			Tags = base.Outputs["tags"].Select(item => Protobuf.ToMap(item));
			Ttl = base.Outputs["ttl"].Select(item => Protobuf.ToInt(item));
			ZoneName = base.Outputs["zoneName"].Select(item => Protobuf.ToString(item));
		} // ctor

		private static Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>> SerialiseArgs(NsRecordArgs args) {
			var props = new Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>();
			props["name"] = Protobuf.ToProtobuf(args.Name);
			props["record"] = Protobuf.ToProtobuf(args.Record, item => Protobuf.ToProtobuf(item));
			props["records"] = Protobuf.ToProtobuf(args.Records, item => Protobuf.ToProtobuf(item));
			props["resourceGroupName"] = Protobuf.ToProtobuf(args.ResourceGroupName);
			props["tags"] = Protobuf.ToProtobuf(args.Tags);
			props["ttl"] = Protobuf.ToProtobuf(args.Ttl);
			props["zoneName"] = Protobuf.ToProtobuf(args.ZoneName);
			return props;
		} // SerialiseArgs

	} // NsRecord
} // Pulumi.Azure.Dns
