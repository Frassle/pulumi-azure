// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Azure.Dns {

	/// <summary>
	/// A collection of arguments for invoking getZone.
	/// </summary>
	public struct GetZoneArgs {
		/// <summary>
		/// The name of the DNS Zone.
		/// </summary>
		public string Name { get; set; }

		/// <summary>
		/// The Name of the Resource Group where the DNS Zone exists.
		/// If the Name of the Resource Group is not provided, the first DNS Zone from the list of DNS Zones
		/// in your subscription that matches `name` will be returned.
		/// </summary>
		public string ResourceGroupName { get; set; }

	} // GetZoneArgs

	/// <summary>
	/// A collection of values returned by getZone.
	/// </summary>
	public struct GetZoneResult {
		/// <summary>
		/// Maximum number of Records in the zone.
		/// </summary>
		public int MaxNumberOfRecordSets { get; set; }

		/// <summary>
		/// A list of values that make up the NS record for the zone.
		/// </summary>
		public string[] NameServers { get; set; }

		/// <summary>
		/// The number of records already in the zone.
		/// </summary>
		public int NumberOfRecordSets { get; set; }

		/// <summary>
		/// A list of Virtual Network ID's that register hostnames in this DNS zone.
		/// </summary>
		public string[] RegistrationVirtualNetworkIds { get; set; }

		/// <summary>
		/// A list of Virtual Network ID's that resolve records in this DNS zone.
		/// </summary>
		public string[] ResolutionVirtualNetworkIds { get; set; }

		public string ResourceGroupName { get; set; }

		/// <summary>
		/// A mapping of tags to assign to the EventHub Namespace.
		/// </summary>
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }

		/// <summary>
		/// The type of this DNS zone, such as `Public` or `Private`.
		/// </summary>
		public string ZoneType { get; set; }

		/// <summary>
		/// id is the provider-assigned unique ID for this managed resource.
		/// </summary>
		public string Id { get; set; }

	} // GetZoneResult

	public static partial class DnsModule {
		/// <summary>
		/// Use this data source to access information about an existing DNS Zone.
		/// </summary>
		public static System.Threading.Tasks.Task<GetZoneResult> GetZone(GetZoneArgs args, Pulumi.InvokeOptions opts = default(Pulumi.InvokeOptions)) {
			var invokeArgs = new Google.Protobuf.WellKnownTypes.Struct();
			invokeArgs.Fields["name"] = Protobuf.ToProtobuf(args.Name);
			invokeArgs.Fields["resourceGroupName"] = Protobuf.ToProtobuf(args.ResourceGroupName);

			var task = Pulumi.Runtime.InvokeAsync("azure:dns/getZone:getZone", invokeArgs, opts);

			return task.ContinueWith(response => {
				var protobuf = response.Result;
				var result = new GetZoneResult();
				if (protobuf.Fields.ContainsKey("maxNumberOfRecordSets")) {
					result.MaxNumberOfRecordSets = Protobuf.ToInt(protobuf.Fields["maxNumberOfRecordSets"]);
				}
				if (protobuf.Fields.ContainsKey("nameServers")) {
					result.NameServers = Protobuf.ToList(protobuf.Fields["nameServers"], item => Protobuf.ToString(item));
				}
				if (protobuf.Fields.ContainsKey("numberOfRecordSets")) {
					result.NumberOfRecordSets = Protobuf.ToInt(protobuf.Fields["numberOfRecordSets"]);
				}
				if (protobuf.Fields.ContainsKey("registrationVirtualNetworkIds")) {
					result.RegistrationVirtualNetworkIds = Protobuf.ToList(protobuf.Fields["registrationVirtualNetworkIds"], item => Protobuf.ToString(item));
				}
				if (protobuf.Fields.ContainsKey("resolutionVirtualNetworkIds")) {
					result.ResolutionVirtualNetworkIds = Protobuf.ToList(protobuf.Fields["resolutionVirtualNetworkIds"], item => Protobuf.ToString(item));
				}
				if (protobuf.Fields.ContainsKey("resourceGroupName")) {
					result.ResourceGroupName = Protobuf.ToString(protobuf.Fields["resourceGroupName"]);
				}
				if (protobuf.Fields.ContainsKey("tags")) {
					result.Tags = Protobuf.ToMap(protobuf.Fields["tags"]);
				}
				if (protobuf.Fields.ContainsKey("zoneType")) {
					result.ZoneType = Protobuf.ToString(protobuf.Fields["zoneType"]);
				}
				if (protobuf.Fields.ContainsKey("id")) {
					result.Id = Protobuf.ToString(protobuf.Fields["id"]);
				}
				return result;
			});
		} // GetZone

	} // DnsModule
} // Pulumi.Azure.Dns
