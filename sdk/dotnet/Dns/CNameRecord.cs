// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Azure.Dns {

	/// <summary>
	/// The set of arguments for constructing a CNameRecord resource.
	/// </summary>
	public struct CNameRecordArgs {
		/// <summary>
		/// The name of the DNS CNAME Record.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// The target of the CNAME.
		/// </summary>
		public Pulumi.IO<string> Record { get; set; }

		/// <summary>
		/// Specifies the resource group where the resource exists. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ResourceGroupName { get; set; }

		/// <summary>
		/// A mapping of tags to assign to the resource.
		/// </summary>
		public Pulumi.IO<System.Collections.Generic.Dictionary<string, string>> Tags { get; set; }

		public Pulumi.IO<int> Ttl { get; set; }

		/// <summary>
		/// Specifies the DNS Zone where the resource exists. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ZoneName { get; set; }

	} // CNameRecordArgs

	/// <summary>
	/// Enables you to manage DNS CNAME Records within Azure DNS.
	/// </summary>
	public class CNameRecord : Pulumi.CustomResource {
		/// <summary>
		/// The name of the DNS CNAME Record.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// The target of the CNAME.
		/// </summary>
		public Pulumi.IO<string> Record { get; set; }

		/// <summary>
		/// Specifies the resource group where the resource exists. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ResourceGroupName { get; set; }

		/// <summary>
		/// A mapping of tags to assign to the resource.
		/// </summary>
		public Pulumi.IO<System.Collections.Generic.Dictionary<string, string>> Tags { get; set; }

		public Pulumi.IO<int> Ttl { get; set; }

		/// <summary>
		/// Specifies the DNS Zone where the resource exists. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ZoneName { get; set; }

		public CNameRecord(string name, CNameRecordArgs args, Pulumi.ResourceOptions opts = default(Pulumi.ResourceOptions))
			: base("azure:dns/cNameRecord:CNameRecord", name, SerialiseArgs(args), opts) {
			Name = base.Outputs["name"].Select(item => Protobuf.ToString(item));
			Record = base.Outputs["record"].Select(item => Protobuf.ToString(item));
			ResourceGroupName = base.Outputs["resourceGroupName"].Select(item => Protobuf.ToString(item));
			Tags = base.Outputs["tags"].Select(item => Protobuf.ToMap(item));
			Ttl = base.Outputs["ttl"].Select(item => Protobuf.ToInt(item));
			ZoneName = base.Outputs["zoneName"].Select(item => Protobuf.ToString(item));
		} // ctor

		private static Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>> SerialiseArgs(CNameRecordArgs args) {
			var props = new Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>();
			props["name"] = Protobuf.ToProtobuf(args.Name);
			props["record"] = Protobuf.ToProtobuf(args.Record);
			props["resourceGroupName"] = Protobuf.ToProtobuf(args.ResourceGroupName);
			props["tags"] = Protobuf.ToProtobuf(args.Tags);
			props["ttl"] = Protobuf.ToProtobuf(args.Ttl);
			props["zoneName"] = Protobuf.ToProtobuf(args.ZoneName);
			return props;
		} // SerialiseArgs

	} // CNameRecord
} // Pulumi.Azure.Dns
