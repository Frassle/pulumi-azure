// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Azure.Network {

	public sealed class GetPublicIPsPublicIp : Pulumi.IProtobuf {
		public string DomainNameLabel { get; set; }
		public string Fqdn { get; set; }
		public string Id { get; set; }
		public string IpAddress { get; set; }
		public string Name { get; set; }

		public Google.Protobuf.WellKnownTypes.Value ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("domain_name_label", Protobuf.ToProtobuf(DomainNameLabel)),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("fqdn", Protobuf.ToProtobuf(Fqdn)),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("id", Protobuf.ToProtobuf(Id)),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("ip_address", Protobuf.ToProtobuf(IpAddress)),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("name", Protobuf.ToProtobuf(Name)));
		} // ToProtobuf

		public static GetPublicIPsPublicIp FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new GetPublicIPsPublicIp();
				if (obj.Fields.ContainsKey("domain_name_label")) {
					result.DomainNameLabel = Protobuf.ToString(obj.Fields["domain_name_label"]);
				}
				if (obj.Fields.ContainsKey("fqdn")) {
					result.Fqdn = Protobuf.ToString(obj.Fields["fqdn"]);
				}
				if (obj.Fields.ContainsKey("id")) {
					result.Id = Protobuf.ToString(obj.Fields["id"]);
				}
				if (obj.Fields.ContainsKey("ip_address")) {
					result.IpAddress = Protobuf.ToString(obj.Fields["ip_address"]);
				}
				if (obj.Fields.ContainsKey("name")) {
					result.Name = Protobuf.ToString(obj.Fields["name"]);
				}
			return result;
		} // FromProtobuf

	} // GetPublicIPsPublicIp

	/// <summary>
	/// A collection of arguments for invoking getPublicIPs.
	/// </summary>
	public struct GetPublicIPsArgs {
		/// <summary>
		/// The Allocation Type for the Public IP Address. Possible values include `Static` or `Dynamic`.
		/// </summary>
		public string AllocationType { get; set; }

		/// <summary>
		/// Filter to include IP Addresses which are attached to a device, such as a VM/LB (`true`) or unattached (`false`).
		/// </summary>
		public bool Attached { get; set; }

		/// <summary>
		/// A prefix match used for the IP Addresses `name` field, case sensitive.
		/// </summary>
		public string NamePrefix { get; set; }

		/// <summary>
		/// Specifies the name of the resource group.
		/// </summary>
		public string ResourceGroupName { get; set; }

	} // GetPublicIPsArgs

	/// <summary>
	/// A collection of values returned by getPublicIPs.
	/// </summary>
	public struct GetPublicIPsResult {
		/// <summary>
		/// A List of `public_ips` blocks as defined below filtered by the criteria above.
		/// </summary>
		public GetPublicIPsPublicIp[] PublicIps { get; set; }

		/// <summary>
		/// id is the provider-assigned unique ID for this managed resource.
		/// </summary>
		public string Id { get; set; }

	} // GetPublicIPsResult

	public static partial class NetworkModule {
		/// <summary>
		/// Use this data source to access information about a set of existing Public IP Addresses.
		/// </summary>
		public static System.Threading.Tasks.Task<GetPublicIPsResult> GetPublicIPs(GetPublicIPsArgs args, Pulumi.InvokeOptions opts = default(Pulumi.InvokeOptions)) {
			var invokeArgs = new Google.Protobuf.WellKnownTypes.Struct();
			invokeArgs.Fields["allocationType"] = Protobuf.ToProtobuf(args.AllocationType);
			invokeArgs.Fields["attached"] = Protobuf.ToProtobuf(args.Attached);
			invokeArgs.Fields["namePrefix"] = Protobuf.ToProtobuf(args.NamePrefix);
			invokeArgs.Fields["resourceGroupName"] = Protobuf.ToProtobuf(args.ResourceGroupName);

			var task = Pulumi.Runtime.InvokeAsync("azure:network/getPublicIPs:getPublicIPs", invokeArgs, opts);

			return task.ContinueWith(response => {
				var protobuf = response.Result;
				var result = new GetPublicIPsResult();
				if (protobuf.Fields.ContainsKey("publicIps")) {
					result.PublicIps = Protobuf.ToList(protobuf.Fields["publicIps"], item => GetPublicIPsPublicIp.FromProtobuf(item));
				}
				if (protobuf.Fields.ContainsKey("id")) {
					result.Id = Protobuf.ToString(protobuf.Fields["id"]);
				}
				return result;
			});
		} // GetPublicIPs

	} // NetworkModule
} // Pulumi.Azure.Network
