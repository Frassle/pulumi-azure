// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Azure.Network {

	public sealed class VirtualNetworkGatewayArgsBgpSetting : Pulumi.IIOProtobuf {
		public Pulumi.IO<int> Asn { get; set; }
		public Pulumi.IO<int> PeerWeight { get; set; }
		public Pulumi.IO<string> PeeringAddress { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("asn", Protobuf.ToProtobuf(Asn)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("peer_weight", Protobuf.ToProtobuf(PeerWeight)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("peering_address", Protobuf.ToProtobuf(PeeringAddress)));
		} // ToProtobuf

	} // VirtualNetworkGatewayArgsBgpSetting

	public sealed class VirtualNetworkGatewayArgsIpConfiguration : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> Name { get; set; }
		public Pulumi.IO<string> PrivateIpAddressAllocation { get; set; }
		public Pulumi.IO<string> PublicIpAddressId { get; set; }
		public Pulumi.IO<string> SubnetId { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("name", Protobuf.ToProtobuf(Name)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("private_ip_address_allocation", Protobuf.ToProtobuf(PrivateIpAddressAllocation)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("public_ip_address_id", Protobuf.ToProtobuf(PublicIpAddressId)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("subnet_id", Protobuf.ToProtobuf(SubnetId)));
		} // ToProtobuf

	} // VirtualNetworkGatewayArgsIpConfiguration

	public sealed class VirtualNetworkGatewayArgsVpnClientConfigurationArgsRevokedCertificate : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> Name { get; set; }
		public Pulumi.IO<string> Thumbprint { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("name", Protobuf.ToProtobuf(Name)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("thumbprint", Protobuf.ToProtobuf(Thumbprint)));
		} // ToProtobuf

	} // VirtualNetworkGatewayArgsVpnClientConfigurationArgsRevokedCertificate

	public sealed class VirtualNetworkGatewayArgsVpnClientConfigurationArgsRootCertificate : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> Name { get; set; }
		public Pulumi.IO<string> PublicCertData { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("name", Protobuf.ToProtobuf(Name)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("public_cert_data", Protobuf.ToProtobuf(PublicCertData)));
		} // ToProtobuf

	} // VirtualNetworkGatewayArgsVpnClientConfigurationArgsRootCertificate

	public sealed class VirtualNetworkGatewayArgsVpnClientConfiguration : Pulumi.IIOProtobuf {
		public Pulumi.IO<Pulumi.IO<string>[]> AddressSpace { get; set; }
		public Pulumi.IO<string> RadiusServerAddress { get; set; }
		public Pulumi.IO<string> RadiusServerSecret { get; set; }
		public Pulumi.IO<Pulumi.IO<VirtualNetworkGatewayArgsVpnClientConfigurationArgsRevokedCertificate>[]> RevokedCertificate { get; set; }
		public Pulumi.IO<Pulumi.IO<VirtualNetworkGatewayArgsVpnClientConfigurationArgsRootCertificate>[]> RootCertificate { get; set; }
		public Pulumi.IO<Pulumi.IO<string>[]> VpnClientProtocols { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("address_space", Protobuf.ToProtobuf(AddressSpace, item => Protobuf.ToProtobuf(item))),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("radius_server_address", Protobuf.ToProtobuf(RadiusServerAddress)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("radius_server_secret", Protobuf.ToProtobuf(RadiusServerSecret)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("revoked_certificate", Protobuf.ToProtobuf(RevokedCertificate, item => Protobuf.ToProtobuf(item))),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("root_certificate", Protobuf.ToProtobuf(RootCertificate, item => Protobuf.ToProtobuf(item))),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("vpn_client_protocols", Protobuf.ToProtobuf(VpnClientProtocols, item => Protobuf.ToProtobuf(item))));
		} // ToProtobuf

	} // VirtualNetworkGatewayArgsVpnClientConfiguration

	public sealed class VirtualNetworkGatewayBgpSetting : Pulumi.IIOProtobuf {
		public Pulumi.IO<int> Asn { get; set; }
		public Pulumi.IO<int> PeerWeight { get; set; }
		public Pulumi.IO<string> PeeringAddress { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("asn", Protobuf.ToProtobuf(Asn)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("peer_weight", Protobuf.ToProtobuf(PeerWeight)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("peering_address", Protobuf.ToProtobuf(PeeringAddress)));
		} // ToProtobuf

		public static VirtualNetworkGatewayBgpSetting FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new VirtualNetworkGatewayBgpSetting();
				if (obj.Fields.ContainsKey("asn")) {
					result.Asn = Protobuf.ToInt(obj.Fields["asn"]);
				}
				if (obj.Fields.ContainsKey("peer_weight")) {
					result.PeerWeight = Protobuf.ToInt(obj.Fields["peer_weight"]);
				}
				if (obj.Fields.ContainsKey("peering_address")) {
					result.PeeringAddress = Protobuf.ToString(obj.Fields["peering_address"]);
				}
			return result;
		} // FromProtobuf

	} // VirtualNetworkGatewayBgpSetting

	public sealed class VirtualNetworkGatewayIpConfiguration : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> Name { get; set; }
		public Pulumi.IO<string> PrivateIpAddressAllocation { get; set; }
		public Pulumi.IO<string> PublicIpAddressId { get; set; }
		public Pulumi.IO<string> SubnetId { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("name", Protobuf.ToProtobuf(Name)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("private_ip_address_allocation", Protobuf.ToProtobuf(PrivateIpAddressAllocation)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("public_ip_address_id", Protobuf.ToProtobuf(PublicIpAddressId)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("subnet_id", Protobuf.ToProtobuf(SubnetId)));
		} // ToProtobuf

		public static VirtualNetworkGatewayIpConfiguration FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new VirtualNetworkGatewayIpConfiguration();
				if (obj.Fields.ContainsKey("name")) {
					result.Name = Protobuf.ToString(obj.Fields["name"]);
				}
				if (obj.Fields.ContainsKey("private_ip_address_allocation")) {
					result.PrivateIpAddressAllocation = Protobuf.ToString(obj.Fields["private_ip_address_allocation"]);
				}
				if (obj.Fields.ContainsKey("public_ip_address_id")) {
					result.PublicIpAddressId = Protobuf.ToString(obj.Fields["public_ip_address_id"]);
				}
				if (obj.Fields.ContainsKey("subnet_id")) {
					result.SubnetId = Protobuf.ToString(obj.Fields["subnet_id"]);
				}
			return result;
		} // FromProtobuf

	} // VirtualNetworkGatewayIpConfiguration

	public sealed class VirtualNetworkGatewayVpnClientConfigurationRevokedCertificate : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> Name { get; set; }
		public Pulumi.IO<string> Thumbprint { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("name", Protobuf.ToProtobuf(Name)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("thumbprint", Protobuf.ToProtobuf(Thumbprint)));
		} // ToProtobuf

		public static VirtualNetworkGatewayVpnClientConfigurationRevokedCertificate FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new VirtualNetworkGatewayVpnClientConfigurationRevokedCertificate();
				if (obj.Fields.ContainsKey("name")) {
					result.Name = Protobuf.ToString(obj.Fields["name"]);
				}
				if (obj.Fields.ContainsKey("thumbprint")) {
					result.Thumbprint = Protobuf.ToString(obj.Fields["thumbprint"]);
				}
			return result;
		} // FromProtobuf

	} // VirtualNetworkGatewayVpnClientConfigurationRevokedCertificate

	public sealed class VirtualNetworkGatewayVpnClientConfigurationRootCertificate : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> Name { get; set; }
		public Pulumi.IO<string> PublicCertData { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("name", Protobuf.ToProtobuf(Name)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("public_cert_data", Protobuf.ToProtobuf(PublicCertData)));
		} // ToProtobuf

		public static VirtualNetworkGatewayVpnClientConfigurationRootCertificate FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new VirtualNetworkGatewayVpnClientConfigurationRootCertificate();
				if (obj.Fields.ContainsKey("name")) {
					result.Name = Protobuf.ToString(obj.Fields["name"]);
				}
				if (obj.Fields.ContainsKey("public_cert_data")) {
					result.PublicCertData = Protobuf.ToString(obj.Fields["public_cert_data"]);
				}
			return result;
		} // FromProtobuf

	} // VirtualNetworkGatewayVpnClientConfigurationRootCertificate

	public sealed class VirtualNetworkGatewayVpnClientConfiguration : Pulumi.IIOProtobuf {
		public Pulumi.IO<string[]> AddressSpace { get; set; }
		public Pulumi.IO<string> RadiusServerAddress { get; set; }
		public Pulumi.IO<string> RadiusServerSecret { get; set; }
		public Pulumi.IO<VirtualNetworkGatewayVpnClientConfigurationRevokedCertificate[]> RevokedCertificate { get; set; }
		public Pulumi.IO<VirtualNetworkGatewayVpnClientConfigurationRootCertificate[]> RootCertificate { get; set; }
		public Pulumi.IO<string[]> VpnClientProtocols { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("address_space", Protobuf.ToProtobuf(AddressSpace, item => Protobuf.ToProtobuf(item))),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("radius_server_address", Protobuf.ToProtobuf(RadiusServerAddress)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("radius_server_secret", Protobuf.ToProtobuf(RadiusServerSecret)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("revoked_certificate", Protobuf.ToProtobuf(RevokedCertificate, item => Protobuf.ToProtobuf(item))),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("root_certificate", Protobuf.ToProtobuf(RootCertificate, item => Protobuf.ToProtobuf(item))),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("vpn_client_protocols", Protobuf.ToProtobuf(VpnClientProtocols, item => Protobuf.ToProtobuf(item))));
		} // ToProtobuf

		public static VirtualNetworkGatewayVpnClientConfiguration FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new VirtualNetworkGatewayVpnClientConfiguration();
				if (obj.Fields.ContainsKey("address_space")) {
					result.AddressSpace = Protobuf.ToList(obj.Fields["address_space"], item => Protobuf.ToString(item));
				}
				if (obj.Fields.ContainsKey("radius_server_address")) {
					result.RadiusServerAddress = Protobuf.ToString(obj.Fields["radius_server_address"]);
				}
				if (obj.Fields.ContainsKey("radius_server_secret")) {
					result.RadiusServerSecret = Protobuf.ToString(obj.Fields["radius_server_secret"]);
				}
				if (obj.Fields.ContainsKey("revoked_certificate")) {
					result.RevokedCertificate = Protobuf.ToList(obj.Fields["revoked_certificate"], item => VirtualNetworkGatewayVpnClientConfigurationRevokedCertificate.FromProtobuf(item));
				}
				if (obj.Fields.ContainsKey("root_certificate")) {
					result.RootCertificate = Protobuf.ToList(obj.Fields["root_certificate"], item => VirtualNetworkGatewayVpnClientConfigurationRootCertificate.FromProtobuf(item));
				}
				if (obj.Fields.ContainsKey("vpn_client_protocols")) {
					result.VpnClientProtocols = Protobuf.ToList(obj.Fields["vpn_client_protocols"], item => Protobuf.ToString(item));
				}
			return result;
		} // FromProtobuf

	} // VirtualNetworkGatewayVpnClientConfiguration

	/// <summary>
	/// The set of arguments for constructing a VirtualNetworkGateway resource.
	/// </summary>
	public struct VirtualNetworkGatewayArgs {
		/// <summary>
		/// If `true`, an active-active Virtual Network Gateway
		/// will be created. An active-active gateway requires a `HighPerformance` or an
		/// `UltraPerformance` sku. If `false`, an active-standby gateway will be created.
		/// Defaults to `false`.
		/// </summary>
		public Pulumi.IO<bool> ActiveActive { get; set; }

		public Pulumi.IO<VirtualNetworkGatewayArgsBgpSetting> BgpSettings { get; set; }

		/// <summary>
		/// The ID of the local network gateway
		/// through which outbound Internet traffic from the virtual network in which the
		/// gateway is created will be routed (*forced tunneling*). Refer to the
		/// [Azure documentation on forced tunneling](https://docs.microsoft.com/en-us/azure/vpn-gateway/vpn-gateway-forced-tunneling-rm).
		/// If not specified, forced tunneling is disabled.
		/// </summary>
		public Pulumi.IO<string> DefaultLocalNetworkGatewayId { get; set; }

		/// <summary>
		/// If `true`, BGP (Border Gateway Protocol) will be enabled
		/// for this Virtual Network Gateway. Defaults to `false`.
		/// </summary>
		public Pulumi.IO<bool> EnableBgp { get; set; }

		/// <summary>
		/// One or two `ip_configuration` blocks documented below.
		/// An active-standby gateway requires exactly one `ip_configuration` block whereas
		/// an active-active gateway requires exactly two `ip_configuration` blocks.
		/// </summary>
		public Pulumi.IO<Pulumi.IO<VirtualNetworkGatewayArgsIpConfiguration>[]> IpConfigurations { get; set; }

		/// <summary>
		/// The location/region where the Virtual Network Gateway is
		/// located. Changing the location/region forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Location { get; set; }

		/// <summary>
		/// The name of the Virtual Network Gateway. Changing the name
		/// forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// The name of the resource group in which to
		/// create the Virtual Network Gateway. Changing the resource group name forces
		/// a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ResourceGroupName { get; set; }

		/// <summary>
		/// Configuration of the size and capacity of the virtual network
		/// gateway. Valid options are `Basic`, `Standard`, `HighPerformance`, `UltraPerformance`,
		/// `ErGw1AZ`, `ErGw2AZ`, `ErGw3AZ`, `VpnGw1`, `VpnGw2` and `VpnGw3`
		/// and depend on the `type` and `vpn_type` arguments.
		/// A `PolicyBased` gateway only supports the `Basic` sku. Further, the `UltraPerformance`
		/// sku is only supported by an `ExpressRoute` gateway.
		/// </summary>
		public Pulumi.IO<string> Sku { get; set; }

		/// <summary>
		/// A mapping of tags to assign to the resource.
		/// </summary>
		public Pulumi.IO<System.Collections.Generic.Dictionary<string, string>> Tags { get; set; }

		/// <summary>
		/// The type of the Virtual Network Gateway. Valid options are
		/// `Vpn` or `ExpressRoute`. Changing the type forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Type { get; set; }

		/// <summary>
		/// A `vpn_client_configuration` block which
		/// is documented below. In this block the Virtual Network Gateway can be configured
		/// to accept IPSec point-to-site connections.
		/// </summary>
		public Pulumi.IO<VirtualNetworkGatewayArgsVpnClientConfiguration> VpnClientConfiguration { get; set; }

		/// <summary>
		/// The routing type of the Virtual Network Gateway. Valid
		/// options are `RouteBased` or `PolicyBased`. Defaults to `RouteBased`.
		/// </summary>
		public Pulumi.IO<string> VpnType { get; set; }

	} // VirtualNetworkGatewayArgs

	/// <summary>
	/// Manages a Virtual Network Gateway to establish secure, cross-premises connectivity.
	/// 
	/// -> **Note:** Please be aware that provisioning a Virtual Network Gateway takes a long time (between 30 minutes and 1 hour)
	/// </summary>
	public class VirtualNetworkGateway : Pulumi.CustomResource {
		/// <summary>
		/// If `true`, an active-active Virtual Network Gateway
		/// will be created. An active-active gateway requires a `HighPerformance` or an
		/// `UltraPerformance` sku. If `false`, an active-standby gateway will be created.
		/// Defaults to `false`.
		/// </summary>
		public Pulumi.IO<bool> ActiveActive { get; set; }

		public Pulumi.IO<VirtualNetworkGatewayBgpSetting> BgpSettings { get; set; }

		/// <summary>
		/// The ID of the local network gateway
		/// through which outbound Internet traffic from the virtual network in which the
		/// gateway is created will be routed (*forced tunneling*). Refer to the
		/// [Azure documentation on forced tunneling](https://docs.microsoft.com/en-us/azure/vpn-gateway/vpn-gateway-forced-tunneling-rm).
		/// If not specified, forced tunneling is disabled.
		/// </summary>
		public Pulumi.IO<string> DefaultLocalNetworkGatewayId { get; set; }

		/// <summary>
		/// If `true`, BGP (Border Gateway Protocol) will be enabled
		/// for this Virtual Network Gateway. Defaults to `false`.
		/// </summary>
		public Pulumi.IO<bool> EnableBgp { get; set; }

		/// <summary>
		/// One or two `ip_configuration` blocks documented below.
		/// An active-standby gateway requires exactly one `ip_configuration` block whereas
		/// an active-active gateway requires exactly two `ip_configuration` blocks.
		/// </summary>
		public Pulumi.IO<VirtualNetworkGatewayIpConfiguration[]> IpConfigurations { get; set; }

		/// <summary>
		/// The location/region where the Virtual Network Gateway is
		/// located. Changing the location/region forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Location { get; set; }

		/// <summary>
		/// The name of the Virtual Network Gateway. Changing the name
		/// forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// The name of the resource group in which to
		/// create the Virtual Network Gateway. Changing the resource group name forces
		/// a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ResourceGroupName { get; set; }

		/// <summary>
		/// Configuration of the size and capacity of the virtual network
		/// gateway. Valid options are `Basic`, `Standard`, `HighPerformance`, `UltraPerformance`,
		/// `ErGw1AZ`, `ErGw2AZ`, `ErGw3AZ`, `VpnGw1`, `VpnGw2` and `VpnGw3`
		/// and depend on the `type` and `vpn_type` arguments.
		/// A `PolicyBased` gateway only supports the `Basic` sku. Further, the `UltraPerformance`
		/// sku is only supported by an `ExpressRoute` gateway.
		/// </summary>
		public Pulumi.IO<string> Sku { get; set; }

		/// <summary>
		/// A mapping of tags to assign to the resource.
		/// </summary>
		public Pulumi.IO<System.Collections.Generic.Dictionary<string, string>> Tags { get; set; }

		/// <summary>
		/// The type of the Virtual Network Gateway. Valid options are
		/// `Vpn` or `ExpressRoute`. Changing the type forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Type { get; set; }

		/// <summary>
		/// A `vpn_client_configuration` block which
		/// is documented below. In this block the Virtual Network Gateway can be configured
		/// to accept IPSec point-to-site connections.
		/// </summary>
		public Pulumi.IO<VirtualNetworkGatewayVpnClientConfiguration> VpnClientConfiguration { get; set; }

		/// <summary>
		/// The routing type of the Virtual Network Gateway. Valid
		/// options are `RouteBased` or `PolicyBased`. Defaults to `RouteBased`.
		/// </summary>
		public Pulumi.IO<string> VpnType { get; set; }

		public VirtualNetworkGateway(string name, VirtualNetworkGatewayArgs args, Pulumi.ResourceOptions opts = default(Pulumi.ResourceOptions))
			: base("azure:network/virtualNetworkGateway:VirtualNetworkGateway", name, SerialiseArgs(args), opts) {
			ActiveActive = base.Outputs["activeActive"].Select(item => Protobuf.ToBool(item));
			BgpSettings = base.Outputs["bgpSettings"].Select(item => VirtualNetworkGatewayBgpSetting.FromProtobuf(item));
			DefaultLocalNetworkGatewayId = base.Outputs["defaultLocalNetworkGatewayId"].Select(item => Protobuf.ToString(item));
			EnableBgp = base.Outputs["enableBgp"].Select(item => Protobuf.ToBool(item));
			IpConfigurations = base.Outputs["ipConfigurations"].Select(item => Protobuf.ToList(item, item1 => VirtualNetworkGatewayIpConfiguration.FromProtobuf(item1)));
			Location = base.Outputs["location"].Select(item => Protobuf.ToString(item));
			Name = base.Outputs["name"].Select(item => Protobuf.ToString(item));
			ResourceGroupName = base.Outputs["resourceGroupName"].Select(item => Protobuf.ToString(item));
			Sku = base.Outputs["sku"].Select(item => Protobuf.ToString(item));
			Tags = base.Outputs["tags"].Select(item => Protobuf.ToMap(item));
			Type = base.Outputs["type"].Select(item => Protobuf.ToString(item));
			VpnClientConfiguration = base.Outputs["vpnClientConfiguration"].Select(item => VirtualNetworkGatewayVpnClientConfiguration.FromProtobuf(item));
			VpnType = base.Outputs["vpnType"].Select(item => Protobuf.ToString(item));
		} // ctor

		private static Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>> SerialiseArgs(VirtualNetworkGatewayArgs args) {
			var props = new Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>();
			props["activeActive"] = Protobuf.ToProtobuf(args.ActiveActive);
			props["bgpSettings"] = Protobuf.ToProtobuf(args.BgpSettings);
			props["defaultLocalNetworkGatewayId"] = Protobuf.ToProtobuf(args.DefaultLocalNetworkGatewayId);
			props["enableBgp"] = Protobuf.ToProtobuf(args.EnableBgp);
			props["ipConfigurations"] = Protobuf.ToProtobuf(args.IpConfigurations, item => Protobuf.ToProtobuf(item));
			props["location"] = Protobuf.ToProtobuf(args.Location);
			props["name"] = Protobuf.ToProtobuf(args.Name);
			props["resourceGroupName"] = Protobuf.ToProtobuf(args.ResourceGroupName);
			props["sku"] = Protobuf.ToProtobuf(args.Sku);
			props["tags"] = Protobuf.ToProtobuf(args.Tags);
			props["type"] = Protobuf.ToProtobuf(args.Type);
			props["vpnClientConfiguration"] = Protobuf.ToProtobuf(args.VpnClientConfiguration);
			props["vpnType"] = Protobuf.ToProtobuf(args.VpnType);
			return props;
		} // SerialiseArgs

	} // VirtualNetworkGateway
} // Pulumi.Azure.Network
