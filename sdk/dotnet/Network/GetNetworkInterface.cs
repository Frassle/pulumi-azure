// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Azure.Network {

	public sealed class GetNetworkInterfaceIpConfiguration : Pulumi.IProtobuf {
		public string[] ApplicationGatewayBackendAddressPoolsIds { get; set; }
		public string[] ApplicationSecurityGroupIds { get; set; }
		public string[] LoadBalancerBackendAddressPoolsIds { get; set; }
		public string[] LoadBalancerInboundNatRulesIds { get; set; }
		public string Name { get; set; }
		public bool Primary { get; set; }
		public string PrivateIpAddress { get; set; }
		public string PrivateIpAddressAllocation { get; set; }
		public string PrivateIpAddressVersion { get; set; }
		public string PublicIpAddressId { get; set; }
		public string SubnetId { get; set; }

		public Google.Protobuf.WellKnownTypes.Value ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("application_gateway_backend_address_pools_ids", Protobuf.ToProtobuf(ApplicationGatewayBackendAddressPoolsIds, item => Protobuf.ToProtobuf(item))),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("application_security_group_ids", Protobuf.ToProtobuf(ApplicationSecurityGroupIds, item => Protobuf.ToProtobuf(item))),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("load_balancer_backend_address_pools_ids", Protobuf.ToProtobuf(LoadBalancerBackendAddressPoolsIds, item => Protobuf.ToProtobuf(item))),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("load_balancer_inbound_nat_rules_ids", Protobuf.ToProtobuf(LoadBalancerInboundNatRulesIds, item => Protobuf.ToProtobuf(item))),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("name", Protobuf.ToProtobuf(Name)),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("primary", Protobuf.ToProtobuf(Primary)),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("private_ip_address", Protobuf.ToProtobuf(PrivateIpAddress)),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("private_ip_address_allocation", Protobuf.ToProtobuf(PrivateIpAddressAllocation)),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("private_ip_address_version", Protobuf.ToProtobuf(PrivateIpAddressVersion)),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("public_ip_address_id", Protobuf.ToProtobuf(PublicIpAddressId)),
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("subnet_id", Protobuf.ToProtobuf(SubnetId)));
		} // ToProtobuf

		public static GetNetworkInterfaceIpConfiguration FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new GetNetworkInterfaceIpConfiguration();
				if (obj.Fields.ContainsKey("application_gateway_backend_address_pools_ids")) {
					result.ApplicationGatewayBackendAddressPoolsIds = Protobuf.ToList(obj.Fields["application_gateway_backend_address_pools_ids"], item => Protobuf.ToString(item));
				}
				if (obj.Fields.ContainsKey("application_security_group_ids")) {
					result.ApplicationSecurityGroupIds = Protobuf.ToList(obj.Fields["application_security_group_ids"], item => Protobuf.ToString(item));
				}
				if (obj.Fields.ContainsKey("load_balancer_backend_address_pools_ids")) {
					result.LoadBalancerBackendAddressPoolsIds = Protobuf.ToList(obj.Fields["load_balancer_backend_address_pools_ids"], item => Protobuf.ToString(item));
				}
				if (obj.Fields.ContainsKey("load_balancer_inbound_nat_rules_ids")) {
					result.LoadBalancerInboundNatRulesIds = Protobuf.ToList(obj.Fields["load_balancer_inbound_nat_rules_ids"], item => Protobuf.ToString(item));
				}
				if (obj.Fields.ContainsKey("name")) {
					result.Name = Protobuf.ToString(obj.Fields["name"]);
				}
				if (obj.Fields.ContainsKey("primary")) {
					result.Primary = Protobuf.ToBool(obj.Fields["primary"]);
				}
				if (obj.Fields.ContainsKey("private_ip_address")) {
					result.PrivateIpAddress = Protobuf.ToString(obj.Fields["private_ip_address"]);
				}
				if (obj.Fields.ContainsKey("private_ip_address_allocation")) {
					result.PrivateIpAddressAllocation = Protobuf.ToString(obj.Fields["private_ip_address_allocation"]);
				}
				if (obj.Fields.ContainsKey("private_ip_address_version")) {
					result.PrivateIpAddressVersion = Protobuf.ToString(obj.Fields["private_ip_address_version"]);
				}
				if (obj.Fields.ContainsKey("public_ip_address_id")) {
					result.PublicIpAddressId = Protobuf.ToString(obj.Fields["public_ip_address_id"]);
				}
				if (obj.Fields.ContainsKey("subnet_id")) {
					result.SubnetId = Protobuf.ToString(obj.Fields["subnet_id"]);
				}
			return result;
		} // FromProtobuf

	} // GetNetworkInterfaceIpConfiguration

	/// <summary>
	/// A collection of arguments for invoking getNetworkInterface.
	/// </summary>
	public struct GetNetworkInterfaceArgs {
		/// <summary>
		/// Specifies the name of the Network Interface.
		/// </summary>
		public string Name { get; set; }

		/// <summary>
		/// Specifies the name of the resource group the Network Interface is located in.
		/// </summary>
		public string ResourceGroupName { get; set; }

	} // GetNetworkInterfaceArgs

	/// <summary>
	/// A collection of values returned by getNetworkInterface.
	/// </summary>
	public struct GetNetworkInterfaceResult {
		/// <summary>
		/// List of DNS servers applied to the specified Network Interface.
		/// </summary>
		public string[] AppliedDnsServers { get; set; }

		/// <summary>
		/// The list of DNS servers used by the specified Network Interface.
		/// </summary>
		public string[] DnsServers { get; set; }

		/// <summary>
		/// Indicates if accelerated networking is set on the specified Network Interface.
		/// </summary>
		public bool EnableAcceleratedNetworking { get; set; }

		/// <summary>
		/// Indicate if IP forwarding is set on the specified Network Interface.
		/// </summary>
		public bool EnableIpForwarding { get; set; }

		/// <summary>
		/// The internal dns name label of the specified Network Interface.
		/// </summary>
		public string InternalDnsNameLabel { get; set; }

		public string InternalFqdn { get; set; }

		/// <summary>
		/// One or more `ip_configuration` blocks as defined below.
		/// </summary>
		public GetNetworkInterfaceIpConfiguration[] IpConfigurations { get; set; }

		/// <summary>
		/// The location of the specified Network Interface.
		/// </summary>
		public string Location { get; set; }

		/// <summary>
		/// The MAC address used by the specified Network Interface.
		/// </summary>
		public string MacAddress { get; set; }

		/// <summary>
		/// The ID of the network security group associated to the specified Network Interface.
		/// </summary>
		public string NetworkSecurityGroupId { get; set; }

		/// <summary>
		/// The Private IP Address assigned to this Network Interface.
		/// </summary>
		public string PrivateIpAddress { get; set; }

		/// <summary>
		/// The list of private ip addresses associates to the specified Network Interface.
		/// </summary>
		public string[] PrivateIpAddresses { get; set; }

		/// <summary>
		/// List the tags associated to the specified Network Interface.
		/// </summary>
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }

		/// <summary>
		/// The ID of the virtual machine that the specified Network Interface is attached to.
		/// </summary>
		public string VirtualMachineId { get; set; }

		/// <summary>
		/// id is the provider-assigned unique ID for this managed resource.
		/// </summary>
		public string Id { get; set; }

	} // GetNetworkInterfaceResult

	public static partial class NetworkModule {
		/// <summary>
		/// Use this data source to access information about an existing Network Interface.
		/// </summary>
		public static System.Threading.Tasks.Task<GetNetworkInterfaceResult> GetNetworkInterface(GetNetworkInterfaceArgs args, Pulumi.InvokeOptions opts = default(Pulumi.InvokeOptions)) {
			var invokeArgs = new Google.Protobuf.WellKnownTypes.Struct();
			invokeArgs.Fields["name"] = Protobuf.ToProtobuf(args.Name);
			invokeArgs.Fields["resourceGroupName"] = Protobuf.ToProtobuf(args.ResourceGroupName);

			var task = Pulumi.Runtime.InvokeAsync("azure:network/getNetworkInterface:getNetworkInterface", invokeArgs, opts);

			return task.ContinueWith(response => {
				var protobuf = response.Result;
				var result = new GetNetworkInterfaceResult();
				if (protobuf.Fields.ContainsKey("appliedDnsServers")) {
					result.AppliedDnsServers = Protobuf.ToList(protobuf.Fields["appliedDnsServers"], item => Protobuf.ToString(item));
				}
				if (protobuf.Fields.ContainsKey("dnsServers")) {
					result.DnsServers = Protobuf.ToList(protobuf.Fields["dnsServers"], item => Protobuf.ToString(item));
				}
				if (protobuf.Fields.ContainsKey("enableAcceleratedNetworking")) {
					result.EnableAcceleratedNetworking = Protobuf.ToBool(protobuf.Fields["enableAcceleratedNetworking"]);
				}
				if (protobuf.Fields.ContainsKey("enableIpForwarding")) {
					result.EnableIpForwarding = Protobuf.ToBool(protobuf.Fields["enableIpForwarding"]);
				}
				if (protobuf.Fields.ContainsKey("internalDnsNameLabel")) {
					result.InternalDnsNameLabel = Protobuf.ToString(protobuf.Fields["internalDnsNameLabel"]);
				}
				if (protobuf.Fields.ContainsKey("internalFqdn")) {
					result.InternalFqdn = Protobuf.ToString(protobuf.Fields["internalFqdn"]);
				}
				if (protobuf.Fields.ContainsKey("ipConfigurations")) {
					result.IpConfigurations = Protobuf.ToList(protobuf.Fields["ipConfigurations"], item => GetNetworkInterfaceIpConfiguration.FromProtobuf(item));
				}
				if (protobuf.Fields.ContainsKey("location")) {
					result.Location = Protobuf.ToString(protobuf.Fields["location"]);
				}
				if (protobuf.Fields.ContainsKey("macAddress")) {
					result.MacAddress = Protobuf.ToString(protobuf.Fields["macAddress"]);
				}
				if (protobuf.Fields.ContainsKey("networkSecurityGroupId")) {
					result.NetworkSecurityGroupId = Protobuf.ToString(protobuf.Fields["networkSecurityGroupId"]);
				}
				if (protobuf.Fields.ContainsKey("privateIpAddress")) {
					result.PrivateIpAddress = Protobuf.ToString(protobuf.Fields["privateIpAddress"]);
				}
				if (protobuf.Fields.ContainsKey("privateIpAddresses")) {
					result.PrivateIpAddresses = Protobuf.ToList(protobuf.Fields["privateIpAddresses"], item => Protobuf.ToString(item));
				}
				if (protobuf.Fields.ContainsKey("tags")) {
					result.Tags = Protobuf.ToMap(protobuf.Fields["tags"]);
				}
				if (protobuf.Fields.ContainsKey("virtualMachineId")) {
					result.VirtualMachineId = Protobuf.ToString(protobuf.Fields["virtualMachineId"]);
				}
				if (protobuf.Fields.ContainsKey("id")) {
					result.Id = Protobuf.ToString(protobuf.Fields["id"]);
				}
				return result;
			});
		} // GetNetworkInterface

	} // NetworkModule
} // Pulumi.Azure.Network
