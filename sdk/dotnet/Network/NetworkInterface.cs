// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Azure.Network {

	public sealed class NetworkInterfaceArgsIpConfiguration : Pulumi.IIOProtobuf {
		public Pulumi.IO<Pulumi.IO<string>[]> ApplicationGatewayBackendAddressPoolsIds { get; set; }
		public Pulumi.IO<Pulumi.IO<string>[]> ApplicationSecurityGroupIds { get; set; }
		public Pulumi.IO<Pulumi.IO<string>[]> LoadBalancerBackendAddressPoolsIds { get; set; }
		public Pulumi.IO<Pulumi.IO<string>[]> LoadBalancerInboundNatRulesIds { get; set; }
		public Pulumi.IO<string> Name { get; set; }
		public Pulumi.IO<bool> Primary { get; set; }
		public Pulumi.IO<string> PrivateIpAddress { get; set; }
		public Pulumi.IO<string> PrivateIpAddressAllocation { get; set; }
		public Pulumi.IO<string> PrivateIpAddressVersion { get; set; }
		public Pulumi.IO<string> PublicIpAddressId { get; set; }
		public Pulumi.IO<string> SubnetId { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("application_gateway_backend_address_pools_ids", Protobuf.ToProtobuf(ApplicationGatewayBackendAddressPoolsIds, item => Protobuf.ToProtobuf(item))),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("application_security_group_ids", Protobuf.ToProtobuf(ApplicationSecurityGroupIds, item => Protobuf.ToProtobuf(item))),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("load_balancer_backend_address_pools_ids", Protobuf.ToProtobuf(LoadBalancerBackendAddressPoolsIds, item => Protobuf.ToProtobuf(item))),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("load_balancer_inbound_nat_rules_ids", Protobuf.ToProtobuf(LoadBalancerInboundNatRulesIds, item => Protobuf.ToProtobuf(item))),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("name", Protobuf.ToProtobuf(Name)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("primary", Protobuf.ToProtobuf(Primary)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("private_ip_address", Protobuf.ToProtobuf(PrivateIpAddress)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("private_ip_address_allocation", Protobuf.ToProtobuf(PrivateIpAddressAllocation)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("private_ip_address_version", Protobuf.ToProtobuf(PrivateIpAddressVersion)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("public_ip_address_id", Protobuf.ToProtobuf(PublicIpAddressId)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("subnet_id", Protobuf.ToProtobuf(SubnetId)));
		} // ToProtobuf

	} // NetworkInterfaceArgsIpConfiguration

	public sealed class NetworkInterfaceIpConfiguration : Pulumi.IIOProtobuf {
		public Pulumi.IO<string[]> ApplicationGatewayBackendAddressPoolsIds { get; set; }
		public Pulumi.IO<string[]> ApplicationSecurityGroupIds { get; set; }
		public Pulumi.IO<string[]> LoadBalancerBackendAddressPoolsIds { get; set; }
		public Pulumi.IO<string[]> LoadBalancerInboundNatRulesIds { get; set; }
		public Pulumi.IO<string> Name { get; set; }
		public Pulumi.IO<bool> Primary { get; set; }
		public Pulumi.IO<string> PrivateIpAddress { get; set; }
		public Pulumi.IO<string> PrivateIpAddressAllocation { get; set; }
		public Pulumi.IO<string> PrivateIpAddressVersion { get; set; }
		public Pulumi.IO<string> PublicIpAddressId { get; set; }
		public Pulumi.IO<string> SubnetId { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("application_gateway_backend_address_pools_ids", Protobuf.ToProtobuf(ApplicationGatewayBackendAddressPoolsIds, item => Protobuf.ToProtobuf(item))),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("application_security_group_ids", Protobuf.ToProtobuf(ApplicationSecurityGroupIds, item => Protobuf.ToProtobuf(item))),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("load_balancer_backend_address_pools_ids", Protobuf.ToProtobuf(LoadBalancerBackendAddressPoolsIds, item => Protobuf.ToProtobuf(item))),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("load_balancer_inbound_nat_rules_ids", Protobuf.ToProtobuf(LoadBalancerInboundNatRulesIds, item => Protobuf.ToProtobuf(item))),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("name", Protobuf.ToProtobuf(Name)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("primary", Protobuf.ToProtobuf(Primary)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("private_ip_address", Protobuf.ToProtobuf(PrivateIpAddress)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("private_ip_address_allocation", Protobuf.ToProtobuf(PrivateIpAddressAllocation)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("private_ip_address_version", Protobuf.ToProtobuf(PrivateIpAddressVersion)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("public_ip_address_id", Protobuf.ToProtobuf(PublicIpAddressId)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("subnet_id", Protobuf.ToProtobuf(SubnetId)));
		} // ToProtobuf

		public static NetworkInterfaceIpConfiguration FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new NetworkInterfaceIpConfiguration();
				if (obj.Fields.ContainsKey("application_gateway_backend_address_pools_ids")) {
					result.ApplicationGatewayBackendAddressPoolsIds = Protobuf.ToList(obj.Fields["application_gateway_backend_address_pools_ids"], item => Protobuf.ToString(item));
				}
				if (obj.Fields.ContainsKey("application_security_group_ids")) {
					result.ApplicationSecurityGroupIds = Protobuf.ToList(obj.Fields["application_security_group_ids"], item => Protobuf.ToString(item));
				}
				if (obj.Fields.ContainsKey("load_balancer_backend_address_pools_ids")) {
					result.LoadBalancerBackendAddressPoolsIds = Protobuf.ToList(obj.Fields["load_balancer_backend_address_pools_ids"], item => Protobuf.ToString(item));
				}
				if (obj.Fields.ContainsKey("load_balancer_inbound_nat_rules_ids")) {
					result.LoadBalancerInboundNatRulesIds = Protobuf.ToList(obj.Fields["load_balancer_inbound_nat_rules_ids"], item => Protobuf.ToString(item));
				}
				if (obj.Fields.ContainsKey("name")) {
					result.Name = Protobuf.ToString(obj.Fields["name"]);
				}
				if (obj.Fields.ContainsKey("primary")) {
					result.Primary = Protobuf.ToBool(obj.Fields["primary"]);
				}
				if (obj.Fields.ContainsKey("private_ip_address")) {
					result.PrivateIpAddress = Protobuf.ToString(obj.Fields["private_ip_address"]);
				}
				if (obj.Fields.ContainsKey("private_ip_address_allocation")) {
					result.PrivateIpAddressAllocation = Protobuf.ToString(obj.Fields["private_ip_address_allocation"]);
				}
				if (obj.Fields.ContainsKey("private_ip_address_version")) {
					result.PrivateIpAddressVersion = Protobuf.ToString(obj.Fields["private_ip_address_version"]);
				}
				if (obj.Fields.ContainsKey("public_ip_address_id")) {
					result.PublicIpAddressId = Protobuf.ToString(obj.Fields["public_ip_address_id"]);
				}
				if (obj.Fields.ContainsKey("subnet_id")) {
					result.SubnetId = Protobuf.ToString(obj.Fields["subnet_id"]);
				}
			return result;
		} // FromProtobuf

	} // NetworkInterfaceIpConfiguration

	/// <summary>
	/// The set of arguments for constructing a NetworkInterface resource.
	/// </summary>
	public struct NetworkInterfaceArgs {
		/// <summary>
		/// If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set
		/// </summary>
		public Pulumi.IO<Pulumi.IO<string>[]> AppliedDnsServers { get; set; }

		/// <summary>
		/// List of DNS servers IP addresses to use for this NIC, overrides the VNet-level server list
		/// </summary>
		public Pulumi.IO<Pulumi.IO<string>[]> DnsServers { get; set; }

		/// <summary>
		/// Enables Azure Accelerated Networking using SR-IOV. Only certain VM instance sizes are supported. Refer to [Create a Virtual Machine with Accelerated Networking](https://docs.microsoft.com/en-us/azure/virtual-network/create-vm-accelerated-networking-cli). Defaults to `false`.
		/// </summary>
		public Pulumi.IO<bool> EnableAcceleratedNetworking { get; set; }

		/// <summary>
		/// Enables IP Forwarding on the NIC. Defaults to `false`.
		/// </summary>
		public Pulumi.IO<bool> EnableIpForwarding { get; set; }

		/// <summary>
		/// Relative DNS name for this NIC used for internal communications between VMs in the same VNet
		/// </summary>
		public Pulumi.IO<string> InternalDnsNameLabel { get; set; }

		public Pulumi.IO<string> InternalFqdn { get; set; }

		/// <summary>
		/// One or more `ip_configuration` associated with this NIC as documented below.
		/// </summary>
		public Pulumi.IO<Pulumi.IO<NetworkInterfaceArgsIpConfiguration>[]> IpConfigurations { get; set; }

		/// <summary>
		/// The location/region where the network interface is created. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Location { get; set; }

		/// <summary>
		/// The media access control (MAC) address of the network interface.
		/// </summary>
		public Pulumi.IO<string> MacAddress { get; set; }

		/// <summary>
		/// The name of the network interface. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// The ID of the Network Security Group to associate with the network interface.
		/// </summary>
		public Pulumi.IO<string> NetworkSecurityGroupId { get; set; }

		/// <summary>
		/// The name of the resource group in which to create the network interface. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ResourceGroupName { get; set; }

		/// <summary>
		/// A mapping of tags to assign to the resource.
		/// </summary>
		public Pulumi.IO<System.Collections.Generic.Dictionary<string, string>> Tags { get; set; }

		/// <summary>
		/// Reference to a VM with which this NIC has been associated.
		/// </summary>
		public Pulumi.IO<string> VirtualMachineId { get; set; }

	} // NetworkInterfaceArgs

	/// <summary>
	/// Manages a Network Interface located in a Virtual Network, usually attached to a Virtual Machine.
	/// </summary>
	public class NetworkInterface : Pulumi.CustomResource {
		/// <summary>
		/// If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set
		/// </summary>
		public Pulumi.IO<string[]> AppliedDnsServers { get; set; }

		/// <summary>
		/// List of DNS servers IP addresses to use for this NIC, overrides the VNet-level server list
		/// </summary>
		public Pulumi.IO<string[]> DnsServers { get; set; }

		/// <summary>
		/// Enables Azure Accelerated Networking using SR-IOV. Only certain VM instance sizes are supported. Refer to [Create a Virtual Machine with Accelerated Networking](https://docs.microsoft.com/en-us/azure/virtual-network/create-vm-accelerated-networking-cli). Defaults to `false`.
		/// </summary>
		public Pulumi.IO<bool> EnableAcceleratedNetworking { get; set; }

		/// <summary>
		/// Enables IP Forwarding on the NIC. Defaults to `false`.
		/// </summary>
		public Pulumi.IO<bool> EnableIpForwarding { get; set; }

		/// <summary>
		/// Relative DNS name for this NIC used for internal communications between VMs in the same VNet
		/// </summary>
		public Pulumi.IO<string> InternalDnsNameLabel { get; set; }

		public Pulumi.IO<string> InternalFqdn { get; set; }

		/// <summary>
		/// One or more `ip_configuration` associated with this NIC as documented below.
		/// </summary>
		public Pulumi.IO<NetworkInterfaceIpConfiguration[]> IpConfigurations { get; set; }

		/// <summary>
		/// The location/region where the network interface is created. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Location { get; set; }

		/// <summary>
		/// The media access control (MAC) address of the network interface.
		/// </summary>
		public Pulumi.IO<string> MacAddress { get; set; }

		/// <summary>
		/// The name of the network interface. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// The ID of the Network Security Group to associate with the network interface.
		/// </summary>
		public Pulumi.IO<string> NetworkSecurityGroupId { get; set; }

		/// <summary>
		/// The first private IP address of the network interface.
		/// </summary>
		public Pulumi.IO<string> PrivateIpAddress { get; set; }

		/// <summary>
		/// The private IP addresses of the network interface.
		/// </summary>
		public Pulumi.IO<string[]> PrivateIpAddresses { get; set; }

		/// <summary>
		/// The name of the resource group in which to create the network interface. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ResourceGroupName { get; set; }

		/// <summary>
		/// A mapping of tags to assign to the resource.
		/// </summary>
		public Pulumi.IO<System.Collections.Generic.Dictionary<string, string>> Tags { get; set; }

		/// <summary>
		/// Reference to a VM with which this NIC has been associated.
		/// </summary>
		public Pulumi.IO<string> VirtualMachineId { get; set; }

		public NetworkInterface(string name, NetworkInterfaceArgs args, Pulumi.ResourceOptions opts = default(Pulumi.ResourceOptions))
			: base("azure:network/networkInterface:NetworkInterface", name, SerialiseArgs(args), opts) {
			AppliedDnsServers = base.Outputs["appliedDnsServers"].Select(item => Protobuf.ToList(item, item1 => Protobuf.ToString(item1)));
			DnsServers = base.Outputs["dnsServers"].Select(item => Protobuf.ToList(item, item1 => Protobuf.ToString(item1)));
			EnableAcceleratedNetworking = base.Outputs["enableAcceleratedNetworking"].Select(item => Protobuf.ToBool(item));
			EnableIpForwarding = base.Outputs["enableIpForwarding"].Select(item => Protobuf.ToBool(item));
			InternalDnsNameLabel = base.Outputs["internalDnsNameLabel"].Select(item => Protobuf.ToString(item));
			InternalFqdn = base.Outputs["internalFqdn"].Select(item => Protobuf.ToString(item));
			IpConfigurations = base.Outputs["ipConfigurations"].Select(item => Protobuf.ToList(item, item1 => NetworkInterfaceIpConfiguration.FromProtobuf(item1)));
			Location = base.Outputs["location"].Select(item => Protobuf.ToString(item));
			MacAddress = base.Outputs["macAddress"].Select(item => Protobuf.ToString(item));
			Name = base.Outputs["name"].Select(item => Protobuf.ToString(item));
			NetworkSecurityGroupId = base.Outputs["networkSecurityGroupId"].Select(item => Protobuf.ToString(item));
			PrivateIpAddress = base.Outputs["privateIpAddress"].Select(item => Protobuf.ToString(item));
			PrivateIpAddresses = base.Outputs["privateIpAddresses"].Select(item => Protobuf.ToList(item, item1 => Protobuf.ToString(item1)));
			ResourceGroupName = base.Outputs["resourceGroupName"].Select(item => Protobuf.ToString(item));
			Tags = base.Outputs["tags"].Select(item => Protobuf.ToMap(item));
			VirtualMachineId = base.Outputs["virtualMachineId"].Select(item => Protobuf.ToString(item));
		} // ctor

		private static Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>> SerialiseArgs(NetworkInterfaceArgs args) {
			var props = new Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>();
			props["appliedDnsServers"] = Protobuf.ToProtobuf(args.AppliedDnsServers, item => Protobuf.ToProtobuf(item));
			props["dnsServers"] = Protobuf.ToProtobuf(args.DnsServers, item => Protobuf.ToProtobuf(item));
			props["enableAcceleratedNetworking"] = Protobuf.ToProtobuf(args.EnableAcceleratedNetworking);
			props["enableIpForwarding"] = Protobuf.ToProtobuf(args.EnableIpForwarding);
			props["internalDnsNameLabel"] = Protobuf.ToProtobuf(args.InternalDnsNameLabel);
			props["internalFqdn"] = Protobuf.ToProtobuf(args.InternalFqdn);
			props["ipConfigurations"] = Protobuf.ToProtobuf(args.IpConfigurations, item => Protobuf.ToProtobuf(item));
			props["location"] = Protobuf.ToProtobuf(args.Location);
			props["macAddress"] = Protobuf.ToProtobuf(args.MacAddress);
			props["name"] = Protobuf.ToProtobuf(args.Name);
			props["networkSecurityGroupId"] = Protobuf.ToProtobuf(args.NetworkSecurityGroupId);
			props["resourceGroupName"] = Protobuf.ToProtobuf(args.ResourceGroupName);
			props["tags"] = Protobuf.ToProtobuf(args.Tags);
			props["virtualMachineId"] = Protobuf.ToProtobuf(args.VirtualMachineId);
			props["privateIpAddress"] = null; //out
			props["privateIpAddresses"] = null; //out
			return props;
		} // SerialiseArgs

	} // NetworkInterface
} // Pulumi.Azure.Network
