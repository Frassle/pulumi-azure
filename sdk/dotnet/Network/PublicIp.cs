// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Azure.Network {

	/// <summary>
	/// The set of arguments for constructing a PublicIp resource.
	/// </summary>
	public struct PublicIpArgs {
		/// <summary>
		/// Defines the allocation method for this IP address. Possible values are `Static` or `Dynamic`.
		/// </summary>
		public Pulumi.IO<string> AllocationMethod { get; set; }

		/// <summary>
		/// Label for the Domain Name. Will be used to make up the FQDN.  If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
		/// </summary>
		public Pulumi.IO<string> DomainNameLabel { get; set; }

		/// <summary>
		/// Specifies the timeout for the TCP idle connection. The value can be set between 4 and 30 minutes.
		/// </summary>
		public Pulumi.IO<int> IdleTimeoutInMinutes { get; set; }

		/// <summary>
		/// The IP Version to use, IPv6 or IPv4.
		/// </summary>
		public Pulumi.IO<string> IpVersion { get; set; }

		/// <summary>
		/// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Location { get; set; }

		/// <summary>
		/// Specifies the name of the Public IP resource . Changing this forces a
		/// new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		public Pulumi.IO<string> PublicIpAddressAllocation { get; set; }

		/// <summary>
		/// The name of the resource group in which to
		/// create the public ip.
		/// </summary>
		public Pulumi.IO<string> ResourceGroupName { get; set; }

		/// <summary>
		/// A fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
		/// </summary>
		public Pulumi.IO<string> ReverseFqdn { get; set; }

		/// <summary>
		/// The SKU of the Public IP. Accepted values are `Basic` and `Standard`. Defaults to `Basic`.
		/// </summary>
		public Pulumi.IO<string> Sku { get; set; }

		/// <summary>
		/// A mapping of tags to assign to the resource.
		/// </summary>
		public Pulumi.IO<System.Collections.Generic.Dictionary<string, string>> Tags { get; set; }

		/// <summary>
		/// A collection containing the availability zone to allocate the Public IP in.
		/// </summary>
		public Pulumi.IO<string> Zones { get; set; }

	} // PublicIpArgs

	/// <summary>
	/// Manage a Public IP Address.
	/// </summary>
	public class PublicIp : Pulumi.CustomResource {
		/// <summary>
		/// Defines the allocation method for this IP address. Possible values are `Static` or `Dynamic`.
		/// </summary>
		public Pulumi.IO<string> AllocationMethod { get; set; }

		/// <summary>
		/// Label for the Domain Name. Will be used to make up the FQDN.  If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
		/// </summary>
		public Pulumi.IO<string> DomainNameLabel { get; set; }

		/// <summary>
		/// Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone
		/// </summary>
		public Pulumi.IO<string> Fqdn { get; set; }

		/// <summary>
		/// Specifies the timeout for the TCP idle connection. The value can be set between 4 and 30 minutes.
		/// </summary>
		public Pulumi.IO<int> IdleTimeoutInMinutes { get; set; }

		/// <summary>
		/// The IP address value that was allocated.
		/// </summary>
		public Pulumi.IO<string> IpAddress { get; set; }

		/// <summary>
		/// The IP Version to use, IPv6 or IPv4.
		/// </summary>
		public Pulumi.IO<string> IpVersion { get; set; }

		/// <summary>
		/// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Location { get; set; }

		/// <summary>
		/// Specifies the name of the Public IP resource . Changing this forces a
		/// new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		public Pulumi.IO<string> PublicIpAddressAllocation { get; set; }

		/// <summary>
		/// The name of the resource group in which to
		/// create the public ip.
		/// </summary>
		public Pulumi.IO<string> ResourceGroupName { get; set; }

		/// <summary>
		/// A fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
		/// </summary>
		public Pulumi.IO<string> ReverseFqdn { get; set; }

		/// <summary>
		/// The SKU of the Public IP. Accepted values are `Basic` and `Standard`. Defaults to `Basic`.
		/// </summary>
		public Pulumi.IO<string> Sku { get; set; }

		/// <summary>
		/// A mapping of tags to assign to the resource.
		/// </summary>
		public Pulumi.IO<System.Collections.Generic.Dictionary<string, string>> Tags { get; set; }

		/// <summary>
		/// A collection containing the availability zone to allocate the Public IP in.
		/// </summary>
		public Pulumi.IO<string> Zones { get; set; }

		public PublicIp(string name, PublicIpArgs args, Pulumi.ResourceOptions opts = default(Pulumi.ResourceOptions))
			: base("azure:network/publicIp:PublicIp", name, SerialiseArgs(args), opts) {
			AllocationMethod = base.Outputs["allocationMethod"].Select(item => Protobuf.ToString(item));
			DomainNameLabel = base.Outputs["domainNameLabel"].Select(item => Protobuf.ToString(item));
			Fqdn = base.Outputs["fqdn"].Select(item => Protobuf.ToString(item));
			IdleTimeoutInMinutes = base.Outputs["idleTimeoutInMinutes"].Select(item => Protobuf.ToInt(item));
			IpAddress = base.Outputs["ipAddress"].Select(item => Protobuf.ToString(item));
			IpVersion = base.Outputs["ipVersion"].Select(item => Protobuf.ToString(item));
			Location = base.Outputs["location"].Select(item => Protobuf.ToString(item));
			Name = base.Outputs["name"].Select(item => Protobuf.ToString(item));
			PublicIpAddressAllocation = base.Outputs["publicIpAddressAllocation"].Select(item => Protobuf.ToString(item));
			ResourceGroupName = base.Outputs["resourceGroupName"].Select(item => Protobuf.ToString(item));
			ReverseFqdn = base.Outputs["reverseFqdn"].Select(item => Protobuf.ToString(item));
			Sku = base.Outputs["sku"].Select(item => Protobuf.ToString(item));
			Tags = base.Outputs["tags"].Select(item => Protobuf.ToMap(item));
			Zones = base.Outputs["zones"].Select(item => Protobuf.ToString(item));
		} // ctor

		private static Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>> SerialiseArgs(PublicIpArgs args) {
			var props = new Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>();
			props["allocationMethod"] = Protobuf.ToProtobuf(args.AllocationMethod);
			props["domainNameLabel"] = Protobuf.ToProtobuf(args.DomainNameLabel);
			props["idleTimeoutInMinutes"] = Protobuf.ToProtobuf(args.IdleTimeoutInMinutes);
			props["ipVersion"] = Protobuf.ToProtobuf(args.IpVersion);
			props["location"] = Protobuf.ToProtobuf(args.Location);
			props["name"] = Protobuf.ToProtobuf(args.Name);
			props["publicIpAddressAllocation"] = Protobuf.ToProtobuf(args.PublicIpAddressAllocation);
			props["resourceGroupName"] = Protobuf.ToProtobuf(args.ResourceGroupName);
			props["reverseFqdn"] = Protobuf.ToProtobuf(args.ReverseFqdn);
			props["sku"] = Protobuf.ToProtobuf(args.Sku);
			props["tags"] = Protobuf.ToProtobuf(args.Tags);
			props["zones"] = Protobuf.ToProtobuf(args.Zones);
			props["fqdn"] = null; //out
			props["ipAddress"] = null; //out
			return props;
		} // SerialiseArgs

	} // PublicIp
} // Pulumi.Azure.Network
