// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Azure.Eventhub {

	public sealed class SubscriptionRuleArgsCorrelationFilter : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> ContentType { get; set; }
		public Pulumi.IO<string> CorrelationId { get; set; }
		public Pulumi.IO<string> Label { get; set; }
		public Pulumi.IO<string> MessageId { get; set; }
		public Pulumi.IO<string> ReplyTo { get; set; }
		public Pulumi.IO<string> ReplyToSessionId { get; set; }
		public Pulumi.IO<string> SessionId { get; set; }
		public Pulumi.IO<string> To { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("content_type", Protobuf.ToProtobuf(ContentType)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("correlation_id", Protobuf.ToProtobuf(CorrelationId)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("label", Protobuf.ToProtobuf(Label)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("message_id", Protobuf.ToProtobuf(MessageId)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("reply_to", Protobuf.ToProtobuf(ReplyTo)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("reply_to_session_id", Protobuf.ToProtobuf(ReplyToSessionId)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("session_id", Protobuf.ToProtobuf(SessionId)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("to", Protobuf.ToProtobuf(To)));
		} // ToProtobuf

	} // SubscriptionRuleArgsCorrelationFilter

	public sealed class SubscriptionRuleCorrelationFilter : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> ContentType { get; set; }
		public Pulumi.IO<string> CorrelationId { get; set; }
		public Pulumi.IO<string> Label { get; set; }
		public Pulumi.IO<string> MessageId { get; set; }
		public Pulumi.IO<string> ReplyTo { get; set; }
		public Pulumi.IO<string> ReplyToSessionId { get; set; }
		public Pulumi.IO<string> SessionId { get; set; }
		public Pulumi.IO<string> To { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("content_type", Protobuf.ToProtobuf(ContentType)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("correlation_id", Protobuf.ToProtobuf(CorrelationId)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("label", Protobuf.ToProtobuf(Label)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("message_id", Protobuf.ToProtobuf(MessageId)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("reply_to", Protobuf.ToProtobuf(ReplyTo)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("reply_to_session_id", Protobuf.ToProtobuf(ReplyToSessionId)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("session_id", Protobuf.ToProtobuf(SessionId)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("to", Protobuf.ToProtobuf(To)));
		} // ToProtobuf

		public static SubscriptionRuleCorrelationFilter FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new SubscriptionRuleCorrelationFilter();
				if (obj.Fields.ContainsKey("content_type")) {
					result.ContentType = Protobuf.ToString(obj.Fields["content_type"]);
				}
				if (obj.Fields.ContainsKey("correlation_id")) {
					result.CorrelationId = Protobuf.ToString(obj.Fields["correlation_id"]);
				}
				if (obj.Fields.ContainsKey("label")) {
					result.Label = Protobuf.ToString(obj.Fields["label"]);
				}
				if (obj.Fields.ContainsKey("message_id")) {
					result.MessageId = Protobuf.ToString(obj.Fields["message_id"]);
				}
				if (obj.Fields.ContainsKey("reply_to")) {
					result.ReplyTo = Protobuf.ToString(obj.Fields["reply_to"]);
				}
				if (obj.Fields.ContainsKey("reply_to_session_id")) {
					result.ReplyToSessionId = Protobuf.ToString(obj.Fields["reply_to_session_id"]);
				}
				if (obj.Fields.ContainsKey("session_id")) {
					result.SessionId = Protobuf.ToString(obj.Fields["session_id"]);
				}
				if (obj.Fields.ContainsKey("to")) {
					result.To = Protobuf.ToString(obj.Fields["to"]);
				}
			return result;
		} // FromProtobuf

	} // SubscriptionRuleCorrelationFilter

	/// <summary>
	/// The set of arguments for constructing a SubscriptionRule resource.
	/// </summary>
	public struct SubscriptionRuleArgs {
		/// <summary>
		/// Represents set of actions written in SQL language-based syntax that is performed against a BrokeredMessage.
		/// </summary>
		public Pulumi.IO<string> Action { get; set; }

		/// <summary>
		/// A `correlation_filter` block as documented below to be evaluated against a BrokeredMessage. Required when `filter_type` is set to `CorrelationFilter`.
		/// </summary>
		public Pulumi.IO<SubscriptionRuleArgsCorrelationFilter> CorrelationFilter { get; set; }

		/// <summary>
		/// Type of filter to be applied to a BrokeredMessage. Possible values are `SqlFilter` and `CorrelationFilter`.
		/// </summary>
		public Pulumi.IO<string> FilterType { get; set; }

		/// <summary>
		/// Specifies the name of the ServiceBus Subscription Rule. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// The name of the ServiceBus Namespace in which the ServiceBus Topic exists. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> NamespaceName { get; set; }

		/// <summary>
		/// The name of the resource group in the ServiceBus Namespace exists. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ResourceGroupName { get; set; }

		/// <summary>
		/// Represents a filter written in SQL language-based syntax that to be evaluated against a BrokeredMessage. Required when `filter_type` is set to `SqlFilter`.
		/// </summary>
		public Pulumi.IO<string> SqlFilter { get; set; }

		/// <summary>
		/// The name of the ServiceBus Subscription in which this Rule should be created. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> SubscriptionName { get; set; }

		/// <summary>
		/// The name of the ServiceBus Topic in which the ServiceBus Subscription exists. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> TopicName { get; set; }

	} // SubscriptionRuleArgs

	/// <summary>
	/// Manage a ServiceBus Subscription Rule.
	/// </summary>
	public class SubscriptionRule : Pulumi.CustomResource {
		/// <summary>
		/// Represents set of actions written in SQL language-based syntax that is performed against a BrokeredMessage.
		/// </summary>
		public Pulumi.IO<string> Action { get; set; }

		/// <summary>
		/// A `correlation_filter` block as documented below to be evaluated against a BrokeredMessage. Required when `filter_type` is set to `CorrelationFilter`.
		/// </summary>
		public Pulumi.IO<SubscriptionRuleCorrelationFilter> CorrelationFilter { get; set; }

		/// <summary>
		/// Type of filter to be applied to a BrokeredMessage. Possible values are `SqlFilter` and `CorrelationFilter`.
		/// </summary>
		public Pulumi.IO<string> FilterType { get; set; }

		/// <summary>
		/// Specifies the name of the ServiceBus Subscription Rule. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// The name of the ServiceBus Namespace in which the ServiceBus Topic exists. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> NamespaceName { get; set; }

		/// <summary>
		/// The name of the resource group in the ServiceBus Namespace exists. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ResourceGroupName { get; set; }

		/// <summary>
		/// Represents a filter written in SQL language-based syntax that to be evaluated against a BrokeredMessage. Required when `filter_type` is set to `SqlFilter`.
		/// </summary>
		public Pulumi.IO<string> SqlFilter { get; set; }

		/// <summary>
		/// The name of the ServiceBus Subscription in which this Rule should be created. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> SubscriptionName { get; set; }

		/// <summary>
		/// The name of the ServiceBus Topic in which the ServiceBus Subscription exists. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> TopicName { get; set; }

		public SubscriptionRule(string name, SubscriptionRuleArgs args, Pulumi.ResourceOptions opts = default(Pulumi.ResourceOptions))
			: base("azure:eventhub/subscriptionRule:SubscriptionRule", name, SerialiseArgs(args), opts) {
			Action = base.Outputs["action"].Select(item => Protobuf.ToString(item));
			CorrelationFilter = base.Outputs["correlationFilter"].Select(item => SubscriptionRuleCorrelationFilter.FromProtobuf(item));
			FilterType = base.Outputs["filterType"].Select(item => Protobuf.ToString(item));
			Name = base.Outputs["name"].Select(item => Protobuf.ToString(item));
			NamespaceName = base.Outputs["namespaceName"].Select(item => Protobuf.ToString(item));
			ResourceGroupName = base.Outputs["resourceGroupName"].Select(item => Protobuf.ToString(item));
			SqlFilter = base.Outputs["sqlFilter"].Select(item => Protobuf.ToString(item));
			SubscriptionName = base.Outputs["subscriptionName"].Select(item => Protobuf.ToString(item));
			TopicName = base.Outputs["topicName"].Select(item => Protobuf.ToString(item));
		} // ctor

		private static Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>> SerialiseArgs(SubscriptionRuleArgs args) {
			var props = new Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>();
			props["action"] = Protobuf.ToProtobuf(args.Action);
			props["correlationFilter"] = Protobuf.ToProtobuf(args.CorrelationFilter);
			props["filterType"] = Protobuf.ToProtobuf(args.FilterType);
			props["name"] = Protobuf.ToProtobuf(args.Name);
			props["namespaceName"] = Protobuf.ToProtobuf(args.NamespaceName);
			props["resourceGroupName"] = Protobuf.ToProtobuf(args.ResourceGroupName);
			props["sqlFilter"] = Protobuf.ToProtobuf(args.SqlFilter);
			props["subscriptionName"] = Protobuf.ToProtobuf(args.SubscriptionName);
			props["topicName"] = Protobuf.ToProtobuf(args.TopicName);
			return props;
		} // SerialiseArgs

	} // SubscriptionRule
} // Pulumi.Azure.Eventhub
