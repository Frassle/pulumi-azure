// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Azure.Eventhub {

	/// <summary>
	/// The set of arguments for constructing a EventHubNamespace resource.
	/// </summary>
	public struct EventHubNamespaceArgs {
		/// <summary>
		/// Is Auto Inflate enabled for the EventHub Namespace?
		/// </summary>
		public Pulumi.IO<bool> AutoInflateEnabled { get; set; }

		/// <summary>
		/// Specifies the Capacity / Throughput Units for a `Standard` SKU namespace. Valid values range from 1 - 20.
		/// </summary>
		public Pulumi.IO<int> Capacity { get; set; }

		/// <summary>
		/// Is Kafka enabled for the EventHub Namespace? Defaults to `false`.
		/// </summary>
		public Pulumi.IO<bool> KafkaEnabled { get; set; }

		/// <summary>
		/// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Location { get; set; }

		/// <summary>
		/// Specifies the maximum number of throughput units when Auto Inflate is Enabled. Valid values range from 1 - 20.
		/// </summary>
		public Pulumi.IO<int> MaximumThroughputUnits { get; set; }

		/// <summary>
		/// Specifies the name of the EventHub Namespace resource. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// The name of the resource group in which to create the namespace. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ResourceGroupName { get; set; }

		/// <summary>
		/// Defines which tier to use. Valid options are `Basic` and `Standard`.
		/// </summary>
		public Pulumi.IO<string> Sku { get; set; }

		/// <summary>
		/// A mapping of tags to assign to the resource.
		/// </summary>
		public Pulumi.IO<System.Collections.Generic.Dictionary<string, string>> Tags { get; set; }

	} // EventHubNamespaceArgs

	/// <summary>
	/// Manage an EventHub Namespace.
	/// </summary>
	public class EventHubNamespace : Pulumi.CustomResource {
		/// <summary>
		/// Is Auto Inflate enabled for the EventHub Namespace?
		/// </summary>
		public Pulumi.IO<bool> AutoInflateEnabled { get; set; }

		/// <summary>
		/// Specifies the Capacity / Throughput Units for a `Standard` SKU namespace. Valid values range from 1 - 20.
		/// </summary>
		public Pulumi.IO<int> Capacity { get; set; }

		/// <summary>
		/// The primary connection string for the authorization
		/// rule `RootManageSharedAccessKey`.
		/// </summary>
		public Pulumi.IO<string> DefaultPrimaryConnectionString { get; set; }

		/// <summary>
		/// The primary access key for the authorization rule `RootManageSharedAccessKey`.
		/// </summary>
		public Pulumi.IO<string> DefaultPrimaryKey { get; set; }

		/// <summary>
		/// The secondary connection string for the
		/// authorization rule `RootManageSharedAccessKey`.
		/// </summary>
		public Pulumi.IO<string> DefaultSecondaryConnectionString { get; set; }

		/// <summary>
		/// The secondary access key for the authorization rule `RootManageSharedAccessKey`.
		/// </summary>
		public Pulumi.IO<string> DefaultSecondaryKey { get; set; }

		/// <summary>
		/// Is Kafka enabled for the EventHub Namespace? Defaults to `false`.
		/// </summary>
		public Pulumi.IO<bool> KafkaEnabled { get; set; }

		/// <summary>
		/// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Location { get; set; }

		/// <summary>
		/// Specifies the maximum number of throughput units when Auto Inflate is Enabled. Valid values range from 1 - 20.
		/// </summary>
		public Pulumi.IO<int> MaximumThroughputUnits { get; set; }

		/// <summary>
		/// Specifies the name of the EventHub Namespace resource. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// The name of the resource group in which to create the namespace. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ResourceGroupName { get; set; }

		/// <summary>
		/// Defines which tier to use. Valid options are `Basic` and `Standard`.
		/// </summary>
		public Pulumi.IO<string> Sku { get; set; }

		/// <summary>
		/// A mapping of tags to assign to the resource.
		/// </summary>
		public Pulumi.IO<System.Collections.Generic.Dictionary<string, string>> Tags { get; set; }

		public EventHubNamespace(string name, EventHubNamespaceArgs args, Pulumi.ResourceOptions opts = default(Pulumi.ResourceOptions))
			: base("azure:eventhub/eventHubNamespace:EventHubNamespace", name, SerialiseArgs(args), opts) {
			AutoInflateEnabled = base.Outputs["autoInflateEnabled"].Select(item => Protobuf.ToBool(item));
			Capacity = base.Outputs["capacity"].Select(item => Protobuf.ToInt(item));
			DefaultPrimaryConnectionString = base.Outputs["defaultPrimaryConnectionString"].Select(item => Protobuf.ToString(item));
			DefaultPrimaryKey = base.Outputs["defaultPrimaryKey"].Select(item => Protobuf.ToString(item));
			DefaultSecondaryConnectionString = base.Outputs["defaultSecondaryConnectionString"].Select(item => Protobuf.ToString(item));
			DefaultSecondaryKey = base.Outputs["defaultSecondaryKey"].Select(item => Protobuf.ToString(item));
			KafkaEnabled = base.Outputs["kafkaEnabled"].Select(item => Protobuf.ToBool(item));
			Location = base.Outputs["location"].Select(item => Protobuf.ToString(item));
			MaximumThroughputUnits = base.Outputs["maximumThroughputUnits"].Select(item => Protobuf.ToInt(item));
			Name = base.Outputs["name"].Select(item => Protobuf.ToString(item));
			ResourceGroupName = base.Outputs["resourceGroupName"].Select(item => Protobuf.ToString(item));
			Sku = base.Outputs["sku"].Select(item => Protobuf.ToString(item));
			Tags = base.Outputs["tags"].Select(item => Protobuf.ToMap(item));
		} // ctor

		private static Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>> SerialiseArgs(EventHubNamespaceArgs args) {
			var props = new Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>();
			props["autoInflateEnabled"] = Protobuf.ToProtobuf(args.AutoInflateEnabled);
			props["capacity"] = Protobuf.ToProtobuf(args.Capacity);
			props["kafkaEnabled"] = Protobuf.ToProtobuf(args.KafkaEnabled);
			props["location"] = Protobuf.ToProtobuf(args.Location);
			props["maximumThroughputUnits"] = Protobuf.ToProtobuf(args.MaximumThroughputUnits);
			props["name"] = Protobuf.ToProtobuf(args.Name);
			props["resourceGroupName"] = Protobuf.ToProtobuf(args.ResourceGroupName);
			props["sku"] = Protobuf.ToProtobuf(args.Sku);
			props["tags"] = Protobuf.ToProtobuf(args.Tags);
			props["defaultPrimaryConnectionString"] = null; //out
			props["defaultPrimaryKey"] = null; //out
			props["defaultSecondaryConnectionString"] = null; //out
			props["defaultSecondaryKey"] = null; //out
			return props;
		} // SerialiseArgs

	} // EventHubNamespace
} // Pulumi.Azure.Eventhub
