// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Azure.Eventhub {

	/// <summary>
	/// The set of arguments for constructing a EventGridTopic resource.
	/// </summary>
	public struct EventGridTopicArgs {
		/// <summary>
		/// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Location { get; set; }

		/// <summary>
		/// Specifies the name of the EventGrid Topic resource. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// The name of the resource group in which the EventGrid Topic exists. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ResourceGroupName { get; set; }

		/// <summary>
		/// A mapping of tags to assign to the resource.
		/// </summary>
		public Pulumi.IO<System.Collections.Generic.Dictionary<string, string>> Tags { get; set; }

	} // EventGridTopicArgs

	/// <summary>
	/// Manages an EventGrid Topic
	/// 
	/// > **Note:** at this time EventGrid Topic's are only available in a limited number of regions.
	/// </summary>
	public class EventGridTopic : Pulumi.CustomResource {
		/// <summary>
		/// The Endpoint associated with the EventGrid Topic.
		/// </summary>
		public Pulumi.IO<string> Endpoint { get; set; }

		/// <summary>
		/// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Location { get; set; }

		/// <summary>
		/// Specifies the name of the EventGrid Topic resource. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// The Primary Shared Access Key associated with the EventGrid Topic.
		/// </summary>
		public Pulumi.IO<string> PrimaryAccessKey { get; set; }

		/// <summary>
		/// The name of the resource group in which the EventGrid Topic exists. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ResourceGroupName { get; set; }

		/// <summary>
		/// The Secondary Shared Access Key associated with the EventGrid Topic.
		/// </summary>
		public Pulumi.IO<string> SecondaryAccessKey { get; set; }

		/// <summary>
		/// A mapping of tags to assign to the resource.
		/// </summary>
		public Pulumi.IO<System.Collections.Generic.Dictionary<string, string>> Tags { get; set; }

		public EventGridTopic(string name, EventGridTopicArgs args, Pulumi.ResourceOptions opts = default(Pulumi.ResourceOptions))
			: base("azure:eventhub/eventGridTopic:EventGridTopic", name, SerialiseArgs(args), opts) {
			Endpoint = base.Outputs["endpoint"].Select(item => Protobuf.ToString(item));
			Location = base.Outputs["location"].Select(item => Protobuf.ToString(item));
			Name = base.Outputs["name"].Select(item => Protobuf.ToString(item));
			PrimaryAccessKey = base.Outputs["primaryAccessKey"].Select(item => Protobuf.ToString(item));
			ResourceGroupName = base.Outputs["resourceGroupName"].Select(item => Protobuf.ToString(item));
			SecondaryAccessKey = base.Outputs["secondaryAccessKey"].Select(item => Protobuf.ToString(item));
			Tags = base.Outputs["tags"].Select(item => Protobuf.ToMap(item));
		} // ctor

		private static Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>> SerialiseArgs(EventGridTopicArgs args) {
			var props = new Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>();
			props["location"] = Protobuf.ToProtobuf(args.Location);
			props["name"] = Protobuf.ToProtobuf(args.Name);
			props["resourceGroupName"] = Protobuf.ToProtobuf(args.ResourceGroupName);
			props["tags"] = Protobuf.ToProtobuf(args.Tags);
			props["endpoint"] = null; //out
			props["primaryAccessKey"] = null; //out
			props["secondaryAccessKey"] = null; //out
			return props;
		} // SerialiseArgs

	} // EventGridTopic
} // Pulumi.Azure.Eventhub
