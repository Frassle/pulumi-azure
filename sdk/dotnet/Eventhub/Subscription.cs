// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Azure.Eventhub {

	/// <summary>
	/// The set of arguments for constructing a Subscription resource.
	/// </summary>
	public struct SubscriptionArgs {
		/// <summary>
		/// The idle interval after which the
		/// Subscription is automatically deleted, minimum of 5 minutes. Provided in the
		/// TimeSpan format.
		/// </summary>
		public Pulumi.IO<string> AutoDeleteOnIdle { get; set; }

		public Pulumi.IO<bool> DeadLetteringOnFilterEvaluationExceptions { get; set; }

		/// <summary>
		/// Boolean flag which controls
		/// whether the Subscription has dead letter support when a message expires. Defaults
		/// to false.
		/// </summary>
		public Pulumi.IO<bool> DeadLetteringOnMessageExpiration { get; set; }

		/// <summary>
		/// The TTL of messages sent to this Subscription
		/// if no TTL value is set on the message itself. Provided in the TimeSpan
		/// format.
		/// </summary>
		public Pulumi.IO<string> DefaultMessageTtl { get; set; }

		/// <summary>
		/// Boolean flag which controls whether the
		/// Subscription supports batched operations. Defaults to false.
		/// </summary>
		public Pulumi.IO<bool> EnableBatchedOperations { get; set; }

		/// <summary>
		/// The name of a Queue or Topic to automatically forward 
		/// messages to.
		/// </summary>
		public Pulumi.IO<string> ForwardTo { get; set; }

		/// <summary>
		/// Specifies the supported Azure location where the resource exists.
		/// Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Location { get; set; }

		/// <summary>
		/// The lock duration for the subscription, maximum
		/// supported value is 5 minutes. Defaults to 1 minute.
		/// </summary>
		public Pulumi.IO<string> LockDuration { get; set; }

		/// <summary>
		/// The maximum number of deliveries.
		/// </summary>
		public Pulumi.IO<int> MaxDeliveryCount { get; set; }

		/// <summary>
		/// Specifies the name of the ServiceBus Subscription resource.
		/// Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// The name of the ServiceBus Namespace to create
		/// this Subscription in. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> NamespaceName { get; set; }

		/// <summary>
		/// Boolean flag which controls whether this Subscription
		/// supports the concept of a session. Defaults to false. Changing this forces a
		/// new resource to be created.
		/// </summary>
		public Pulumi.IO<bool> RequiresSession { get; set; }

		/// <summary>
		/// The name of the resource group in which to
		/// create the namespace. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ResourceGroupName { get; set; }

		/// <summary>
		/// The name of the ServiceBus Topic to create
		/// this Subscription in. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> TopicName { get; set; }

	} // SubscriptionArgs

	/// <summary>
	/// Manage a ServiceBus Subscription.
	/// </summary>
	public class Subscription : Pulumi.CustomResource {
		/// <summary>
		/// The idle interval after which the
		/// Subscription is automatically deleted, minimum of 5 minutes. Provided in the
		/// TimeSpan format.
		/// </summary>
		public Pulumi.IO<string> AutoDeleteOnIdle { get; set; }

		public Pulumi.IO<bool> DeadLetteringOnFilterEvaluationExceptions { get; set; }

		/// <summary>
		/// Boolean flag which controls
		/// whether the Subscription has dead letter support when a message expires. Defaults
		/// to false.
		/// </summary>
		public Pulumi.IO<bool> DeadLetteringOnMessageExpiration { get; set; }

		/// <summary>
		/// The TTL of messages sent to this Subscription
		/// if no TTL value is set on the message itself. Provided in the TimeSpan
		/// format.
		/// </summary>
		public Pulumi.IO<string> DefaultMessageTtl { get; set; }

		/// <summary>
		/// Boolean flag which controls whether the
		/// Subscription supports batched operations. Defaults to false.
		/// </summary>
		public Pulumi.IO<bool> EnableBatchedOperations { get; set; }

		/// <summary>
		/// The name of a Queue or Topic to automatically forward 
		/// messages to.
		/// </summary>
		public Pulumi.IO<string> ForwardTo { get; set; }

		/// <summary>
		/// Specifies the supported Azure location where the resource exists.
		/// Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Location { get; set; }

		/// <summary>
		/// The lock duration for the subscription, maximum
		/// supported value is 5 minutes. Defaults to 1 minute.
		/// </summary>
		public Pulumi.IO<string> LockDuration { get; set; }

		/// <summary>
		/// The maximum number of deliveries.
		/// </summary>
		public Pulumi.IO<int> MaxDeliveryCount { get; set; }

		/// <summary>
		/// Specifies the name of the ServiceBus Subscription resource.
		/// Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// The name of the ServiceBus Namespace to create
		/// this Subscription in. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> NamespaceName { get; set; }

		/// <summary>
		/// Boolean flag which controls whether this Subscription
		/// supports the concept of a session. Defaults to false. Changing this forces a
		/// new resource to be created.
		/// </summary>
		public Pulumi.IO<bool> RequiresSession { get; set; }

		/// <summary>
		/// The name of the resource group in which to
		/// create the namespace. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ResourceGroupName { get; set; }

		/// <summary>
		/// The name of the ServiceBus Topic to create
		/// this Subscription in. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> TopicName { get; set; }

		public Subscription(string name, SubscriptionArgs args, Pulumi.ResourceOptions opts = default(Pulumi.ResourceOptions))
			: base("azure:eventhub/subscription:Subscription", name, SerialiseArgs(args), opts) {
			AutoDeleteOnIdle = base.Outputs["autoDeleteOnIdle"].Select(item => Protobuf.ToString(item));
			DeadLetteringOnFilterEvaluationExceptions = base.Outputs["deadLetteringOnFilterEvaluationExceptions"].Select(item => Protobuf.ToBool(item));
			DeadLetteringOnMessageExpiration = base.Outputs["deadLetteringOnMessageExpiration"].Select(item => Protobuf.ToBool(item));
			DefaultMessageTtl = base.Outputs["defaultMessageTtl"].Select(item => Protobuf.ToString(item));
			EnableBatchedOperations = base.Outputs["enableBatchedOperations"].Select(item => Protobuf.ToBool(item));
			ForwardTo = base.Outputs["forwardTo"].Select(item => Protobuf.ToString(item));
			Location = base.Outputs["location"].Select(item => Protobuf.ToString(item));
			LockDuration = base.Outputs["lockDuration"].Select(item => Protobuf.ToString(item));
			MaxDeliveryCount = base.Outputs["maxDeliveryCount"].Select(item => Protobuf.ToInt(item));
			Name = base.Outputs["name"].Select(item => Protobuf.ToString(item));
			NamespaceName = base.Outputs["namespaceName"].Select(item => Protobuf.ToString(item));
			RequiresSession = base.Outputs["requiresSession"].Select(item => Protobuf.ToBool(item));
			ResourceGroupName = base.Outputs["resourceGroupName"].Select(item => Protobuf.ToString(item));
			TopicName = base.Outputs["topicName"].Select(item => Protobuf.ToString(item));
		} // ctor

		private static Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>> SerialiseArgs(SubscriptionArgs args) {
			var props = new Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>();
			props["autoDeleteOnIdle"] = Protobuf.ToProtobuf(args.AutoDeleteOnIdle);
			props["deadLetteringOnFilterEvaluationExceptions"] = Protobuf.ToProtobuf(args.DeadLetteringOnFilterEvaluationExceptions);
			props["deadLetteringOnMessageExpiration"] = Protobuf.ToProtobuf(args.DeadLetteringOnMessageExpiration);
			props["defaultMessageTtl"] = Protobuf.ToProtobuf(args.DefaultMessageTtl);
			props["enableBatchedOperations"] = Protobuf.ToProtobuf(args.EnableBatchedOperations);
			props["forwardTo"] = Protobuf.ToProtobuf(args.ForwardTo);
			props["location"] = Protobuf.ToProtobuf(args.Location);
			props["lockDuration"] = Protobuf.ToProtobuf(args.LockDuration);
			props["maxDeliveryCount"] = Protobuf.ToProtobuf(args.MaxDeliveryCount);
			props["name"] = Protobuf.ToProtobuf(args.Name);
			props["namespaceName"] = Protobuf.ToProtobuf(args.NamespaceName);
			props["requiresSession"] = Protobuf.ToProtobuf(args.RequiresSession);
			props["resourceGroupName"] = Protobuf.ToProtobuf(args.ResourceGroupName);
			props["topicName"] = Protobuf.ToProtobuf(args.TopicName);
			return props;
		} // SerialiseArgs

	} // Subscription
} // Pulumi.Azure.Eventhub
