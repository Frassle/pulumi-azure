// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Azure.Managementgroups {

	/// <summary>
	/// The set of arguments for constructing a ManagementGroup resource.
	/// </summary>
	public struct ManagementGroupArgs {
		/// <summary>
		/// A friendly name for this Management Group. If not specified, this'll be the same as the `group_id`.
		/// </summary>
		public Pulumi.IO<string> DisplayName { get; set; }

		/// <summary>
		/// The UUID for this Management Group, which needs to be unique across your tenant - which will be generated if not provided. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> GroupId { get; set; }

		/// <summary>
		/// The ID of the Parent Management Group. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ParentManagementGroupId { get; set; }

		/// <summary>
		/// A list of Subscription ID's which should be assigned to the Management Group.
		/// </summary>
		public Pulumi.IO<Pulumi.IO<string>[]> SubscriptionIds { get; set; }

	} // ManagementGroupArgs

	/// <summary>
	/// Manages a Management Group.
	/// </summary>
	public class ManagementGroup : Pulumi.CustomResource {
		/// <summary>
		/// A friendly name for this Management Group. If not specified, this'll be the same as the `group_id`.
		/// </summary>
		public Pulumi.IO<string> DisplayName { get; set; }

		/// <summary>
		/// The UUID for this Management Group, which needs to be unique across your tenant - which will be generated if not provided. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> GroupId { get; set; }

		/// <summary>
		/// The ID of the Parent Management Group. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ParentManagementGroupId { get; set; }

		/// <summary>
		/// A list of Subscription ID's which should be assigned to the Management Group.
		/// </summary>
		public Pulumi.IO<string[]> SubscriptionIds { get; set; }

		public ManagementGroup(string name, ManagementGroupArgs args, Pulumi.ResourceOptions opts = default(Pulumi.ResourceOptions))
			: base("azure:managementgroups/managementGroup:ManagementGroup", name, SerialiseArgs(args), opts) {
			DisplayName = base.Outputs["displayName"].Select(item => Protobuf.ToString(item));
			GroupId = base.Outputs["groupId"].Select(item => Protobuf.ToString(item));
			ParentManagementGroupId = base.Outputs["parentManagementGroupId"].Select(item => Protobuf.ToString(item));
			SubscriptionIds = base.Outputs["subscriptionIds"].Select(item => Protobuf.ToList(item, item1 => Protobuf.ToString(item1)));
		} // ctor

		private static Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>> SerialiseArgs(ManagementGroupArgs args) {
			var props = new Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>();
			props["displayName"] = Protobuf.ToProtobuf(args.DisplayName);
			props["groupId"] = Protobuf.ToProtobuf(args.GroupId);
			props["parentManagementGroupId"] = Protobuf.ToProtobuf(args.ParentManagementGroupId);
			props["subscriptionIds"] = Protobuf.ToProtobuf(args.SubscriptionIds, item => Protobuf.ToProtobuf(item));
			return props;
		} // SerialiseArgs

	} // ManagementGroup
} // Pulumi.Azure.Managementgroups
