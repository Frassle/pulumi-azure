// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Azure.Storage {

	/// <summary>
	/// The set of arguments for constructing a Container resource.
	/// </summary>
	public struct ContainerArgs {
		/// <summary>
		/// The 'interface' for access the container provides. Can be either `blob`, `container` or `private`. Defaults to `private`.
		/// </summary>
		public Pulumi.IO<string> ContainerAccessType { get; set; }

		/// <summary>
		/// The name of the storage container. Must be unique within the storage service the container is located.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// The name of the resource group in which to
		/// create the storage container. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ResourceGroupName { get; set; }

		/// <summary>
		/// Specifies the storage account in which to create the storage container.
		/// Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> StorageAccountName { get; set; }

	} // ContainerArgs

	/// <summary>
	/// Manage an Azure Storage Container.
	/// </summary>
	public class Container : Pulumi.CustomResource {
		/// <summary>
		/// The 'interface' for access the container provides. Can be either `blob`, `container` or `private`. Defaults to `private`.
		/// </summary>
		public Pulumi.IO<string> ContainerAccessType { get; set; }

		/// <summary>
		/// The name of the storage container. Must be unique within the storage service the container is located.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// Key-value definition of additional properties associated to the storage container
		/// </summary>
		public Pulumi.IO<System.Collections.Generic.Dictionary<string, string>> Properties { get; set; }

		/// <summary>
		/// The name of the resource group in which to
		/// create the storage container. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ResourceGroupName { get; set; }

		/// <summary>
		/// Specifies the storage account in which to create the storage container.
		/// Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> StorageAccountName { get; set; }

		public Container(string name, ContainerArgs args, Pulumi.ResourceOptions opts = default(Pulumi.ResourceOptions))
			: base("azure:storage/container:Container", name, SerialiseArgs(args), opts) {
			ContainerAccessType = base.Outputs["containerAccessType"].Select(item => Protobuf.ToString(item));
			Name = base.Outputs["name"].Select(item => Protobuf.ToString(item));
			Properties = base.Outputs["properties"].Select(item => Protobuf.ToMap(item));
			ResourceGroupName = base.Outputs["resourceGroupName"].Select(item => Protobuf.ToString(item));
			StorageAccountName = base.Outputs["storageAccountName"].Select(item => Protobuf.ToString(item));
		} // ctor

		private static Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>> SerialiseArgs(ContainerArgs args) {
			var props = new Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>();
			props["containerAccessType"] = Protobuf.ToProtobuf(args.ContainerAccessType);
			props["name"] = Protobuf.ToProtobuf(args.Name);
			props["resourceGroupName"] = Protobuf.ToProtobuf(args.ResourceGroupName);
			props["storageAccountName"] = Protobuf.ToProtobuf(args.StorageAccountName);
			props["properties"] = null; //out
			return props;
		} // SerialiseArgs

	} // Container
} // Pulumi.Azure.Storage
