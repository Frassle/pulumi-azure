// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Azure.Storage {

	/// <summary>
	/// The set of arguments for constructing a ZipBlob resource.
	/// </summary>
	public struct ZipBlobArgs {
		public Pulumi.IO<int> Attempts { get; set; }

		public Pulumi.IO<string> ContentType { get; set; }

		public Pulumi.IO<string> Name { get; set; }

		public Pulumi.IO<int> Parallelism { get; set; }

		public Pulumi.IO<string> ResourceGroupName { get; set; }

		public Pulumi.IO<int> Size { get; set; }

		public Pulumi.IO<string> Content { get; set; }

		public Pulumi.IO<string> SourceUri { get; set; }

		public Pulumi.IO<string> StorageAccountName { get; set; }

		public Pulumi.IO<string> StorageContainerName { get; set; }

		public Pulumi.IO<string> Type { get; set; }

	} // ZipBlobArgs

	public class ZipBlob : Pulumi.CustomResource {
		public Pulumi.IO<int> Attempts { get; set; }

		public Pulumi.IO<string> ContentType { get; set; }

		public Pulumi.IO<string> Name { get; set; }

		public Pulumi.IO<int> Parallelism { get; set; }

		public Pulumi.IO<string> ResourceGroupName { get; set; }

		public Pulumi.IO<int> Size { get; set; }

		public Pulumi.IO<string> Content { get; set; }

		public Pulumi.IO<string> SourceUri { get; set; }

		public Pulumi.IO<string> StorageAccountName { get; set; }

		public Pulumi.IO<string> StorageContainerName { get; set; }

		public Pulumi.IO<string> Type { get; set; }

		public Pulumi.IO<string> Url { get; set; }

		public ZipBlob(string name, ZipBlobArgs args, Pulumi.ResourceOptions opts = default(Pulumi.ResourceOptions))
			: base("azure:storage/zipBlob:ZipBlob", name, SerialiseArgs(args), opts) {
			Attempts = base.Outputs["attempts"].Select(item => Protobuf.ToInt(item));
			ContentType = base.Outputs["contentType"].Select(item => Protobuf.ToString(item));
			Name = base.Outputs["name"].Select(item => Protobuf.ToString(item));
			Parallelism = base.Outputs["parallelism"].Select(item => Protobuf.ToInt(item));
			ResourceGroupName = base.Outputs["resourceGroupName"].Select(item => Protobuf.ToString(item));
			Size = base.Outputs["size"].Select(item => Protobuf.ToInt(item));
			Content = base.Outputs["content"].Select(item => Protobuf.ToString(item));
			SourceUri = base.Outputs["sourceUri"].Select(item => Protobuf.ToString(item));
			StorageAccountName = base.Outputs["storageAccountName"].Select(item => Protobuf.ToString(item));
			StorageContainerName = base.Outputs["storageContainerName"].Select(item => Protobuf.ToString(item));
			Type = base.Outputs["type"].Select(item => Protobuf.ToString(item));
			Url = base.Outputs["url"].Select(item => Protobuf.ToString(item));
		} // ctor

		private static Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>> SerialiseArgs(ZipBlobArgs args) {
			var props = new Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>();
			props["attempts"] = Protobuf.ToProtobuf(args.Attempts);
			props["contentType"] = Protobuf.ToProtobuf(args.ContentType);
			props["name"] = Protobuf.ToProtobuf(args.Name);
			props["parallelism"] = Protobuf.ToProtobuf(args.Parallelism);
			props["resourceGroupName"] = Protobuf.ToProtobuf(args.ResourceGroupName);
			props["size"] = Protobuf.ToProtobuf(args.Size);
			props["content"] = Protobuf.ToProtobuf(args.Content);
			props["sourceUri"] = Protobuf.ToProtobuf(args.SourceUri);
			props["storageAccountName"] = Protobuf.ToProtobuf(args.StorageAccountName);
			props["storageContainerName"] = Protobuf.ToProtobuf(args.StorageContainerName);
			props["type"] = Protobuf.ToProtobuf(args.Type);
			props["url"] = null; //out
			return props;
		} // SerialiseArgs

	} // ZipBlob
} // Pulumi.Azure.Storage
