// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Azure.Storage {

	public sealed class GetAccountCustomDomain : Pulumi.IProtobuf {
		public string Name { get; set; }

		public Google.Protobuf.WellKnownTypes.Value ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Google.Protobuf.WellKnownTypes.Value>("name", Protobuf.ToProtobuf(Name)));
		} // ToProtobuf

		public static GetAccountCustomDomain FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new GetAccountCustomDomain();
				if (obj.Fields.ContainsKey("name")) {
					result.Name = Protobuf.ToString(obj.Fields["name"]);
				}
			return result;
		} // FromProtobuf

	} // GetAccountCustomDomain

	/// <summary>
	/// A collection of arguments for invoking getAccount.
	/// </summary>
	public struct GetAccountArgs {
		/// <summary>
		/// Specifies the name of the Storage Account
		/// </summary>
		public string Name { get; set; }

		/// <summary>
		/// Specifies the name of the resource group the Storage Account is located in.
		/// </summary>
		public string ResourceGroupName { get; set; }

	} // GetAccountArgs

	/// <summary>
	/// A collection of values returned by getAccount.
	/// </summary>
	public struct GetAccountResult {
		/// <summary>
		/// The access tier for `BlobStorage` accounts.
		/// </summary>
		public string AccessTier { get; set; }

		/// <summary>
		/// The Encryption Source for this Storage Account.
		/// </summary>
		public string AccountEncryptionSource { get; set; }

		/// <summary>
		/// The Kind of account.
		/// </summary>
		public string AccountKind { get; set; }

		/// <summary>
		/// The type of replication used for this storage account.
		/// </summary>
		public string AccountReplicationType { get; set; }

		/// <summary>
		/// The Tier of this storage account.
		/// </summary>
		public string AccountTier { get; set; }

		/// <summary>
		/// A `custom_domain` block as documented below.
		/// </summary>
		public GetAccountCustomDomain CustomDomain { get; set; }

		/// <summary>
		/// Are Encryption Services are enabled for Blob storage? See [here](https://azure.microsoft.com/en-us/documentation/articles/storage-service-encryption/)
		/// for more information.
		/// </summary>
		public bool EnableBlobEncryption { get; set; }

		/// <summary>
		/// Are Encryption Services are enabled for File storage? See [here](https://azure.microsoft.com/en-us/documentation/articles/storage-service-encryption/)
		/// for more information.
		/// </summary>
		public bool EnableFileEncryption { get; set; }

		/// <summary>
		/// Is traffic only allowed via HTTPS? See [here](https://docs.microsoft.com/en-us/azure/storage/storage-require-secure-transfer/)
		/// for more information.
		/// </summary>
		public bool EnableHttpsTrafficOnly { get; set; }

		/// <summary>
		/// The Azure location where the Storage Account exists
		/// </summary>
		public string Location { get; set; }

		/// <summary>
		/// The primary access key for the Storage Account.
		/// </summary>
		public string PrimaryAccessKey { get; set; }

		/// <summary>
		/// The connection string associated with the primary blob location
		/// </summary>
		public string PrimaryBlobConnectionString { get; set; }

		/// <summary>
		/// The endpoint URL for blob storage in the primary location.
		/// </summary>
		public string PrimaryBlobEndpoint { get; set; }

		/// <summary>
		/// The connection string associated with the primary location
		/// </summary>
		public string PrimaryConnectionString { get; set; }

		/// <summary>
		/// The endpoint URL for file storage in the primary location.
		/// </summary>
		public string PrimaryFileEndpoint { get; set; }

		/// <summary>
		/// The primary location of the Storage Account.
		/// </summary>
		public string PrimaryLocation { get; set; }

		/// <summary>
		/// The endpoint URL for queue storage in the primary location.
		/// </summary>
		public string PrimaryQueueEndpoint { get; set; }

		/// <summary>
		/// The endpoint URL for table storage in the primary location.
		/// </summary>
		public string PrimaryTableEndpoint { get; set; }

		/// <summary>
		/// The secondary access key for the Storage Account.
		/// </summary>
		public string SecondaryAccessKey { get; set; }

		/// <summary>
		/// The connection string associated with the secondary blob location
		/// </summary>
		public string SecondaryBlobConnectionString { get; set; }

		/// <summary>
		/// The endpoint URL for blob storage in the secondary location.
		/// </summary>
		public string SecondaryBlobEndpoint { get; set; }

		/// <summary>
		/// The connection string associated with the secondary location
		/// </summary>
		public string SecondaryConnectionString { get; set; }

		/// <summary>
		/// The secondary location of the Storage Account.
		/// </summary>
		public string SecondaryLocation { get; set; }

		/// <summary>
		/// The endpoint URL for queue storage in the secondary location.
		/// </summary>
		public string SecondaryQueueEndpoint { get; set; }

		/// <summary>
		/// The endpoint URL for table storage in the secondary location.
		/// </summary>
		public string SecondaryTableEndpoint { get; set; }

		/// <summary>
		/// A mapping of tags to assigned to the resource.
		/// </summary>
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }

		/// <summary>
		/// id is the provider-assigned unique ID for this managed resource.
		/// </summary>
		public string Id { get; set; }

	} // GetAccountResult

	public static partial class StorageModule {
		/// <summary>
		/// Use this data source to access information about an existing Storage Account.
		/// </summary>
		public static System.Threading.Tasks.Task<GetAccountResult> GetAccount(GetAccountArgs args, Pulumi.InvokeOptions opts = default(Pulumi.InvokeOptions)) {
			var invokeArgs = new Google.Protobuf.WellKnownTypes.Struct();
			invokeArgs.Fields["name"] = Protobuf.ToProtobuf(args.Name);
			invokeArgs.Fields["resourceGroupName"] = Protobuf.ToProtobuf(args.ResourceGroupName);

			var task = Pulumi.Runtime.InvokeAsync("azure:storage/getAccount:getAccount", invokeArgs, opts);

			return task.ContinueWith(response => {
				var protobuf = response.Result;
				var result = new GetAccountResult();
				if (protobuf.Fields.ContainsKey("accessTier")) {
					result.AccessTier = Protobuf.ToString(protobuf.Fields["accessTier"]);
				}
				if (protobuf.Fields.ContainsKey("accountEncryptionSource")) {
					result.AccountEncryptionSource = Protobuf.ToString(protobuf.Fields["accountEncryptionSource"]);
				}
				if (protobuf.Fields.ContainsKey("accountKind")) {
					result.AccountKind = Protobuf.ToString(protobuf.Fields["accountKind"]);
				}
				if (protobuf.Fields.ContainsKey("accountReplicationType")) {
					result.AccountReplicationType = Protobuf.ToString(protobuf.Fields["accountReplicationType"]);
				}
				if (protobuf.Fields.ContainsKey("accountTier")) {
					result.AccountTier = Protobuf.ToString(protobuf.Fields["accountTier"]);
				}
				if (protobuf.Fields.ContainsKey("customDomain")) {
					result.CustomDomain = GetAccountCustomDomain.FromProtobuf(protobuf.Fields["customDomain"]);
				}
				if (protobuf.Fields.ContainsKey("enableBlobEncryption")) {
					result.EnableBlobEncryption = Protobuf.ToBool(protobuf.Fields["enableBlobEncryption"]);
				}
				if (protobuf.Fields.ContainsKey("enableFileEncryption")) {
					result.EnableFileEncryption = Protobuf.ToBool(protobuf.Fields["enableFileEncryption"]);
				}
				if (protobuf.Fields.ContainsKey("enableHttpsTrafficOnly")) {
					result.EnableHttpsTrafficOnly = Protobuf.ToBool(protobuf.Fields["enableHttpsTrafficOnly"]);
				}
				if (protobuf.Fields.ContainsKey("location")) {
					result.Location = Protobuf.ToString(protobuf.Fields["location"]);
				}
				if (protobuf.Fields.ContainsKey("primaryAccessKey")) {
					result.PrimaryAccessKey = Protobuf.ToString(protobuf.Fields["primaryAccessKey"]);
				}
				if (protobuf.Fields.ContainsKey("primaryBlobConnectionString")) {
					result.PrimaryBlobConnectionString = Protobuf.ToString(protobuf.Fields["primaryBlobConnectionString"]);
				}
				if (protobuf.Fields.ContainsKey("primaryBlobEndpoint")) {
					result.PrimaryBlobEndpoint = Protobuf.ToString(protobuf.Fields["primaryBlobEndpoint"]);
				}
				if (protobuf.Fields.ContainsKey("primaryConnectionString")) {
					result.PrimaryConnectionString = Protobuf.ToString(protobuf.Fields["primaryConnectionString"]);
				}
				if (protobuf.Fields.ContainsKey("primaryFileEndpoint")) {
					result.PrimaryFileEndpoint = Protobuf.ToString(protobuf.Fields["primaryFileEndpoint"]);
				}
				if (protobuf.Fields.ContainsKey("primaryLocation")) {
					result.PrimaryLocation = Protobuf.ToString(protobuf.Fields["primaryLocation"]);
				}
				if (protobuf.Fields.ContainsKey("primaryQueueEndpoint")) {
					result.PrimaryQueueEndpoint = Protobuf.ToString(protobuf.Fields["primaryQueueEndpoint"]);
				}
				if (protobuf.Fields.ContainsKey("primaryTableEndpoint")) {
					result.PrimaryTableEndpoint = Protobuf.ToString(protobuf.Fields["primaryTableEndpoint"]);
				}
				if (protobuf.Fields.ContainsKey("secondaryAccessKey")) {
					result.SecondaryAccessKey = Protobuf.ToString(protobuf.Fields["secondaryAccessKey"]);
				}
				if (protobuf.Fields.ContainsKey("secondaryBlobConnectionString")) {
					result.SecondaryBlobConnectionString = Protobuf.ToString(protobuf.Fields["secondaryBlobConnectionString"]);
				}
				if (protobuf.Fields.ContainsKey("secondaryBlobEndpoint")) {
					result.SecondaryBlobEndpoint = Protobuf.ToString(protobuf.Fields["secondaryBlobEndpoint"]);
				}
				if (protobuf.Fields.ContainsKey("secondaryConnectionString")) {
					result.SecondaryConnectionString = Protobuf.ToString(protobuf.Fields["secondaryConnectionString"]);
				}
				if (protobuf.Fields.ContainsKey("secondaryLocation")) {
					result.SecondaryLocation = Protobuf.ToString(protobuf.Fields["secondaryLocation"]);
				}
				if (protobuf.Fields.ContainsKey("secondaryQueueEndpoint")) {
					result.SecondaryQueueEndpoint = Protobuf.ToString(protobuf.Fields["secondaryQueueEndpoint"]);
				}
				if (protobuf.Fields.ContainsKey("secondaryTableEndpoint")) {
					result.SecondaryTableEndpoint = Protobuf.ToString(protobuf.Fields["secondaryTableEndpoint"]);
				}
				if (protobuf.Fields.ContainsKey("tags")) {
					result.Tags = Protobuf.ToMap(protobuf.Fields["tags"]);
				}
				if (protobuf.Fields.ContainsKey("id")) {
					result.Id = Protobuf.ToString(protobuf.Fields["id"]);
				}
				return result;
			});
		} // GetAccount

	} // StorageModule
} // Pulumi.Azure.Storage
