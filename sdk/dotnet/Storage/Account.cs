// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Azure.Storage {

	public sealed class AccountArgsCustomDomain : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> Name { get; set; }
		public Pulumi.IO<bool> UseSubdomain { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("name", Protobuf.ToProtobuf(Name)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("use_subdomain", Protobuf.ToProtobuf(UseSubdomain)));
		} // ToProtobuf

	} // AccountArgsCustomDomain

	public sealed class AccountArgsIdentity : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> PrincipalId { get; set; }
		public Pulumi.IO<string> TenantId { get; set; }
		public Pulumi.IO<string> Type { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("principal_id", Protobuf.ToProtobuf(PrincipalId)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("tenant_id", Protobuf.ToProtobuf(TenantId)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("type", Protobuf.ToProtobuf(Type)));
		} // ToProtobuf

	} // AccountArgsIdentity

	public sealed class AccountArgsNetworkRule : Pulumi.IIOProtobuf {
		public Pulumi.IO<Pulumi.IO<string>[]> Bypass { get; set; }
		public Pulumi.IO<Pulumi.IO<string>[]> IpRules { get; set; }
		public Pulumi.IO<Pulumi.IO<string>[]> VirtualNetworkSubnetIds { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("bypass", Protobuf.ToProtobuf(Bypass, item => Protobuf.ToProtobuf(item))),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("ip_rules", Protobuf.ToProtobuf(IpRules, item => Protobuf.ToProtobuf(item))),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("virtual_network_subnet_ids", Protobuf.ToProtobuf(VirtualNetworkSubnetIds, item => Protobuf.ToProtobuf(item))));
		} // ToProtobuf

	} // AccountArgsNetworkRule

	public sealed class AccountCustomDomain : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> Name { get; set; }
		public Pulumi.IO<bool> UseSubdomain { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("name", Protobuf.ToProtobuf(Name)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("use_subdomain", Protobuf.ToProtobuf(UseSubdomain)));
		} // ToProtobuf

		public static AccountCustomDomain FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new AccountCustomDomain();
				if (obj.Fields.ContainsKey("name")) {
					result.Name = Protobuf.ToString(obj.Fields["name"]);
				}
				if (obj.Fields.ContainsKey("use_subdomain")) {
					result.UseSubdomain = Protobuf.ToBool(obj.Fields["use_subdomain"]);
				}
			return result;
		} // FromProtobuf

	} // AccountCustomDomain

	public sealed class AccountIdentity : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> PrincipalId { get; set; }
		public Pulumi.IO<string> TenantId { get; set; }
		public Pulumi.IO<string> Type { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("principal_id", Protobuf.ToProtobuf(PrincipalId)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("tenant_id", Protobuf.ToProtobuf(TenantId)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("type", Protobuf.ToProtobuf(Type)));
		} // ToProtobuf

		public static AccountIdentity FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new AccountIdentity();
				if (obj.Fields.ContainsKey("principal_id")) {
					result.PrincipalId = Protobuf.ToString(obj.Fields["principal_id"]);
				}
				if (obj.Fields.ContainsKey("tenant_id")) {
					result.TenantId = Protobuf.ToString(obj.Fields["tenant_id"]);
				}
				if (obj.Fields.ContainsKey("type")) {
					result.Type = Protobuf.ToString(obj.Fields["type"]);
				}
			return result;
		} // FromProtobuf

	} // AccountIdentity

	public sealed class AccountNetworkRule : Pulumi.IIOProtobuf {
		public Pulumi.IO<string[]> Bypass { get; set; }
		public Pulumi.IO<string[]> IpRules { get; set; }
		public Pulumi.IO<string[]> VirtualNetworkSubnetIds { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("bypass", Protobuf.ToProtobuf(Bypass, item => Protobuf.ToProtobuf(item))),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("ip_rules", Protobuf.ToProtobuf(IpRules, item => Protobuf.ToProtobuf(item))),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("virtual_network_subnet_ids", Protobuf.ToProtobuf(VirtualNetworkSubnetIds, item => Protobuf.ToProtobuf(item))));
		} // ToProtobuf

		public static AccountNetworkRule FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new AccountNetworkRule();
				if (obj.Fields.ContainsKey("bypass")) {
					result.Bypass = Protobuf.ToList(obj.Fields["bypass"], item => Protobuf.ToString(item));
				}
				if (obj.Fields.ContainsKey("ip_rules")) {
					result.IpRules = Protobuf.ToList(obj.Fields["ip_rules"], item => Protobuf.ToString(item));
				}
				if (obj.Fields.ContainsKey("virtual_network_subnet_ids")) {
					result.VirtualNetworkSubnetIds = Protobuf.ToList(obj.Fields["virtual_network_subnet_ids"], item => Protobuf.ToString(item));
				}
			return result;
		} // FromProtobuf

	} // AccountNetworkRule

	/// <summary>
	/// The set of arguments for constructing a Account resource.
	/// </summary>
	public struct AccountArgs {
		/// <summary>
		/// Defines the access tier for `BlobStorage` and `StorageV2` accounts. Valid options are `Hot` and `Cool`, defaults to `Hot`.
		/// </summary>
		public Pulumi.IO<string> AccessTier { get; set; }

		/// <summary>
		/// The Encryption Source for this Storage Account. Possible values are `Microsoft.Keyvault` and `Microsoft.Storage`. Defaults to `Microsoft.Storage`.
		/// </summary>
		public Pulumi.IO<string> AccountEncryptionSource { get; set; }

		/// <summary>
		/// Defines the Kind of account. Valid options are `Storage`,
		/// `StorageV2` and `BlobStorage`. Changing this forces a new resource to be created.
		/// Defaults to `Storage`.
		/// </summary>
		public Pulumi.IO<string> AccountKind { get; set; }

		/// <summary>
		/// Defines the type of replication to use for this storage account. Valid options are `LRS`, `GRS`, `RAGRS` and `ZRS`.
		/// </summary>
		public Pulumi.IO<string> AccountReplicationType { get; set; }

		/// <summary>
		/// Defines the Tier to use for this storage account. Valid options are `Standard` and `Premium`. Changing this forces a new resource to be created
		/// </summary>
		public Pulumi.IO<string> AccountTier { get; set; }

		public Pulumi.IO<string> AccountType { get; set; }

		/// <summary>
		/// A `custom_domain` block as documented below.
		/// </summary>
		public Pulumi.IO<AccountArgsCustomDomain> CustomDomain { get; set; }

		/// <summary>
		/// Boolean flag which controls if Encryption Services are enabled for Blob storage, see [here](https://azure.microsoft.com/en-us/documentation/articles/storage-service-encryption/) for more information. Defaults to `true`.
		/// </summary>
		public Pulumi.IO<bool> EnableBlobEncryption { get; set; }

		/// <summary>
		/// Boolean flag which controls if Encryption Services are enabled for File storage, see [here](https://azure.microsoft.com/en-us/documentation/articles/storage-service-encryption/) for more information. Defaults to `true`.
		/// </summary>
		public Pulumi.IO<bool> EnableFileEncryption { get; set; }

		/// <summary>
		/// Boolean flag which forces HTTPS if enabled, see [here](https://docs.microsoft.com/en-us/azure/storage/storage-require-secure-transfer/)
		/// for more information.
		/// </summary>
		public Pulumi.IO<bool> EnableHttpsTrafficOnly { get; set; }

		/// <summary>
		/// A Managed Service Identity block as defined below.
		/// </summary>
		public Pulumi.IO<AccountArgsIdentity> Identity { get; set; }

		/// <summary>
		/// Specifies the supported Azure location where the
		/// resource exists. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Location { get; set; }

		/// <summary>
		/// The Custom Domain Name to use for the Storage Account, which will be validated by Azure.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// A `network_rules` block as documented below.
		/// </summary>
		public Pulumi.IO<AccountArgsNetworkRule> NetworkRules { get; set; }

		/// <summary>
		/// The name of the resource group in which to
		/// create the storage account. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ResourceGroupName { get; set; }

		/// <summary>
		/// A mapping of tags to assign to the resource.
		/// </summary>
		public Pulumi.IO<System.Collections.Generic.Dictionary<string, string>> Tags { get; set; }

	} // AccountArgs

	/// <summary>
	/// Manage an Azure Storage Account.
	/// </summary>
	public class Account : Pulumi.CustomResource {
		/// <summary>
		/// Defines the access tier for `BlobStorage` and `StorageV2` accounts. Valid options are `Hot` and `Cool`, defaults to `Hot`.
		/// </summary>
		public Pulumi.IO<string> AccessTier { get; set; }

		/// <summary>
		/// The Encryption Source for this Storage Account. Possible values are `Microsoft.Keyvault` and `Microsoft.Storage`. Defaults to `Microsoft.Storage`.
		/// </summary>
		public Pulumi.IO<string> AccountEncryptionSource { get; set; }

		/// <summary>
		/// Defines the Kind of account. Valid options are `Storage`,
		/// `StorageV2` and `BlobStorage`. Changing this forces a new resource to be created.
		/// Defaults to `Storage`.
		/// </summary>
		public Pulumi.IO<string> AccountKind { get; set; }

		/// <summary>
		/// Defines the type of replication to use for this storage account. Valid options are `LRS`, `GRS`, `RAGRS` and `ZRS`.
		/// </summary>
		public Pulumi.IO<string> AccountReplicationType { get; set; }

		/// <summary>
		/// Defines the Tier to use for this storage account. Valid options are `Standard` and `Premium`. Changing this forces a new resource to be created
		/// </summary>
		public Pulumi.IO<string> AccountTier { get; set; }

		public Pulumi.IO<string> AccountType { get; set; }

		/// <summary>
		/// A `custom_domain` block as documented below.
		/// </summary>
		public Pulumi.IO<AccountCustomDomain> CustomDomain { get; set; }

		/// <summary>
		/// Boolean flag which controls if Encryption Services are enabled for Blob storage, see [here](https://azure.microsoft.com/en-us/documentation/articles/storage-service-encryption/) for more information. Defaults to `true`.
		/// </summary>
		public Pulumi.IO<bool> EnableBlobEncryption { get; set; }

		/// <summary>
		/// Boolean flag which controls if Encryption Services are enabled for File storage, see [here](https://azure.microsoft.com/en-us/documentation/articles/storage-service-encryption/) for more information. Defaults to `true`.
		/// </summary>
		public Pulumi.IO<bool> EnableFileEncryption { get; set; }

		/// <summary>
		/// Boolean flag which forces HTTPS if enabled, see [here](https://docs.microsoft.com/en-us/azure/storage/storage-require-secure-transfer/)
		/// for more information.
		/// </summary>
		public Pulumi.IO<bool> EnableHttpsTrafficOnly { get; set; }

		/// <summary>
		/// A Managed Service Identity block as defined below.
		/// </summary>
		public Pulumi.IO<AccountIdentity> Identity { get; set; }

		/// <summary>
		/// Specifies the supported Azure location where the
		/// resource exists. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Location { get; set; }

		/// <summary>
		/// The Custom Domain Name to use for the Storage Account, which will be validated by Azure.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// A `network_rules` block as documented below.
		/// </summary>
		public Pulumi.IO<AccountNetworkRule> NetworkRules { get; set; }

		/// <summary>
		/// The primary access key for the storage account
		/// </summary>
		public Pulumi.IO<string> PrimaryAccessKey { get; set; }

		/// <summary>
		/// The connection string associated with the primary blob location
		/// </summary>
		public Pulumi.IO<string> PrimaryBlobConnectionString { get; set; }

		/// <summary>
		/// The endpoint URL for blob storage in the primary location.
		/// </summary>
		public Pulumi.IO<string> PrimaryBlobEndpoint { get; set; }

		/// <summary>
		/// The connection string associated with the primary location
		/// </summary>
		public Pulumi.IO<string> PrimaryConnectionString { get; set; }

		/// <summary>
		/// The endpoint URL for file storage in the primary location.
		/// </summary>
		public Pulumi.IO<string> PrimaryFileEndpoint { get; set; }

		/// <summary>
		/// The primary location of the storage account.
		/// </summary>
		public Pulumi.IO<string> PrimaryLocation { get; set; }

		/// <summary>
		/// The endpoint URL for queue storage in the primary location.
		/// </summary>
		public Pulumi.IO<string> PrimaryQueueEndpoint { get; set; }

		/// <summary>
		/// The endpoint URL for table storage in the primary location.
		/// </summary>
		public Pulumi.IO<string> PrimaryTableEndpoint { get; set; }

		/// <summary>
		/// The name of the resource group in which to
		/// create the storage account. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ResourceGroupName { get; set; }

		/// <summary>
		/// The secondary access key for the storage account
		/// </summary>
		public Pulumi.IO<string> SecondaryAccessKey { get; set; }

		/// <summary>
		/// The connection string associated with the secondary blob location
		/// </summary>
		public Pulumi.IO<string> SecondaryBlobConnectionString { get; set; }

		/// <summary>
		/// The endpoint URL for blob storage in the secondary location.
		/// </summary>
		public Pulumi.IO<string> SecondaryBlobEndpoint { get; set; }

		/// <summary>
		/// The connection string associated with the secondary location
		/// </summary>
		public Pulumi.IO<string> SecondaryConnectionString { get; set; }

		/// <summary>
		/// The secondary location of the storage account.
		/// </summary>
		public Pulumi.IO<string> SecondaryLocation { get; set; }

		/// <summary>
		/// The endpoint URL for queue storage in the secondary location.
		/// </summary>
		public Pulumi.IO<string> SecondaryQueueEndpoint { get; set; }

		/// <summary>
		/// The endpoint URL for table storage in the secondary location.
		/// </summary>
		public Pulumi.IO<string> SecondaryTableEndpoint { get; set; }

		/// <summary>
		/// A mapping of tags to assign to the resource.
		/// </summary>
		public Pulumi.IO<System.Collections.Generic.Dictionary<string, string>> Tags { get; set; }

		public Account(string name, AccountArgs args, Pulumi.ResourceOptions opts = default(Pulumi.ResourceOptions))
			: base("azure:storage/account:Account", name, SerialiseArgs(args), opts) {
			AccessTier = base.Outputs["accessTier"].Select(item => Protobuf.ToString(item));
			AccountEncryptionSource = base.Outputs["accountEncryptionSource"].Select(item => Protobuf.ToString(item));
			AccountKind = base.Outputs["accountKind"].Select(item => Protobuf.ToString(item));
			AccountReplicationType = base.Outputs["accountReplicationType"].Select(item => Protobuf.ToString(item));
			AccountTier = base.Outputs["accountTier"].Select(item => Protobuf.ToString(item));
			AccountType = base.Outputs["accountType"].Select(item => Protobuf.ToString(item));
			CustomDomain = base.Outputs["customDomain"].Select(item => AccountCustomDomain.FromProtobuf(item));
			EnableBlobEncryption = base.Outputs["enableBlobEncryption"].Select(item => Protobuf.ToBool(item));
			EnableFileEncryption = base.Outputs["enableFileEncryption"].Select(item => Protobuf.ToBool(item));
			EnableHttpsTrafficOnly = base.Outputs["enableHttpsTrafficOnly"].Select(item => Protobuf.ToBool(item));
			Identity = base.Outputs["identity"].Select(item => AccountIdentity.FromProtobuf(item));
			Location = base.Outputs["location"].Select(item => Protobuf.ToString(item));
			Name = base.Outputs["name"].Select(item => Protobuf.ToString(item));
			NetworkRules = base.Outputs["networkRules"].Select(item => AccountNetworkRule.FromProtobuf(item));
			PrimaryAccessKey = base.Outputs["primaryAccessKey"].Select(item => Protobuf.ToString(item));
			PrimaryBlobConnectionString = base.Outputs["primaryBlobConnectionString"].Select(item => Protobuf.ToString(item));
			PrimaryBlobEndpoint = base.Outputs["primaryBlobEndpoint"].Select(item => Protobuf.ToString(item));
			PrimaryConnectionString = base.Outputs["primaryConnectionString"].Select(item => Protobuf.ToString(item));
			PrimaryFileEndpoint = base.Outputs["primaryFileEndpoint"].Select(item => Protobuf.ToString(item));
			PrimaryLocation = base.Outputs["primaryLocation"].Select(item => Protobuf.ToString(item));
			PrimaryQueueEndpoint = base.Outputs["primaryQueueEndpoint"].Select(item => Protobuf.ToString(item));
			PrimaryTableEndpoint = base.Outputs["primaryTableEndpoint"].Select(item => Protobuf.ToString(item));
			ResourceGroupName = base.Outputs["resourceGroupName"].Select(item => Protobuf.ToString(item));
			SecondaryAccessKey = base.Outputs["secondaryAccessKey"].Select(item => Protobuf.ToString(item));
			SecondaryBlobConnectionString = base.Outputs["secondaryBlobConnectionString"].Select(item => Protobuf.ToString(item));
			SecondaryBlobEndpoint = base.Outputs["secondaryBlobEndpoint"].Select(item => Protobuf.ToString(item));
			SecondaryConnectionString = base.Outputs["secondaryConnectionString"].Select(item => Protobuf.ToString(item));
			SecondaryLocation = base.Outputs["secondaryLocation"].Select(item => Protobuf.ToString(item));
			SecondaryQueueEndpoint = base.Outputs["secondaryQueueEndpoint"].Select(item => Protobuf.ToString(item));
			SecondaryTableEndpoint = base.Outputs["secondaryTableEndpoint"].Select(item => Protobuf.ToString(item));
			Tags = base.Outputs["tags"].Select(item => Protobuf.ToMap(item));
		} // ctor

		private static Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>> SerialiseArgs(AccountArgs args) {
			var props = new Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>();
			props["accessTier"] = Protobuf.ToProtobuf(args.AccessTier);
			props["accountEncryptionSource"] = Protobuf.ToProtobuf(args.AccountEncryptionSource);
			props["accountKind"] = Protobuf.ToProtobuf(args.AccountKind);
			props["accountReplicationType"] = Protobuf.ToProtobuf(args.AccountReplicationType);
			props["accountTier"] = Protobuf.ToProtobuf(args.AccountTier);
			props["accountType"] = Protobuf.ToProtobuf(args.AccountType);
			props["customDomain"] = Protobuf.ToProtobuf(args.CustomDomain);
			props["enableBlobEncryption"] = Protobuf.ToProtobuf(args.EnableBlobEncryption);
			props["enableFileEncryption"] = Protobuf.ToProtobuf(args.EnableFileEncryption);
			props["enableHttpsTrafficOnly"] = Protobuf.ToProtobuf(args.EnableHttpsTrafficOnly);
			props["identity"] = Protobuf.ToProtobuf(args.Identity);
			props["location"] = Protobuf.ToProtobuf(args.Location);
			props["name"] = Protobuf.ToProtobuf(args.Name);
			props["networkRules"] = Protobuf.ToProtobuf(args.NetworkRules);
			props["resourceGroupName"] = Protobuf.ToProtobuf(args.ResourceGroupName);
			props["tags"] = Protobuf.ToProtobuf(args.Tags);
			props["primaryAccessKey"] = null; //out
			props["primaryBlobConnectionString"] = null; //out
			props["primaryBlobEndpoint"] = null; //out
			props["primaryConnectionString"] = null; //out
			props["primaryFileEndpoint"] = null; //out
			props["primaryLocation"] = null; //out
			props["primaryQueueEndpoint"] = null; //out
			props["primaryTableEndpoint"] = null; //out
			props["secondaryAccessKey"] = null; //out
			props["secondaryBlobConnectionString"] = null; //out
			props["secondaryBlobEndpoint"] = null; //out
			props["secondaryConnectionString"] = null; //out
			props["secondaryLocation"] = null; //out
			props["secondaryQueueEndpoint"] = null; //out
			props["secondaryTableEndpoint"] = null; //out
			return props;
		} // SerialiseArgs

	} // Account
} // Pulumi.Azure.Storage
