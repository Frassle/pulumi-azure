// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Azure.Keyvault {

	/// <summary>
	/// The set of arguments for constructing a Secret resource.
	/// </summary>
	public struct SecretArgs {
		/// <summary>
		/// Specifies the content type for the Key Vault Secret.
		/// </summary>
		public Pulumi.IO<string> ContentType { get; set; }

		/// <summary>
		/// Specifies the name of the Key Vault Secret. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// A mapping of tags to assign to the resource.
		/// </summary>
		public Pulumi.IO<System.Collections.Generic.Dictionary<string, string>> Tags { get; set; }

		/// <summary>
		/// Specifies the value of the Key Vault Secret.
		/// </summary>
		public Pulumi.IO<string> Value { get; set; }

		/// <summary>
		/// Specifies the URI used to access the Key Vault instance, available on the `azurerm_key_vault` resource.
		/// </summary>
		public Pulumi.IO<string> VaultUri { get; set; }

	} // SecretArgs

	/// <summary>
	/// Manages a Key Vault Secret.
	/// 
	/// > **Note:** All arguments including the secret value will be stored in the raw state as plain-text.
	/// [Read more about sensitive data in state](https://www.terraform.io/docs/state/sensitive-data.html).
	/// </summary>
	public class Secret : Pulumi.CustomResource {
		/// <summary>
		/// Specifies the content type for the Key Vault Secret.
		/// </summary>
		public Pulumi.IO<string> ContentType { get; set; }

		/// <summary>
		/// Specifies the name of the Key Vault Secret. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// A mapping of tags to assign to the resource.
		/// </summary>
		public Pulumi.IO<System.Collections.Generic.Dictionary<string, string>> Tags { get; set; }

		/// <summary>
		/// Specifies the value of the Key Vault Secret.
		/// </summary>
		public Pulumi.IO<string> Value { get; set; }

		/// <summary>
		/// Specifies the URI used to access the Key Vault instance, available on the `azurerm_key_vault` resource.
		/// </summary>
		public Pulumi.IO<string> VaultUri { get; set; }

		/// <summary>
		/// The current version of the Key Vault Secret.
		/// </summary>
		public Pulumi.IO<string> Version { get; set; }

		public Secret(string name, SecretArgs args, Pulumi.ResourceOptions opts = default(Pulumi.ResourceOptions))
			: base("azure:keyvault/secret:Secret", name, SerialiseArgs(args), opts) {
			ContentType = base.Outputs["contentType"].Select(item => Protobuf.ToString(item));
			Name = base.Outputs["name"].Select(item => Protobuf.ToString(item));
			Tags = base.Outputs["tags"].Select(item => Protobuf.ToMap(item));
			Value = base.Outputs["value"].Select(item => Protobuf.ToString(item));
			VaultUri = base.Outputs["vaultUri"].Select(item => Protobuf.ToString(item));
			Version = base.Outputs["version"].Select(item => Protobuf.ToString(item));
		} // ctor

		private static Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>> SerialiseArgs(SecretArgs args) {
			var props = new Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>();
			props["contentType"] = Protobuf.ToProtobuf(args.ContentType);
			props["name"] = Protobuf.ToProtobuf(args.Name);
			props["tags"] = Protobuf.ToProtobuf(args.Tags);
			props["value"] = Protobuf.ToProtobuf(args.Value);
			props["vaultUri"] = Protobuf.ToProtobuf(args.VaultUri);
			props["version"] = null; //out
			return props;
		} // SerialiseArgs

	} // Secret
} // Pulumi.Azure.Keyvault
