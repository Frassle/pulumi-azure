// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Azure.Keyvault {

	public sealed class KeyVaultArgsAccessPolicy : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> ApplicationId { get; set; }
		public Pulumi.IO<Pulumi.IO<string>[]> CertificatePermissions { get; set; }
		public Pulumi.IO<Pulumi.IO<string>[]> KeyPermissions { get; set; }
		public Pulumi.IO<string> ObjectId { get; set; }
		public Pulumi.IO<Pulumi.IO<string>[]> SecretPermissions { get; set; }
		public Pulumi.IO<string> TenantId { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("application_id", Protobuf.ToProtobuf(ApplicationId)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("certificate_permissions", Protobuf.ToProtobuf(CertificatePermissions, item => Protobuf.ToProtobuf(item))),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("key_permissions", Protobuf.ToProtobuf(KeyPermissions, item => Protobuf.ToProtobuf(item))),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("object_id", Protobuf.ToProtobuf(ObjectId)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("secret_permissions", Protobuf.ToProtobuf(SecretPermissions, item => Protobuf.ToProtobuf(item))),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("tenant_id", Protobuf.ToProtobuf(TenantId)));
		} // ToProtobuf

	} // KeyVaultArgsAccessPolicy

	public sealed class KeyVaultArgsNetworkAcl : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> Bypass { get; set; }
		public Pulumi.IO<string> DefaultAction { get; set; }
		public Pulumi.IO<Pulumi.IO<string>[]> IpRules { get; set; }
		public Pulumi.IO<Pulumi.IO<string>[]> VirtualNetworkSubnetIds { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("bypass", Protobuf.ToProtobuf(Bypass)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("default_action", Protobuf.ToProtobuf(DefaultAction)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("ip_rules", Protobuf.ToProtobuf(IpRules, item => Protobuf.ToProtobuf(item))),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("virtual_network_subnet_ids", Protobuf.ToProtobuf(VirtualNetworkSubnetIds, item => Protobuf.ToProtobuf(item))));
		} // ToProtobuf

	} // KeyVaultArgsNetworkAcl

	public sealed class KeyVaultArgsSku : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> Name { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("name", Protobuf.ToProtobuf(Name)));
		} // ToProtobuf

	} // KeyVaultArgsSku

	public sealed class KeyVaultAccessPolicy : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> ApplicationId { get; set; }
		public Pulumi.IO<string[]> CertificatePermissions { get; set; }
		public Pulumi.IO<string[]> KeyPermissions { get; set; }
		public Pulumi.IO<string> ObjectId { get; set; }
		public Pulumi.IO<string[]> SecretPermissions { get; set; }
		public Pulumi.IO<string> TenantId { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("application_id", Protobuf.ToProtobuf(ApplicationId)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("certificate_permissions", Protobuf.ToProtobuf(CertificatePermissions, item => Protobuf.ToProtobuf(item))),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("key_permissions", Protobuf.ToProtobuf(KeyPermissions, item => Protobuf.ToProtobuf(item))),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("object_id", Protobuf.ToProtobuf(ObjectId)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("secret_permissions", Protobuf.ToProtobuf(SecretPermissions, item => Protobuf.ToProtobuf(item))),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("tenant_id", Protobuf.ToProtobuf(TenantId)));
		} // ToProtobuf

		public static KeyVaultAccessPolicy FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new KeyVaultAccessPolicy();
				if (obj.Fields.ContainsKey("application_id")) {
					result.ApplicationId = Protobuf.ToString(obj.Fields["application_id"]);
				}
				if (obj.Fields.ContainsKey("certificate_permissions")) {
					result.CertificatePermissions = Protobuf.ToList(obj.Fields["certificate_permissions"], item => Protobuf.ToString(item));
				}
				if (obj.Fields.ContainsKey("key_permissions")) {
					result.KeyPermissions = Protobuf.ToList(obj.Fields["key_permissions"], item => Protobuf.ToString(item));
				}
				if (obj.Fields.ContainsKey("object_id")) {
					result.ObjectId = Protobuf.ToString(obj.Fields["object_id"]);
				}
				if (obj.Fields.ContainsKey("secret_permissions")) {
					result.SecretPermissions = Protobuf.ToList(obj.Fields["secret_permissions"], item => Protobuf.ToString(item));
				}
				if (obj.Fields.ContainsKey("tenant_id")) {
					result.TenantId = Protobuf.ToString(obj.Fields["tenant_id"]);
				}
			return result;
		} // FromProtobuf

	} // KeyVaultAccessPolicy

	public sealed class KeyVaultNetworkAcl : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> Bypass { get; set; }
		public Pulumi.IO<string> DefaultAction { get; set; }
		public Pulumi.IO<string[]> IpRules { get; set; }
		public Pulumi.IO<string[]> VirtualNetworkSubnetIds { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("bypass", Protobuf.ToProtobuf(Bypass)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("default_action", Protobuf.ToProtobuf(DefaultAction)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("ip_rules", Protobuf.ToProtobuf(IpRules, item => Protobuf.ToProtobuf(item))),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("virtual_network_subnet_ids", Protobuf.ToProtobuf(VirtualNetworkSubnetIds, item => Protobuf.ToProtobuf(item))));
		} // ToProtobuf

		public static KeyVaultNetworkAcl FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new KeyVaultNetworkAcl();
				if (obj.Fields.ContainsKey("bypass")) {
					result.Bypass = Protobuf.ToString(obj.Fields["bypass"]);
				}
				if (obj.Fields.ContainsKey("default_action")) {
					result.DefaultAction = Protobuf.ToString(obj.Fields["default_action"]);
				}
				if (obj.Fields.ContainsKey("ip_rules")) {
					result.IpRules = Protobuf.ToList(obj.Fields["ip_rules"], item => Protobuf.ToString(item));
				}
				if (obj.Fields.ContainsKey("virtual_network_subnet_ids")) {
					result.VirtualNetworkSubnetIds = Protobuf.ToList(obj.Fields["virtual_network_subnet_ids"], item => Protobuf.ToString(item));
				}
			return result;
		} // FromProtobuf

	} // KeyVaultNetworkAcl

	public sealed class KeyVaultSku : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> Name { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("name", Protobuf.ToProtobuf(Name)));
		} // ToProtobuf

		public static KeyVaultSku FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			var result = new KeyVaultSku();
				if (obj.Fields.ContainsKey("name")) {
					result.Name = Protobuf.ToString(obj.Fields["name"]);
				}
			return result;
		} // FromProtobuf

	} // KeyVaultSku

	/// <summary>
	/// The set of arguments for constructing a KeyVault resource.
	/// </summary>
	public struct KeyVaultArgs {
		/// <summary>
		/// An access policy block as described below. A maximum of 16 may be declared.
		/// </summary>
		public Pulumi.IO<Pulumi.IO<KeyVaultArgsAccessPolicy>[]> AccessPolicies { get; set; }

		/// <summary>
		/// Boolean flag to specify whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault. Defaults to `false`.
		/// </summary>
		public Pulumi.IO<bool> EnabledForDeployment { get; set; }

		/// <summary>
		/// Boolean flag to specify whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys. Defaults to `false`.
		/// </summary>
		public Pulumi.IO<bool> EnabledForDiskEncryption { get; set; }

		/// <summary>
		/// Boolean flag to specify whether Azure Resource Manager is permitted to retrieve secrets from the key vault. Defaults to `false`.
		/// </summary>
		public Pulumi.IO<bool> EnabledForTemplateDeployment { get; set; }

		/// <summary>
		/// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Location { get; set; }

		/// <summary>
		/// Specifies the name of the Key Vault. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// A `network_acls` block as defined below.
		/// </summary>
		public Pulumi.IO<KeyVaultArgsNetworkAcl> NetworkAcls { get; set; }

		/// <summary>
		/// The name of the resource group in which to create the Key Vault. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ResourceGroupName { get; set; }

		/// <summary>
		/// An SKU block as described below.
		/// </summary>
		public Pulumi.IO<Pulumi.IO<KeyVaultArgsSku>[]> Sku { get; set; }

		/// <summary>
		/// A mapping of tags to assign to the resource.
		/// </summary>
		public Pulumi.IO<System.Collections.Generic.Dictionary<string, string>> Tags { get; set; }

		/// <summary>
		/// The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault.
		/// </summary>
		public Pulumi.IO<string> TenantId { get; set; }

	} // KeyVaultArgs

	/// <summary>
	/// Manages a Key Vault.
	/// 
	/// > **NOTE:** It's possible to define Key Vault Access Policies both within the `azurerm_key_vault` resource via the `access_policy` block and by using the `azurerm_key_vault_access_policy` resource. However it's not possible to use both methods to manage Access Policies within a KeyVault, since there'll be conflicts.
	/// </summary>
	public class KeyVault : Pulumi.CustomResource {
		/// <summary>
		/// An access policy block as described below. A maximum of 16 may be declared.
		/// </summary>
		public Pulumi.IO<KeyVaultAccessPolicy[]> AccessPolicies { get; set; }

		/// <summary>
		/// Boolean flag to specify whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault. Defaults to `false`.
		/// </summary>
		public Pulumi.IO<bool> EnabledForDeployment { get; set; }

		/// <summary>
		/// Boolean flag to specify whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys. Defaults to `false`.
		/// </summary>
		public Pulumi.IO<bool> EnabledForDiskEncryption { get; set; }

		/// <summary>
		/// Boolean flag to specify whether Azure Resource Manager is permitted to retrieve secrets from the key vault. Defaults to `false`.
		/// </summary>
		public Pulumi.IO<bool> EnabledForTemplateDeployment { get; set; }

		/// <summary>
		/// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Location { get; set; }

		/// <summary>
		/// Specifies the name of the Key Vault. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// A `network_acls` block as defined below.
		/// </summary>
		public Pulumi.IO<KeyVaultNetworkAcl> NetworkAcls { get; set; }

		/// <summary>
		/// The name of the resource group in which to create the Key Vault. Changing this forces a new resource to be created.
		/// </summary>
		public Pulumi.IO<string> ResourceGroupName { get; set; }

		/// <summary>
		/// An SKU block as described below.
		/// </summary>
		public Pulumi.IO<KeyVaultSku[]> Sku { get; set; }

		/// <summary>
		/// A mapping of tags to assign to the resource.
		/// </summary>
		public Pulumi.IO<System.Collections.Generic.Dictionary<string, string>> Tags { get; set; }

		/// <summary>
		/// The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault.
		/// </summary>
		public Pulumi.IO<string> TenantId { get; set; }

		/// <summary>
		/// The URI of the Key Vault, used for performing operations on keys and secrets.
		/// </summary>
		public Pulumi.IO<string> VaultUri { get; set; }

		public KeyVault(string name, KeyVaultArgs args, Pulumi.ResourceOptions opts = default(Pulumi.ResourceOptions))
			: base("azure:keyvault/keyVault:KeyVault", name, SerialiseArgs(args), opts) {
			AccessPolicies = base.Outputs["accessPolicies"].Select(item => Protobuf.ToList(item, item1 => KeyVaultAccessPolicy.FromProtobuf(item1)));
			EnabledForDeployment = base.Outputs["enabledForDeployment"].Select(item => Protobuf.ToBool(item));
			EnabledForDiskEncryption = base.Outputs["enabledForDiskEncryption"].Select(item => Protobuf.ToBool(item));
			EnabledForTemplateDeployment = base.Outputs["enabledForTemplateDeployment"].Select(item => Protobuf.ToBool(item));
			Location = base.Outputs["location"].Select(item => Protobuf.ToString(item));
			Name = base.Outputs["name"].Select(item => Protobuf.ToString(item));
			NetworkAcls = base.Outputs["networkAcls"].Select(item => KeyVaultNetworkAcl.FromProtobuf(item));
			ResourceGroupName = base.Outputs["resourceGroupName"].Select(item => Protobuf.ToString(item));
			Sku = base.Outputs["sku"].Select(item => Protobuf.ToList(item, item1 => KeyVaultSku.FromProtobuf(item1)));
			Tags = base.Outputs["tags"].Select(item => Protobuf.ToMap(item));
			TenantId = base.Outputs["tenantId"].Select(item => Protobuf.ToString(item));
			VaultUri = base.Outputs["vaultUri"].Select(item => Protobuf.ToString(item));
		} // ctor

		private static Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>> SerialiseArgs(KeyVaultArgs args) {
			var props = new Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>();
			props["accessPolicies"] = Protobuf.ToProtobuf(args.AccessPolicies, item => Protobuf.ToProtobuf(item));
			props["enabledForDeployment"] = Protobuf.ToProtobuf(args.EnabledForDeployment);
			props["enabledForDiskEncryption"] = Protobuf.ToProtobuf(args.EnabledForDiskEncryption);
			props["enabledForTemplateDeployment"] = Protobuf.ToProtobuf(args.EnabledForTemplateDeployment);
			props["location"] = Protobuf.ToProtobuf(args.Location);
			props["name"] = Protobuf.ToProtobuf(args.Name);
			props["networkAcls"] = Protobuf.ToProtobuf(args.NetworkAcls);
			props["resourceGroupName"] = Protobuf.ToProtobuf(args.ResourceGroupName);
			props["sku"] = Protobuf.ToProtobuf(args.Sku, item => Protobuf.ToProtobuf(item));
			props["tags"] = Protobuf.ToProtobuf(args.Tags);
			props["tenantId"] = Protobuf.ToProtobuf(args.TenantId);
			props["vaultUri"] = null; //out
			return props;
		} // SerialiseArgs

	} // KeyVault
} // Pulumi.Azure.Keyvault
